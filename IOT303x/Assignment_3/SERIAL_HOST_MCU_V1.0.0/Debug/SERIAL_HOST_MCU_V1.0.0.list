
SERIAL_HOST_MCU_V1.0.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007a58  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001cf4  08007bf8  08007bf8  00008bf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080098ec  080098ec  0000b0bc  2**0
                  CONTENTS
  4 .ARM          00000008  080098ec  080098ec  0000a8ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080098f4  080098f4  0000b0bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080098f4  080098f4  0000a8f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080098f8  080098f8  0000a8f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000bc  20000000  080098fc  0000b000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000171c  200000bc  080099b8  0000b0bc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200017d8  080099b8  0000b7d8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000b0bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0003de41  00000000  00000000  0000b0ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003dfd  00000000  00000000  00048f2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001460  00000000  00000000  0004cd30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000c6  00000000  00000000  0004e190  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012f37  00000000  00000000  0004e256  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ef59  00000000  00000000  0006118d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005a82a  00000000  00000000  000700e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000be  00000000  00000000  000ca910  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000057b4  00000000  00000000  000ca9d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007c  00000000  00000000  000d0184  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00001100  00000000  00000000  000d0200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000bc 	.word	0x200000bc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08007be0 	.word	0x08007be0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000c0 	.word	0x200000c0
 80001dc:	08007be0 	.word	0x08007be0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
 * @retval:		None
 *
 * @note:		None
 */
int main ()
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	AppInitManager();
 8000284:	f000 f80e 	bl	80002a4 <AppInitManager>

	// Initializing the main program to the previous state of the device before power-off
	SetStateApp(STATE_APP_STARTUP);
 8000288:	2000      	movs	r0, #0
 800028a:	f000 f871 	bl	8000370 <SetStateApp>

	// Adding initialization events when the system starts operating to the Queue
	EventSchedulerAdd(EVENT_APP_INIT);
 800028e:	2001      	movs	r0, #1
 8000290:	f002 fcb2 	bl	8002bf8 <EventSchedulerAdd>

	while (1)
	{
		processTimerScheduler();
 8000294:	f002 fe2a 	bl	8002eec <processTimerScheduler>
		processEventScheduler();
 8000298:	f002 fcc4 	bl	8002c24 <processEventScheduler>

		// Processing received messages in the format from the simulation software
		processSerialReceiverCustom();
 800029c:	f000 fd8a 	bl	8000db4 <processSerialReceiverCustom>
	{
 80002a0:	bf00      	nop
 80002a2:	e7f7      	b.n	8000294 <main+0x14>

080002a4 <AppInitManager>:
 * @retval:		None
 *
 * @note:		None
 */
void AppInitManager (void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b082      	sub	sp, #8
 80002a8:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 80002aa:	f001 f9b5 	bl	8001618 <SystemCoreClockUpdate>
	TimerInit();
 80002ae:	f002 fd21 	bl	8002cf4 <TimerInit>

	// Initializing the buffer to store the event list of the program
	EventSchedulerInit(AppStateManager);
 80002b2:	4818      	ldr	r0, [pc, #96]	@ (8000314 <AppInitManager+0x70>)
 80002b4:	f002 fc84 	bl	8002bc0 <EventSchedulerInit>

	EventButton_Init();
 80002b8:	f001 ff18 	bl	80020ec <EventButton_Init>
	BuzzerControl_Init();
 80002bc:	f001 ffe8 	bl	8002290 <BuzzerControl_Init>
	LedControl_Init();
 80002c0:	f002 f946 	bl	8002550 <LedControl_Init>
	TemHumSensor_Init();
 80002c4:	f002 ffd5 	bl	8003272 <TemHumSensor_Init>

	// Configure the ADC peripheral to operate in DMA mode to read data from the light sensor
	LightSensor_Init(ADC_READ_MODE_DMA);
 80002c8:	2000      	movs	r0, #0
 80002ca:	f002 fefb 	bl	80030c4 <LightSensor_Init>

	SerialCustom_Init();
 80002ce:	f000 f86b 	bl	80003a8 <SerialCustom_Init>

	Ucglib4WireSWSPI_begin(&g_ucg, UCG_FONT_MODE_SOLID);
 80002d2:	2100      	movs	r1, #0
 80002d4:	4810      	ldr	r0, [pc, #64]	@ (8000318 <AppInitManager+0x74>)
 80002d6:	f003 fc59 	bl	8003b8c <Ucglib4WireSWSPI_begin>
	ucg_ClearScreen(&g_ucg);
 80002da:	480f      	ldr	r0, [pc, #60]	@ (8000318 <AppInitManager+0x74>)
 80002dc:	f003 fc9d 	bl	8003c1a <ucg_ClearScreen>
	ucg_SetFont(&g_ucg, ucg_font_ncenR10_hf);
 80002e0:	490e      	ldr	r1, [pc, #56]	@ (800031c <AppInitManager+0x78>)
 80002e2:	480d      	ldr	r0, [pc, #52]	@ (8000318 <AppInitManager+0x74>)
 80002e4:	f004 fdb2 	bl	8004e4c <ucg_SetFont>
	ucg_SetColor(&g_ucg, 0, 255, 255, 255);
 80002e8:	23ff      	movs	r3, #255	@ 0xff
 80002ea:	9300      	str	r3, [sp, #0]
 80002ec:	23ff      	movs	r3, #255	@ 0xff
 80002ee:	22ff      	movs	r2, #255	@ 0xff
 80002f0:	2100      	movs	r1, #0
 80002f2:	4809      	ldr	r0, [pc, #36]	@ (8000318 <AppInitManager+0x74>)
 80002f4:	f004 fe89 	bl	800500a <ucg_SetColor>
	ucg_SetColor(&g_ucg, 1, 0, 0, 0);
 80002f8:	2300      	movs	r3, #0
 80002fa:	9300      	str	r3, [sp, #0]
 80002fc:	2300      	movs	r3, #0
 80002fe:	2200      	movs	r2, #0
 8000300:	2101      	movs	r1, #1
 8000302:	4805      	ldr	r0, [pc, #20]	@ (8000318 <AppInitManager+0x74>)
 8000304:	f004 fe81 	bl	800500a <ucg_SetColor>
	ucg_SetRotate180(&g_ucg);
 8000308:	4803      	ldr	r0, [pc, #12]	@ (8000318 <AppInitManager+0x74>)
 800030a:	f004 ff79 	bl	8005200 <ucg_SetRotate180>
}
 800030e:	bf00      	nop
 8000310:	46bd      	mov	sp, r7
 8000312:	bd80      	pop	{r7, pc}
 8000314:	08000321 	.word	0x08000321
 8000318:	200000d8 	.word	0x200000d8
 800031c:	08008944 	.word	0x08008944

08000320 <AppStateManager>:
 * @retval:		None
 *
 * @note:		None
 */
void AppStateManager (uint8_t event)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0
 8000326:	4603      	mov	r3, r0
 8000328:	71fb      	strb	r3, [r7, #7]
	switch (GetStateApp())
 800032a:	f000 f831 	bl	8000390 <GetStateApp>
 800032e:	4603      	mov	r3, r0
 8000330:	2b02      	cmp	r3, #2
 8000332:	d014      	beq.n	800035e <AppStateManager+0x3e>
 8000334:	2b02      	cmp	r3, #2
 8000336:	dc14      	bgt.n	8000362 <AppStateManager+0x42>
 8000338:	2b00      	cmp	r3, #0
 800033a:	d002      	beq.n	8000342 <AppStateManager+0x22>
 800033c:	2b01      	cmp	r3, #1
 800033e:	d009      	beq.n	8000354 <AppStateManager+0x34>

		case STATE_APP_RESET:
			break;

		default:
			break;
 8000340:	e00f      	b.n	8000362 <AppStateManager+0x42>
			if (event == EVENT_APP_INIT)
 8000342:	79fb      	ldrb	r3, [r7, #7]
 8000344:	2b01      	cmp	r3, #1
 8000346:	d10e      	bne.n	8000366 <AppStateManager+0x46>
				LoadConfiguration();
 8000348:	f000 f8be 	bl	80004c8 <LoadConfiguration>
				SetStateApp(STATE_APP_IDLE);
 800034c:	2001      	movs	r0, #1
 800034e:	f000 f80f 	bl	8000370 <SetStateApp>
		} break;
 8000352:	e008      	b.n	8000366 <AppStateManager+0x46>
			DeviceStateMachine(event);
 8000354:	79fb      	ldrb	r3, [r7, #7]
 8000356:	4618      	mov	r0, r3
 8000358:	f000 f8f0 	bl	800053c <DeviceStateMachine>
		} break;
 800035c:	e004      	b.n	8000368 <AppStateManager+0x48>
			break;
 800035e:	bf00      	nop
 8000360:	e002      	b.n	8000368 <AppStateManager+0x48>
			break;
 8000362:	bf00      	nop
 8000364:	e000      	b.n	8000368 <AppStateManager+0x48>
		} break;
 8000366:	bf00      	nop
	}
}
 8000368:	bf00      	nop
 800036a:	3708      	adds	r7, #8
 800036c:	46bd      	mov	sp, r7
 800036e:	bd80      	pop	{r7, pc}

08000370 <SetStateApp>:
 * @retval:		None
 *
 * @note:		None
 */
void SetStateApp (state_app_t state)
{
 8000370:	b480      	push	{r7}
 8000372:	b083      	sub	sp, #12
 8000374:	af00      	add	r7, sp, #0
 8000376:	4603      	mov	r3, r0
 8000378:	71fb      	strb	r3, [r7, #7]
	g_eCurrentState = state;
 800037a:	4a04      	ldr	r2, [pc, #16]	@ (800038c <SetStateApp+0x1c>)
 800037c:	79fb      	ldrb	r3, [r7, #7]
 800037e:	7013      	strb	r3, [r2, #0]
}
 8000380:	bf00      	nop
 8000382:	370c      	adds	r7, #12
 8000384:	46bd      	mov	sp, r7
 8000386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038a:	4770      	bx	lr
 800038c:	2000018c 	.word	0x2000018c

08000390 <GetStateApp>:
 * @retval:		g_eCurrentState - The current state of the program
 *
 * @note:		None
 */
state_app_t GetStateApp (void)
{
 8000390:	b480      	push	{r7}
 8000392:	af00      	add	r7, sp, #0
	return g_eCurrentState;
 8000394:	4b03      	ldr	r3, [pc, #12]	@ (80003a4 <GetStateApp+0x14>)
 8000396:	781b      	ldrb	r3, [r3, #0]
}
 8000398:	4618      	mov	r0, r3
 800039a:	46bd      	mov	sp, r7
 800039c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a0:	4770      	bx	lr
 80003a2:	bf00      	nop
 80003a4:	2000018c 	.word	0x2000018c

080003a8 <SerialCustom_Init>:
 * @retval:		None
 *
 * @note:		None
 */
void SerialCustom_Init (void)
{
 80003a8:	b580      	push	{r7, lr}
 80003aa:	af00      	add	r7, sp, #0
	bufInit(g_strRxBufData, &g_serialQueueRx, sizeof(g_strRxBufData[0]), SIZE_QUEUE_DATA_RX);
 80003ac:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80003b0:	2201      	movs	r2, #1
 80003b2:	4904      	ldr	r1, [pc, #16]	@ (80003c4 <SerialCustom_Init+0x1c>)
 80003b4:	4804      	ldr	r0, [pc, #16]	@ (80003c8 <SerialCustom_Init+0x20>)
 80003b6:	f004 ff3d 	bl	8005234 <bufInit>
	USART2_Init();
 80003ba:	f000 f807 	bl	80003cc <USART2_Init>
}
 80003be:	bf00      	nop
 80003c0:	bd80      	pop	{r7, pc}
 80003c2:	bf00      	nop
 80003c4:	2000029c 	.word	0x2000029c
 80003c8:	2000019c 	.word	0x2000019c

080003cc <USART2_Init>:
 * @retval:		None
 *
 * @note:		None
 */
void USART2_Init (void)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b088      	sub	sp, #32
 80003d0:	af00      	add	r7, sp, #0
	USART_InitTypeDef	USART_InitStruct;
	NVIC_InitTypeDef	NVIC_InitStruct;

	/* Initialize GPIO with alternate function in Open-drain mode--------------------------*/
	// Clock supply for GPIO---------------------------------------------------------------
	RCC_AHB1PeriphClockCmd(USART2_GPIO_RCC, ENABLE);
 80003d2:	2101      	movs	r1, #1
 80003d4:	2001      	movs	r0, #1
 80003d6:	f001 fc31 	bl	8001c3c <RCC_AHB1PeriphClockCmd>

	// Configure alternate function for GPIO pin-------------------------------------------
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80003da:	2302      	movs	r3, #2
 80003dc:	773b      	strb	r3, [r7, #28]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80003de:	2302      	movs	r3, #2
 80003e0:	777b      	strb	r3, [r7, #29]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 80003e2:	2300      	movs	r3, #0
 80003e4:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 80003e6:	2301      	movs	r3, #1
 80003e8:	77fb      	strb	r3, [r7, #31]

	GPIO_InitStruct.GPIO_Pin = USART2_TX_GPIO_PIN | USART2_RX_GPIO_PIN;
 80003ea:	230c      	movs	r3, #12
 80003ec:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART2_GPIO_PORT, &GPIO_InitStruct);
 80003ee:	f107 0318 	add.w	r3, r7, #24
 80003f2:	4619      	mov	r1, r3
 80003f4:	4821      	ldr	r0, [pc, #132]	@ (800047c <USART2_Init+0xb0>)
 80003f6:	f001 fa51 	bl	800189c <GPIO_Init>

	// Mapping Pin AF----------------------------------------------------------------------
	GPIO_PinAFConfig(USART2_GPIO_PORT, GPIO_PinSource2, GPIO_AF_USART2);
 80003fa:	2207      	movs	r2, #7
 80003fc:	2102      	movs	r1, #2
 80003fe:	481f      	ldr	r0, [pc, #124]	@ (800047c <USART2_Init+0xb0>)
 8000400:	f001 fb2a 	bl	8001a58 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(USART2_GPIO_PORT, GPIO_PinSource3, GPIO_AF_USART2);
 8000404:	2207      	movs	r2, #7
 8000406:	2103      	movs	r1, #3
 8000408:	481c      	ldr	r0, [pc, #112]	@ (800047c <USART2_Init+0xb0>)
 800040a:	f001 fb25 	bl	8001a58 <GPIO_PinAFConfig>

	/* Configure USART2--------------------------------------------------------------------*/
	// Clock supply for USART2-------------------------------------------------------------
	RCC_APB1PeriphClockCmd(USART2_RCC, ENABLE);
 800040e:	2101      	movs	r1, #1
 8000410:	f44f 3000 	mov.w	r0, #131072	@ 0x20000
 8000414:	f001 fc32 	bl	8001c7c <RCC_APB1PeriphClockCmd>

	// Configure USART2--------------------------------------------------------------------
	USART_InitStruct.USART_BaudRate = USART_BAUDRATE;
 8000418:	f44f 4361 	mov.w	r3, #57600	@ 0xe100
 800041c:	60bb      	str	r3, [r7, #8]
	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 800041e:	2300      	movs	r3, #0
 8000420:	82bb      	strh	r3, [r7, #20]
	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
 8000422:	230c      	movs	r3, #12
 8000424:	827b      	strh	r3, [r7, #18]
	USART_InitStruct.USART_Parity = USART_Parity_No;
 8000426:	2300      	movs	r3, #0
 8000428:	823b      	strh	r3, [r7, #16]
	USART_InitStruct.USART_StopBits = USART_StopBits_1;
 800042a:	2300      	movs	r3, #0
 800042c:	81fb      	strh	r3, [r7, #14]
	USART_InitStruct.USART_WordLength = USART_WordLength_8b;
 800042e:	2300      	movs	r3, #0
 8000430:	81bb      	strh	r3, [r7, #12]

	USART_Init(USART2, &USART_InitStruct);
 8000432:	f107 0308 	add.w	r3, r7, #8
 8000436:	4619      	mov	r1, r3
 8000438:	4811      	ldr	r0, [pc, #68]	@ (8000480 <USART2_Init+0xb4>)
 800043a:	f001 fc7f 	bl	8001d3c <USART_Init>

	USART_Cmd(USART2, ENABLE);
 800043e:	2101      	movs	r1, #1
 8000440:	480f      	ldr	r0, [pc, #60]	@ (8000480 <USART2_Init+0xb4>)
 8000442:	f001 fd35 	bl	8001eb0 <USART_Cmd>

	/* Configure interrupts for USART------------------------------------------------------*/
	// Clock supply for NVIC---------------------------------------------------------------
	USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
 8000446:	2201      	movs	r2, #1
 8000448:	f240 5125 	movw	r1, #1317	@ 0x525
 800044c:	480c      	ldr	r0, [pc, #48]	@ (8000480 <USART2_Init+0xb4>)
 800044e:	f001 fd71 	bl	8001f34 <USART_ITConfig>

	// NVIC Configuration------------------------------------------------------------------
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 8000452:	f44f 60a0 	mov.w	r0, #1280	@ 0x500
 8000456:	f001 f9ab 	bl	80017b0 <NVIC_PriorityGroupConfig>

	// Configure NVIC----------------------------------------------------------------------
	NVIC_InitStruct.NVIC_IRQChannel = USART2_IRQn;
 800045a:	2326      	movs	r3, #38	@ 0x26
 800045c:	713b      	strb	r3, [r7, #4]
	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 800045e:	2301      	movs	r3, #1
 8000460:	71fb      	strb	r3, [r7, #7]
	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
 8000462:	2300      	movs	r3, #0
 8000464:	717b      	strb	r3, [r7, #5]
	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
 8000466:	2300      	movs	r3, #0
 8000468:	71bb      	strb	r3, [r7, #6]

	NVIC_Init(&NVIC_InitStruct);
 800046a:	1d3b      	adds	r3, r7, #4
 800046c:	4618      	mov	r0, r3
 800046e:	f001 f9b3 	bl	80017d8 <NVIC_Init>
}
 8000472:	bf00      	nop
 8000474:	3720      	adds	r7, #32
 8000476:	46bd      	mov	sp, r7
 8000478:	bd80      	pop	{r7, pc}
 800047a:	bf00      	nop
 800047c:	40020000 	.word	0x40020000
 8000480:	40004400 	.word	0x40004400

08000484 <USART2Modify_IRQHandler>:
 * @retval:		None
 *
 * @note:		None
 */
void USART2Modify_IRQHandler (void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
	if (USART_GetITStatus(USART2, USART_IT_RXNE) == SET)
 8000488:	f240 5125 	movw	r1, #1317	@ 0x525
 800048c:	480b      	ldr	r0, [pc, #44]	@ (80004bc <USART2Modify_IRQHandler+0x38>)
 800048e:	f001 fdb5 	bl	8001ffc <USART_GetITStatus>
 8000492:	4603      	mov	r3, r0
 8000494:	2b01      	cmp	r3, #1
 8000496:	d10a      	bne.n	80004ae <USART2Modify_IRQHandler+0x2a>
	{
		g_Data_Receive = (uint8_t)USART_ReceiveData(USART2);
 8000498:	4808      	ldr	r0, [pc, #32]	@ (80004bc <USART2Modify_IRQHandler+0x38>)
 800049a:	f001 fd3b 	bl	8001f14 <USART_ReceiveData>
 800049e:	4603      	mov	r3, r0
 80004a0:	b2da      	uxtb	r2, r3
 80004a2:	4b07      	ldr	r3, [pc, #28]	@ (80004c0 <USART2Modify_IRQHandler+0x3c>)
 80004a4:	701a      	strb	r2, [r3, #0]
		bufEnDat(&g_serialQueueRx, &g_Data_Receive);
 80004a6:	4906      	ldr	r1, [pc, #24]	@ (80004c0 <USART2Modify_IRQHandler+0x3c>)
 80004a8:	4806      	ldr	r0, [pc, #24]	@ (80004c4 <USART2Modify_IRQHandler+0x40>)
 80004aa:	f004 ff29 	bl	8005300 <bufEnDat>
	}

	USART_ClearITPendingBit(USART2, USART_IT_RXNE);
 80004ae:	f240 5125 	movw	r1, #1317	@ 0x525
 80004b2:	4802      	ldr	r0, [pc, #8]	@ (80004bc <USART2Modify_IRQHandler+0x38>)
 80004b4:	f001 fdfd 	bl	80020b2 <USART_ClearITPendingBit>
}
 80004b8:	bf00      	nop
 80004ba:	bd80      	pop	{r7, pc}
 80004bc:	40004400 	.word	0x40004400
 80004c0:	200002bd 	.word	0x200002bd
 80004c4:	2000029c 	.word	0x2000029c

080004c8 <LoadConfiguration>:
 * @retval:		None
 *
 * @note:		None
 */
void LoadConfiguration (void)
{
 80004c8:	b5b0      	push	{r4, r5, r7, lr}
 80004ca:	b08c      	sub	sp, #48	@ 0x30
 80004cc:	af02      	add	r7, sp, #8
	ucg_DrawString(&g_ucg, 0, 40, 0, "IOT Programming");
 80004ce:	4b16      	ldr	r3, [pc, #88]	@ (8000528 <LoadConfiguration+0x60>)
 80004d0:	9300      	str	r3, [sp, #0]
 80004d2:	2300      	movs	r3, #0
 80004d4:	2228      	movs	r2, #40	@ 0x28
 80004d6:	2100      	movs	r1, #0
 80004d8:	4814      	ldr	r0, [pc, #80]	@ (800052c <LoadConfiguration+0x64>)
 80004da:	f004 fbf3 	bl	8004cc4 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 55, 65, 0, "by");
 80004de:	4b14      	ldr	r3, [pc, #80]	@ (8000530 <LoadConfiguration+0x68>)
 80004e0:	9300      	str	r3, [sp, #0]
 80004e2:	2300      	movs	r3, #0
 80004e4:	2241      	movs	r2, #65	@ 0x41
 80004e6:	2137      	movs	r1, #55	@ 0x37
 80004e8:	4810      	ldr	r0, [pc, #64]	@ (800052c <LoadConfiguration+0x64>)
 80004ea:	f004 fbeb 	bl	8004cc4 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 5, 90, 0, "Lumi Smarthome");
 80004ee:	4b11      	ldr	r3, [pc, #68]	@ (8000534 <LoadConfiguration+0x6c>)
 80004f0:	9300      	str	r3, [sp, #0]
 80004f2:	2300      	movs	r3, #0
 80004f4:	225a      	movs	r2, #90	@ 0x5a
 80004f6:	2105      	movs	r1, #5
 80004f8:	480c      	ldr	r0, [pc, #48]	@ (800052c <LoadConfiguration+0x64>)
 80004fa:	f004 fbe3 	bl	8004cc4 <ucg_DrawString>

	char text[] = "IOT Programming by Lumi Smarthome";
 80004fe:	4b0e      	ldr	r3, [pc, #56]	@ (8000538 <LoadConfiguration+0x70>)
 8000500:	1d3c      	adds	r4, r7, #4
 8000502:	461d      	mov	r5, r3
 8000504:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000506:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000508:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800050a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800050c:	682b      	ldr	r3, [r5, #0]
 800050e:	8023      	strh	r3, [r4, #0]
	Serial_SendPacketCustom(CMD_OPT, CMD_ID_LCD, CMD_TYPE_GET, (uint8_t*)text, sizeof(text));
 8000510:	1d3b      	adds	r3, r7, #4
 8000512:	2222      	movs	r2, #34	@ 0x22
 8000514:	9200      	str	r2, [sp, #0]
 8000516:	2200      	movs	r2, #0
 8000518:	2187      	movs	r1, #135	@ 0x87
 800051a:	2000      	movs	r0, #0
 800051c:	f000 fb86 	bl	8000c2c <Serial_SendPacketCustom>
}
 8000520:	bf00      	nop
 8000522:	3728      	adds	r7, #40	@ 0x28
 8000524:	46bd      	mov	sp, r7
 8000526:	bdb0      	pop	{r4, r5, r7, pc}
 8000528:	08007bf8 	.word	0x08007bf8
 800052c:	200000d8 	.word	0x200000d8
 8000530:	08007c08 	.word	0x08007c08
 8000534:	08007c0c 	.word	0x08007c0c
 8000538:	08007c1c 	.word	0x08007c1c

0800053c <DeviceStateMachine>:
 * @retval:		None
 *
 * @note:		None
 */
void DeviceStateMachine (uint8_t event)
{
 800053c:	b580      	push	{r7, lr}
 800053e:	b084      	sub	sp, #16
 8000540:	af02      	add	r7, sp, #8
 8000542:	4603      	mov	r3, r0
 8000544:	71fb      	strb	r3, [r7, #7]
	switch (event)
 8000546:	79fb      	ldrb	r3, [r7, #7]
 8000548:	3b01      	subs	r3, #1
 800054a:	2b3a      	cmp	r3, #58	@ 0x3a
 800054c:	f200 825a 	bhi.w	8000a04 <DeviceStateMachine+0x4c8>
 8000550:	a201      	add	r2, pc, #4	@ (adr r2, 8000558 <DeviceStateMachine+0x1c>)
 8000552:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000556:	bf00      	nop
 8000558:	0800076f 	.word	0x0800076f
 800055c:	080007dd 	.word	0x080007dd
 8000560:	08000a05 	.word	0x08000a05
 8000564:	0800084b 	.word	0x0800084b
 8000568:	080008b9 	.word	0x080008b9
 800056c:	08000a05 	.word	0x08000a05
 8000570:	08000a05 	.word	0x08000a05
 8000574:	08000a05 	.word	0x08000a05
 8000578:	08000a05 	.word	0x08000a05
 800057c:	08000a05 	.word	0x08000a05
 8000580:	08000a05 	.word	0x08000a05
 8000584:	08000a05 	.word	0x08000a05
 8000588:	08000a05 	.word	0x08000a05
 800058c:	08000a05 	.word	0x08000a05
 8000590:	08000a05 	.word	0x08000a05
 8000594:	08000a05 	.word	0x08000a05
 8000598:	08000a05 	.word	0x08000a05
 800059c:	08000a05 	.word	0x08000a05
 80005a0:	08000a05 	.word	0x08000a05
 80005a4:	08000a05 	.word	0x08000a05
 80005a8:	08000a05 	.word	0x08000a05
 80005ac:	08000a05 	.word	0x08000a05
 80005b0:	08000a05 	.word	0x08000a05
 80005b4:	08000a05 	.word	0x08000a05
 80005b8:	08000a05 	.word	0x08000a05
 80005bc:	08000a05 	.word	0x08000a05
 80005c0:	08000645 	.word	0x08000645
 80005c4:	08000a05 	.word	0x08000a05
 80005c8:	08000a05 	.word	0x08000a05
 80005cc:	08000a05 	.word	0x08000a05
 80005d0:	08000989 	.word	0x08000989
 80005d4:	08000a05 	.word	0x08000a05
 80005d8:	08000a05 	.word	0x08000a05
 80005dc:	08000a05 	.word	0x08000a05
 80005e0:	080009bb 	.word	0x080009bb
 80005e4:	08000a05 	.word	0x08000a05
 80005e8:	08000a05 	.word	0x08000a05
 80005ec:	08000a05 	.word	0x08000a05
 80005f0:	08000a05 	.word	0x08000a05
 80005f4:	08000a05 	.word	0x08000a05
 80005f8:	08000a05 	.word	0x08000a05
 80005fc:	08000a05 	.word	0x08000a05
 8000600:	08000a05 	.word	0x08000a05
 8000604:	08000a05 	.word	0x08000a05
 8000608:	08000a05 	.word	0x08000a05
 800060c:	08000a05 	.word	0x08000a05
 8000610:	08000a05 	.word	0x08000a05
 8000614:	08000a05 	.word	0x08000a05
 8000618:	08000a05 	.word	0x08000a05
 800061c:	08000a05 	.word	0x08000a05
 8000620:	08000a05 	.word	0x08000a05
 8000624:	08000a05 	.word	0x08000a05
 8000628:	08000a05 	.word	0x08000a05
 800062c:	08000a05 	.word	0x08000a05
 8000630:	080009ed 	.word	0x080009ed
 8000634:	08000a05 	.word	0x08000a05
 8000638:	08000a05 	.word	0x08000a05
 800063c:	08000a05 	.word	0x08000a05
 8000640:	080009f9 	.word	0x080009f9
	{
		case EVENT_OF_BUTTON_3_PRESS_5_TIMES:
		{
			if (g_idTimerSensorUpdate != NO_TIMER)
 8000644:	4bb8      	ldr	r3, [pc, #736]	@ (8000928 <DeviceStateMachine+0x3ec>)
 8000646:	781b      	ldrb	r3, [r3, #0]
 8000648:	2bff      	cmp	r3, #255	@ 0xff
 800064a:	d007      	beq.n	800065c <DeviceStateMachine+0x120>
			{
				TimerStop(g_idTimerSensorUpdate);
 800064c:	4bb6      	ldr	r3, [pc, #728]	@ (8000928 <DeviceStateMachine+0x3ec>)
 800064e:	781b      	ldrb	r3, [r3, #0]
 8000650:	4618      	mov	r0, r3
 8000652:	f002 fbef 	bl	8002e34 <TimerStop>
				g_idTimerSensorUpdate = NO_TIMER;
 8000656:	4bb4      	ldr	r3, [pc, #720]	@ (8000928 <DeviceStateMachine+0x3ec>)
 8000658:	22ff      	movs	r2, #255	@ 0xff
 800065a:	701a      	strb	r2, [r3, #0]
			}

			// Display system status information on the LCD screen-------------------------
			memset(g_strTemp, 0, sizeof(g_strTemp));
 800065c:	221e      	movs	r2, #30
 800065e:	2100      	movs	r1, #0
 8000660:	48b2      	ldr	r0, [pc, #712]	@ (800092c <DeviceStateMachine+0x3f0>)
 8000662:	f006 fe3d 	bl	80072e0 <memset>
			memset(g_strHumi, 0, sizeof(g_strHumi));
 8000666:	221e      	movs	r2, #30
 8000668:	2100      	movs	r1, #0
 800066a:	48b1      	ldr	r0, [pc, #708]	@ (8000930 <DeviceStateMachine+0x3f4>)
 800066c:	f006 fe38 	bl	80072e0 <memset>
			memset(g_strLight, 0, sizeof(g_strLight));
 8000670:	221e      	movs	r2, #30
 8000672:	2100      	movs	r1, #0
 8000674:	48af      	ldr	r0, [pc, #700]	@ (8000934 <DeviceStateMachine+0x3f8>)
 8000676:	f006 fe33 	bl	80072e0 <memset>
			ucg_ClearScreen(&g_ucg);
 800067a:	48af      	ldr	r0, [pc, #700]	@ (8000938 <DeviceStateMachine+0x3fc>)
 800067c:	f003 facd 	bl	8003c1a <ucg_ClearScreen>
			ucg_SetFont(&g_ucg, ucg_font_ncenR08_hf);
 8000680:	49ae      	ldr	r1, [pc, #696]	@ (800093c <DeviceStateMachine+0x400>)
 8000682:	48ad      	ldr	r0, [pc, #692]	@ (8000938 <DeviceStateMachine+0x3fc>)
 8000684:	f004 fbe2 	bl	8004e4c <ucg_SetFont>
			ucg_DrawString(&g_ucg, 0, 12, 0, "Device: Board");
 8000688:	4bad      	ldr	r3, [pc, #692]	@ (8000940 <DeviceStateMachine+0x404>)
 800068a:	9300      	str	r3, [sp, #0]
 800068c:	2300      	movs	r3, #0
 800068e:	220c      	movs	r2, #12
 8000690:	2100      	movs	r1, #0
 8000692:	48a9      	ldr	r0, [pc, #676]	@ (8000938 <DeviceStateMachine+0x3fc>)
 8000694:	f004 fb16 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 24, 0, "STM32 Nucleo.");
 8000698:	4baa      	ldr	r3, [pc, #680]	@ (8000944 <DeviceStateMachine+0x408>)
 800069a:	9300      	str	r3, [sp, #0]
 800069c:	2300      	movs	r3, #0
 800069e:	2218      	movs	r2, #24
 80006a0:	2100      	movs	r1, #0
 80006a2:	48a5      	ldr	r0, [pc, #660]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006a4:	f004 fb0e 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 36, 0, "Code: STM32F401RE_");
 80006a8:	4ba7      	ldr	r3, [pc, #668]	@ (8000948 <DeviceStateMachine+0x40c>)
 80006aa:	9300      	str	r3, [sp, #0]
 80006ac:	2300      	movs	r3, #0
 80006ae:	2224      	movs	r2, #36	@ 0x24
 80006b0:	2100      	movs	r1, #0
 80006b2:	48a1      	ldr	r0, [pc, #644]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006b4:	f004 fb06 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 48, 0, "NUCLEO.");
 80006b8:	4ba4      	ldr	r3, [pc, #656]	@ (800094c <DeviceStateMachine+0x410>)
 80006ba:	9300      	str	r3, [sp, #0]
 80006bc:	2300      	movs	r3, #0
 80006be:	2230      	movs	r2, #48	@ 0x30
 80006c0:	2100      	movs	r1, #0
 80006c2:	489d      	ldr	r0, [pc, #628]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006c4:	f004 fafe 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 60, 0, "Manufacturer:");
 80006c8:	4ba1      	ldr	r3, [pc, #644]	@ (8000950 <DeviceStateMachine+0x414>)
 80006ca:	9300      	str	r3, [sp, #0]
 80006cc:	2300      	movs	r3, #0
 80006ce:	223c      	movs	r2, #60	@ 0x3c
 80006d0:	2100      	movs	r1, #0
 80006d2:	4899      	ldr	r0, [pc, #612]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006d4:	f004 faf6 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 72, 0, "STMicroelectronics.");
 80006d8:	4b9e      	ldr	r3, [pc, #632]	@ (8000954 <DeviceStateMachine+0x418>)
 80006da:	9300      	str	r3, [sp, #0]
 80006dc:	2300      	movs	r3, #0
 80006de:	2248      	movs	r2, #72	@ 0x48
 80006e0:	2100      	movs	r1, #0
 80006e2:	4895      	ldr	r0, [pc, #596]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006e4:	f004 faee 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 84, 0, "Kit expansion:");
 80006e8:	4b9b      	ldr	r3, [pc, #620]	@ (8000958 <DeviceStateMachine+0x41c>)
 80006ea:	9300      	str	r3, [sp, #0]
 80006ec:	2300      	movs	r3, #0
 80006ee:	2254      	movs	r2, #84	@ 0x54
 80006f0:	2100      	movs	r1, #0
 80006f2:	4891      	ldr	r0, [pc, #580]	@ (8000938 <DeviceStateMachine+0x3fc>)
 80006f4:	f004 fae6 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 97, 0, "Lumi Smarthome.");
 80006f8:	4b98      	ldr	r3, [pc, #608]	@ (800095c <DeviceStateMachine+0x420>)
 80006fa:	9300      	str	r3, [sp, #0]
 80006fc:	2300      	movs	r3, #0
 80006fe:	2261      	movs	r2, #97	@ 0x61
 8000700:	2100      	movs	r1, #0
 8000702:	488d      	ldr	r0, [pc, #564]	@ (8000938 <DeviceStateMachine+0x3fc>)
 8000704:	f004 fade 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 110, 0, "Project:");
 8000708:	4b95      	ldr	r3, [pc, #596]	@ (8000960 <DeviceStateMachine+0x424>)
 800070a:	9300      	str	r3, [sp, #0]
 800070c:	2300      	movs	r3, #0
 800070e:	226e      	movs	r2, #110	@ 0x6e
 8000710:	2100      	movs	r1, #0
 8000712:	4889      	ldr	r0, [pc, #548]	@ (8000938 <DeviceStateMachine+0x3fc>)
 8000714:	f004 fad6 	bl	8004cc4 <ucg_DrawString>
			ucg_DrawString(&g_ucg, 0, 123, 0, "Simulator touch switch.");
 8000718:	4b92      	ldr	r3, [pc, #584]	@ (8000964 <DeviceStateMachine+0x428>)
 800071a:	9300      	str	r3, [sp, #0]
 800071c:	2300      	movs	r3, #0
 800071e:	227b      	movs	r2, #123	@ 0x7b
 8000720:	2100      	movs	r1, #0
 8000722:	4885      	ldr	r0, [pc, #532]	@ (8000938 <DeviceStateMachine+0x3fc>)
 8000724:	f004 face 	bl	8004cc4 <ucg_DrawString>

			// Blink the green LED 5 times-------------------------------------------------
			LedControl_BlinkStart(LED_ALL_ID, BLINK_GREEN, 10, 1000, LED_COLOR_BLACK);
 8000728:	2304      	movs	r3, #4
 800072a:	9300      	str	r3, [sp, #0]
 800072c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000730:	220a      	movs	r2, #10
 8000732:	2102      	movs	r1, #2
 8000734:	2003      	movs	r0, #3
 8000736:	f002 f90d 	bl	8002954 <LedControl_BlinkStart>

			// Temperature, humidity, light intensity parameters---------------------------
			if (g_idTimerDisplayLCD != NO_TIMER)
 800073a:	4b8b      	ldr	r3, [pc, #556]	@ (8000968 <DeviceStateMachine+0x42c>)
 800073c:	781b      	ldrb	r3, [r3, #0]
 800073e:	2bff      	cmp	r3, #255	@ 0xff
 8000740:	d007      	beq.n	8000752 <DeviceStateMachine+0x216>
			{
				TimerStop(g_idTimerDisplayLCD);
 8000742:	4b89      	ldr	r3, [pc, #548]	@ (8000968 <DeviceStateMachine+0x42c>)
 8000744:	781b      	ldrb	r3, [r3, #0]
 8000746:	4618      	mov	r0, r3
 8000748:	f002 fb74 	bl	8002e34 <TimerStop>
				g_idTimerDisplayLCD = NO_TIMER;
 800074c:	4b86      	ldr	r3, [pc, #536]	@ (8000968 <DeviceStateMachine+0x42c>)
 800074e:	22ff      	movs	r2, #255	@ 0xff
 8000750:	701a      	strb	r2, [r3, #0]
			}

			g_idTimerDisplayLCD = TimerStart("MultiSensorScan", 7000, 1,
 8000752:	2300      	movs	r3, #0
 8000754:	9300      	str	r3, [sp, #0]
 8000756:	4b85      	ldr	r3, [pc, #532]	@ (800096c <DeviceStateMachine+0x430>)
 8000758:	2201      	movs	r2, #1
 800075a:	f641 3158 	movw	r1, #7000	@ 0x1b58
 800075e:	4884      	ldr	r0, [pc, #528]	@ (8000970 <DeviceStateMachine+0x434>)
 8000760:	f002 faea 	bl	8002d38 <TimerStart>
 8000764:	4603      	mov	r3, r0
 8000766:	461a      	mov	r2, r3
 8000768:	4b7f      	ldr	r3, [pc, #508]	@ (8000968 <DeviceStateMachine+0x42c>)
 800076a:	701a      	strb	r2, [r3, #0]
											(void*) MultiSensorScan, NULL);
		} break;
 800076c:	e14b      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_1_PRESS_LOGIC:
		{
			if(g_ledRed == 0)
 800076e:	4b81      	ldr	r3, [pc, #516]	@ (8000974 <DeviceStateMachine+0x438>)
 8000770:	781b      	ldrb	r3, [r3, #0]
 8000772:	2b00      	cmp	r3, #0
 8000774:	d11a      	bne.n	80007ac <DeviceStateMachine+0x270>
			{
				g_ledRed = 1;
 8000776:	4b7f      	ldr	r3, [pc, #508]	@ (8000974 <DeviceStateMachine+0x438>)
 8000778:	2201      	movs	r2, #1
 800077a:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 800077c:	4b7e      	ldr	r3, [pc, #504]	@ (8000978 <DeviceStateMachine+0x43c>)
 800077e:	2200      	movs	r2, #0
 8000780:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 8000782:	4b7e      	ldr	r3, [pc, #504]	@ (800097c <DeviceStateMachine+0x440>)
 8000784:	2200      	movs	r2, #0
 8000786:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 8000788:	4b7d      	ldr	r3, [pc, #500]	@ (8000980 <DeviceStateMachine+0x444>)
 800078a:	2200      	movs	r2, #0
 800078c:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_RED, 50);
 800078e:	2132      	movs	r1, #50	@ 0x32
 8000790:	2000      	movs	r0, #0
 8000792:	f002 f91d 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_RED, 50);
 8000796:	2232      	movs	r2, #50	@ 0x32
 8000798:	2100      	movs	r1, #0
 800079a:	2001      	movs	r0, #1
 800079c:	f002 f933 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_RED, 50);
 80007a0:	2232      	movs	r2, #50	@ 0x32
 80007a2:	2100      	movs	r1, #0
 80007a4:	2002      	movs	r0, #2
 80007a6:	f002 f92e 	bl	8002a06 <LedControl_SendPacketRespond>
 80007aa:	e010      	b.n	80007ce <DeviceStateMachine+0x292>
			}
			else
			{
				g_ledRed = 0;
 80007ac:	4b71      	ldr	r3, [pc, #452]	@ (8000974 <DeviceStateMachine+0x438>)
 80007ae:	2200      	movs	r2, #0
 80007b0:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_RED, 0);
 80007b2:	2100      	movs	r1, #0
 80007b4:	2000      	movs	r0, #0
 80007b6:	f002 f90b 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_RED, 0);
 80007ba:	2200      	movs	r2, #0
 80007bc:	2100      	movs	r1, #0
 80007be:	2001      	movs	r0, #1
 80007c0:	f002 f921 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_RED, 0);
 80007c4:	2200      	movs	r2, #0
 80007c6:	2100      	movs	r1, #0
 80007c8:	2002      	movs	r0, #2
 80007ca:	f002 f91c 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 80007ce:	486d      	ldr	r0, [pc, #436]	@ (8000984 <DeviceStateMachine+0x448>)
 80007d0:	f001 fdec 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 80007d4:	2001      	movs	r0, #1
 80007d6:	f001 fe07 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 80007da:	e114      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_2_PRESS_LOGIC:
		{
			if(g_ledGreen == 0)
 80007dc:	4b66      	ldr	r3, [pc, #408]	@ (8000978 <DeviceStateMachine+0x43c>)
 80007de:	781b      	ldrb	r3, [r3, #0]
 80007e0:	2b00      	cmp	r3, #0
 80007e2:	d11a      	bne.n	800081a <DeviceStateMachine+0x2de>
			{
				g_ledRed = 0;
 80007e4:	4b63      	ldr	r3, [pc, #396]	@ (8000974 <DeviceStateMachine+0x438>)
 80007e6:	2200      	movs	r2, #0
 80007e8:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 1;
 80007ea:	4b63      	ldr	r3, [pc, #396]	@ (8000978 <DeviceStateMachine+0x43c>)
 80007ec:	2201      	movs	r2, #1
 80007ee:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 80007f0:	4b62      	ldr	r3, [pc, #392]	@ (800097c <DeviceStateMachine+0x440>)
 80007f2:	2200      	movs	r2, #0
 80007f4:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 80007f6:	4b62      	ldr	r3, [pc, #392]	@ (8000980 <DeviceStateMachine+0x444>)
 80007f8:	2200      	movs	r2, #0
 80007fa:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_GREEN, 50);
 80007fc:	2132      	movs	r1, #50	@ 0x32
 80007fe:	2001      	movs	r0, #1
 8000800:	f002 f8e6 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_GREEN, 50);
 8000804:	2232      	movs	r2, #50	@ 0x32
 8000806:	2101      	movs	r1, #1
 8000808:	2001      	movs	r0, #1
 800080a:	f002 f8fc 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_GREEN, 50);
 800080e:	2232      	movs	r2, #50	@ 0x32
 8000810:	2101      	movs	r1, #1
 8000812:	2002      	movs	r0, #2
 8000814:	f002 f8f7 	bl	8002a06 <LedControl_SendPacketRespond>
 8000818:	e010      	b.n	800083c <DeviceStateMachine+0x300>
			}
			else
			{
				g_ledGreen = 0;
 800081a:	4b57      	ldr	r3, [pc, #348]	@ (8000978 <DeviceStateMachine+0x43c>)
 800081c:	2200      	movs	r2, #0
 800081e:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_GREEN, 0);
 8000820:	2100      	movs	r1, #0
 8000822:	2001      	movs	r0, #1
 8000824:	f002 f8d4 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_GREEN, 0);
 8000828:	2200      	movs	r2, #0
 800082a:	2101      	movs	r1, #1
 800082c:	2001      	movs	r0, #1
 800082e:	f002 f8ea 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_GREEN, 0);
 8000832:	2200      	movs	r2, #0
 8000834:	2101      	movs	r1, #1
 8000836:	2002      	movs	r0, #2
 8000838:	f002 f8e5 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 800083c:	4851      	ldr	r0, [pc, #324]	@ (8000984 <DeviceStateMachine+0x448>)
 800083e:	f001 fdb5 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 8000842:	2001      	movs	r0, #1
 8000844:	f001 fdd0 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 8000848:	e0dd      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_4_PRESS_LOGIC:
		{
			if(g_ledWhite == 0)
 800084a:	4b4c      	ldr	r3, [pc, #304]	@ (800097c <DeviceStateMachine+0x440>)
 800084c:	781b      	ldrb	r3, [r3, #0]
 800084e:	2b00      	cmp	r3, #0
 8000850:	d11a      	bne.n	8000888 <DeviceStateMachine+0x34c>
			{
				g_ledRed = 0;
 8000852:	4b48      	ldr	r3, [pc, #288]	@ (8000974 <DeviceStateMachine+0x438>)
 8000854:	2200      	movs	r2, #0
 8000856:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 8000858:	4b47      	ldr	r3, [pc, #284]	@ (8000978 <DeviceStateMachine+0x43c>)
 800085a:	2200      	movs	r2, #0
 800085c:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 1;
 800085e:	4b47      	ldr	r3, [pc, #284]	@ (800097c <DeviceStateMachine+0x440>)
 8000860:	2201      	movs	r2, #1
 8000862:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 8000864:	4b46      	ldr	r3, [pc, #280]	@ (8000980 <DeviceStateMachine+0x444>)
 8000866:	2200      	movs	r2, #0
 8000868:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_WHITE, 50);
 800086a:	2132      	movs	r1, #50	@ 0x32
 800086c:	2003      	movs	r0, #3
 800086e:	f002 f8af 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_WHITE, 50);
 8000872:	2232      	movs	r2, #50	@ 0x32
 8000874:	2103      	movs	r1, #3
 8000876:	2001      	movs	r0, #1
 8000878:	f002 f8c5 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_WHITE, 50);
 800087c:	2232      	movs	r2, #50	@ 0x32
 800087e:	2103      	movs	r1, #3
 8000880:	2002      	movs	r0, #2
 8000882:	f002 f8c0 	bl	8002a06 <LedControl_SendPacketRespond>
 8000886:	e010      	b.n	80008aa <DeviceStateMachine+0x36e>
			}
			else
			{
				g_ledWhite = 0;
 8000888:	4b3c      	ldr	r3, [pc, #240]	@ (800097c <DeviceStateMachine+0x440>)
 800088a:	2200      	movs	r2, #0
 800088c:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_WHITE, 0);
 800088e:	2100      	movs	r1, #0
 8000890:	2003      	movs	r0, #3
 8000892:	f002 f89d 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_WHITE, 0);
 8000896:	2200      	movs	r2, #0
 8000898:	2103      	movs	r1, #3
 800089a:	2001      	movs	r0, #1
 800089c:	f002 f8b3 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_WHITE, 0);
 80008a0:	2200      	movs	r2, #0
 80008a2:	2103      	movs	r1, #3
 80008a4:	2002      	movs	r0, #2
 80008a6:	f002 f8ae 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 80008aa:	4836      	ldr	r0, [pc, #216]	@ (8000984 <DeviceStateMachine+0x448>)
 80008ac:	f001 fd7e 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 80008b0:	2001      	movs	r0, #1
 80008b2:	f001 fd99 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 80008b6:	e0a6      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_5_PRESS_LOGIC:
		{
			if(g_ledBlue == 0)
 80008b8:	4b31      	ldr	r3, [pc, #196]	@ (8000980 <DeviceStateMachine+0x444>)
 80008ba:	781b      	ldrb	r3, [r3, #0]
 80008bc:	2b00      	cmp	r3, #0
 80008be:	d11a      	bne.n	80008f6 <DeviceStateMachine+0x3ba>
			{
				g_ledRed = 0;
 80008c0:	4b2c      	ldr	r3, [pc, #176]	@ (8000974 <DeviceStateMachine+0x438>)
 80008c2:	2200      	movs	r2, #0
 80008c4:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 80008c6:	4b2c      	ldr	r3, [pc, #176]	@ (8000978 <DeviceStateMachine+0x43c>)
 80008c8:	2200      	movs	r2, #0
 80008ca:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 80008cc:	4b2b      	ldr	r3, [pc, #172]	@ (800097c <DeviceStateMachine+0x440>)
 80008ce:	2200      	movs	r2, #0
 80008d0:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 1;
 80008d2:	4b2b      	ldr	r3, [pc, #172]	@ (8000980 <DeviceStateMachine+0x444>)
 80008d4:	2201      	movs	r2, #1
 80008d6:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_BLUE, 50);
 80008d8:	2132      	movs	r1, #50	@ 0x32
 80008da:	2002      	movs	r0, #2
 80008dc:	f002 f878 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_BLUE, 50);
 80008e0:	2232      	movs	r2, #50	@ 0x32
 80008e2:	2102      	movs	r1, #2
 80008e4:	2001      	movs	r0, #1
 80008e6:	f002 f88e 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_BLUE, 50);
 80008ea:	2232      	movs	r2, #50	@ 0x32
 80008ec:	2102      	movs	r1, #2
 80008ee:	2002      	movs	r0, #2
 80008f0:	f002 f889 	bl	8002a06 <LedControl_SendPacketRespond>
 80008f4:	e010      	b.n	8000918 <DeviceStateMachine+0x3dc>
			}
			else
			{
				g_ledBlue = 0;
 80008f6:	4b22      	ldr	r3, [pc, #136]	@ (8000980 <DeviceStateMachine+0x444>)
 80008f8:	2200      	movs	r2, #0
 80008fa:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_BLUE, 0);
 80008fc:	2100      	movs	r1, #0
 80008fe:	2002      	movs	r0, #2
 8000900:	f002 f866 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_BLUE, 0);
 8000904:	2200      	movs	r2, #0
 8000906:	2102      	movs	r1, #2
 8000908:	2001      	movs	r0, #1
 800090a:	f002 f87c 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_BLUE, 0);
 800090e:	2200      	movs	r2, #0
 8000910:	2102      	movs	r1, #2
 8000912:	2002      	movs	r0, #2
 8000914:	f002 f877 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 8000918:	481a      	ldr	r0, [pc, #104]	@ (8000984 <DeviceStateMachine+0x448>)
 800091a:	f001 fd47 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 800091e:	2001      	movs	r0, #1
 8000920:	f001 fd62 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 8000924:	e06f      	b.n	8000a06 <DeviceStateMachine+0x4ca>
 8000926:	bf00      	nop
 8000928:	20000003 	.word	0x20000003
 800092c:	200002c0 	.word	0x200002c0
 8000930:	200002e0 	.word	0x200002e0
 8000934:	20000300 	.word	0x20000300
 8000938:	200000d8 	.word	0x200000d8
 800093c:	08007e90 	.word	0x08007e90
 8000940:	08007c40 	.word	0x08007c40
 8000944:	08007c50 	.word	0x08007c50
 8000948:	08007c60 	.word	0x08007c60
 800094c:	08007c74 	.word	0x08007c74
 8000950:	08007c7c 	.word	0x08007c7c
 8000954:	08007c8c 	.word	0x08007c8c
 8000958:	08007ca0 	.word	0x08007ca0
 800095c:	08007cb0 	.word	0x08007cb0
 8000960:	08007cc0 	.word	0x08007cc0
 8000964:	08007ccc 	.word	0x08007ccc
 8000968:	20000002 	.word	0x20000002
 800096c:	08000ac9 	.word	0x08000ac9
 8000970:	08007ce4 	.word	0x08007ce4
 8000974:	2000018d 	.word	0x2000018d
 8000978:	2000018e 	.word	0x2000018e
 800097c:	2000018f 	.word	0x2000018f
 8000980:	20000190 	.word	0x20000190
 8000984:	2000002c 	.word	0x2000002c

		case EVENT_OF_BUTTON_1_HOLD_1S:
		{
			if(g_idTimerStartIncrease != NO_TIMER)
 8000988:	4b21      	ldr	r3, [pc, #132]	@ (8000a10 <DeviceStateMachine+0x4d4>)
 800098a:	781b      	ldrb	r3, [r3, #0]
 800098c:	2bff      	cmp	r3, #255	@ 0xff
 800098e:	d007      	beq.n	80009a0 <DeviceStateMachine+0x464>
			{
				TimerStop(g_idTimerStartIncrease);
 8000990:	4b1f      	ldr	r3, [pc, #124]	@ (8000a10 <DeviceStateMachine+0x4d4>)
 8000992:	781b      	ldrb	r3, [r3, #0]
 8000994:	4618      	mov	r0, r3
 8000996:	f002 fa4d 	bl	8002e34 <TimerStop>
				g_idTimerStartIncrease = NO_TIMER;
 800099a:	4b1d      	ldr	r3, [pc, #116]	@ (8000a10 <DeviceStateMachine+0x4d4>)
 800099c:	22ff      	movs	r2, #255	@ 0xff
 800099e:	701a      	strb	r2, [r3, #0]
			}

			g_idTimerStartIncrease = TimerStart("Increase_Led",
 80009a0:	2300      	movs	r3, #0
 80009a2:	9300      	str	r3, [sp, #0]
 80009a4:	4b1b      	ldr	r3, [pc, #108]	@ (8000a14 <DeviceStateMachine+0x4d8>)
 80009a6:	2264      	movs	r2, #100	@ 0x64
 80009a8:	2114      	movs	r1, #20
 80009aa:	481b      	ldr	r0, [pc, #108]	@ (8000a18 <DeviceStateMachine+0x4dc>)
 80009ac:	f002 f9c4 	bl	8002d38 <TimerStart>
 80009b0:	4603      	mov	r3, r0
 80009b2:	461a      	mov	r2, r3
 80009b4:	4b16      	ldr	r3, [pc, #88]	@ (8000a10 <DeviceStateMachine+0x4d4>)
 80009b6:	701a      	strb	r2, [r3, #0]
												CYCLE_LED_CHANGE,
												100,
												(void*) Increase_LedLevel,
												NULL);
		} break;
 80009b8:	e025      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_5_HOLD_1S:
		{
			if(g_idTimerStartDecrease != NO_TIMER)
 80009ba:	4b18      	ldr	r3, [pc, #96]	@ (8000a1c <DeviceStateMachine+0x4e0>)
 80009bc:	781b      	ldrb	r3, [r3, #0]
 80009be:	2bff      	cmp	r3, #255	@ 0xff
 80009c0:	d007      	beq.n	80009d2 <DeviceStateMachine+0x496>
			{
				TimerStop(g_idTimerStartDecrease);
 80009c2:	4b16      	ldr	r3, [pc, #88]	@ (8000a1c <DeviceStateMachine+0x4e0>)
 80009c4:	781b      	ldrb	r3, [r3, #0]
 80009c6:	4618      	mov	r0, r3
 80009c8:	f002 fa34 	bl	8002e34 <TimerStop>
				g_idTimerStartDecrease = NO_TIMER;
 80009cc:	4b13      	ldr	r3, [pc, #76]	@ (8000a1c <DeviceStateMachine+0x4e0>)
 80009ce:	22ff      	movs	r2, #255	@ 0xff
 80009d0:	701a      	strb	r2, [r3, #0]
			}

			g_idTimerStartDecrease = TimerStart("Decrease_Led",
 80009d2:	2300      	movs	r3, #0
 80009d4:	9300      	str	r3, [sp, #0]
 80009d6:	4b12      	ldr	r3, [pc, #72]	@ (8000a20 <DeviceStateMachine+0x4e4>)
 80009d8:	2264      	movs	r2, #100	@ 0x64
 80009da:	2114      	movs	r1, #20
 80009dc:	4811      	ldr	r0, [pc, #68]	@ (8000a24 <DeviceStateMachine+0x4e8>)
 80009de:	f002 f9ab 	bl	8002d38 <TimerStart>
 80009e2:	4603      	mov	r3, r0
 80009e4:	461a      	mov	r2, r3
 80009e6:	4b0d      	ldr	r3, [pc, #52]	@ (8000a1c <DeviceStateMachine+0x4e0>)
 80009e8:	701a      	strb	r2, [r3, #0]
												CYCLE_LED_CHANGE,
												100,
												(void*) Decrease_LedLevel,
												NULL);
		} break;
 80009ea:	e00c      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_1_RELEASED_1S:
		{
			TimerStop(g_idTimerStartIncrease);
 80009ec:	4b08      	ldr	r3, [pc, #32]	@ (8000a10 <DeviceStateMachine+0x4d4>)
 80009ee:	781b      	ldrb	r3, [r3, #0]
 80009f0:	4618      	mov	r0, r3
 80009f2:	f002 fa1f 	bl	8002e34 <TimerStop>
		} break;
 80009f6:	e006      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		case EVENT_OF_BUTTON_5_RELEASED_1S:
		{
			TimerStop(g_idTimerStartDecrease);
 80009f8:	4b08      	ldr	r3, [pc, #32]	@ (8000a1c <DeviceStateMachine+0x4e0>)
 80009fa:	781b      	ldrb	r3, [r3, #0]
 80009fc:	4618      	mov	r0, r3
 80009fe:	f002 fa19 	bl	8002e34 <TimerStop>
		} break;
 8000a02:	e000      	b.n	8000a06 <DeviceStateMachine+0x4ca>

		default:
			break;
 8000a04:	bf00      	nop
	}
}
 8000a06:	bf00      	nop
 8000a08:	3708      	adds	r7, #8
 8000a0a:	46bd      	mov	sp, r7
 8000a0c:	bd80      	pop	{r7, pc}
 8000a0e:	bf00      	nop
 8000a10:	20000000 	.word	0x20000000
 8000a14:	08000a61 	.word	0x08000a61
 8000a18:	08007cf4 	.word	0x08007cf4
 8000a1c:	20000001 	.word	0x20000001
 8000a20:	08000a95 	.word	0x08000a95
 8000a24:	08007d04 	.word	0x08007d04

08000a28 <Clamp>:
 * @retval:		value
 *
 * @note:		None
 */
uint8_t Clamp (uint8_t value, uint8_t min , uint8_t max)
{
 8000a28:	b480      	push	{r7}
 8000a2a:	b083      	sub	sp, #12
 8000a2c:	af00      	add	r7, sp, #0
 8000a2e:	4603      	mov	r3, r0
 8000a30:	71fb      	strb	r3, [r7, #7]
 8000a32:	460b      	mov	r3, r1
 8000a34:	71bb      	strb	r3, [r7, #6]
 8000a36:	4613      	mov	r3, r2
 8000a38:	717b      	strb	r3, [r7, #5]
	if(value < min) value = min;
 8000a3a:	79fa      	ldrb	r2, [r7, #7]
 8000a3c:	79bb      	ldrb	r3, [r7, #6]
 8000a3e:	429a      	cmp	r2, r3
 8000a40:	d201      	bcs.n	8000a46 <Clamp+0x1e>
 8000a42:	79bb      	ldrb	r3, [r7, #6]
 8000a44:	71fb      	strb	r3, [r7, #7]
	if(value > max) value = max;
 8000a46:	79fa      	ldrb	r2, [r7, #7]
 8000a48:	797b      	ldrb	r3, [r7, #5]
 8000a4a:	429a      	cmp	r2, r3
 8000a4c:	d901      	bls.n	8000a52 <Clamp+0x2a>
 8000a4e:	797b      	ldrb	r3, [r7, #5]
 8000a50:	71fb      	strb	r3, [r7, #7]
	return value;
 8000a52:	79fb      	ldrb	r3, [r7, #7]
}
 8000a54:	4618      	mov	r0, r3
 8000a56:	370c      	adds	r7, #12
 8000a58:	46bd      	mov	sp, r7
 8000a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a5e:	4770      	bx	lr

08000a60 <Increase_LedLevel>:
 * @retval:		None
 *
 * @note:		None
 */
void Increase_LedLevel (void)
{
 8000a60:	b580      	push	{r7, lr}
 8000a62:	af00      	add	r7, sp, #0
	g_ledChange = Clamp((uint8_t)(g_ledChange + 1), 0 , 100);
 8000a64:	4b0a      	ldr	r3, [pc, #40]	@ (8000a90 <Increase_LedLevel+0x30>)
 8000a66:	781b      	ldrb	r3, [r3, #0]
 8000a68:	3301      	adds	r3, #1
 8000a6a:	b2db      	uxtb	r3, r3
 8000a6c:	2264      	movs	r2, #100	@ 0x64
 8000a6e:	2100      	movs	r1, #0
 8000a70:	4618      	mov	r0, r3
 8000a72:	f7ff ffd9 	bl	8000a28 <Clamp>
 8000a76:	4603      	mov	r3, r0
 8000a78:	461a      	mov	r2, r3
 8000a7a:	4b05      	ldr	r3, [pc, #20]	@ (8000a90 <Increase_LedLevel+0x30>)
 8000a7c:	701a      	strb	r2, [r3, #0]
	LedControl_SetAllColor(LED_COLOR_GREEN, g_ledChange);
 8000a7e:	4b04      	ldr	r3, [pc, #16]	@ (8000a90 <Increase_LedLevel+0x30>)
 8000a80:	781b      	ldrb	r3, [r3, #0]
 8000a82:	4619      	mov	r1, r3
 8000a84:	2001      	movs	r0, #1
 8000a86:	f001 ffa3 	bl	80029d0 <LedControl_SetAllColor>
}
 8000a8a:	bf00      	nop
 8000a8c:	bd80      	pop	{r7, pc}
 8000a8e:	bf00      	nop
 8000a90:	20000191 	.word	0x20000191

08000a94 <Decrease_LedLevel>:
 * @retval:		None
 *
 * @note:		None
 */
void Decrease_LedLevel (void)
{
 8000a94:	b580      	push	{r7, lr}
 8000a96:	af00      	add	r7, sp, #0
	g_ledChange = Clamp((uint8_t)(g_ledChange - 1), 0, 100);
 8000a98:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac4 <Decrease_LedLevel+0x30>)
 8000a9a:	781b      	ldrb	r3, [r3, #0]
 8000a9c:	3b01      	subs	r3, #1
 8000a9e:	b2db      	uxtb	r3, r3
 8000aa0:	2264      	movs	r2, #100	@ 0x64
 8000aa2:	2100      	movs	r1, #0
 8000aa4:	4618      	mov	r0, r3
 8000aa6:	f7ff ffbf 	bl	8000a28 <Clamp>
 8000aaa:	4603      	mov	r3, r0
 8000aac:	461a      	mov	r2, r3
 8000aae:	4b05      	ldr	r3, [pc, #20]	@ (8000ac4 <Decrease_LedLevel+0x30>)
 8000ab0:	701a      	strb	r2, [r3, #0]
	LedControl_SetAllColor(LED_COLOR_GREEN, g_ledChange);
 8000ab2:	4b04      	ldr	r3, [pc, #16]	@ (8000ac4 <Decrease_LedLevel+0x30>)
 8000ab4:	781b      	ldrb	r3, [r3, #0]
 8000ab6:	4619      	mov	r1, r3
 8000ab8:	2001      	movs	r0, #1
 8000aba:	f001 ff89 	bl	80029d0 <LedControl_SetAllColor>
}
 8000abe:	bf00      	nop
 8000ac0:	bd80      	pop	{r7, pc}
 8000ac2:	bf00      	nop
 8000ac4:	20000191 	.word	0x20000191

08000ac8 <MultiSensorScan>:
 * @retval:		None
 *
 * @note:		None
 */
void MultiSensorScan (void)
{
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	b082      	sub	sp, #8
 8000acc:	af02      	add	r7, sp, #8
	ucg_ClearScreen(&g_ucg);
 8000ace:	4811      	ldr	r0, [pc, #68]	@ (8000b14 <MultiSensorScan+0x4c>)
 8000ad0:	f003 f8a3 	bl	8003c1a <ucg_ClearScreen>
	ucg_SetFont(&g_ucg, ucg_font_ncenR10_hf);
 8000ad4:	4910      	ldr	r1, [pc, #64]	@ (8000b18 <MultiSensorScan+0x50>)
 8000ad6:	480f      	ldr	r0, [pc, #60]	@ (8000b14 <MultiSensorScan+0x4c>)
 8000ad8:	f004 f9b8 	bl	8004e4c <ucg_SetFont>

	if (g_idTimerSensorUpdate != NO_TIMER)
 8000adc:	4b0f      	ldr	r3, [pc, #60]	@ (8000b1c <MultiSensorScan+0x54>)
 8000ade:	781b      	ldrb	r3, [r3, #0]
 8000ae0:	2bff      	cmp	r3, #255	@ 0xff
 8000ae2:	d007      	beq.n	8000af4 <MultiSensorScan+0x2c>
	{
		TimerStop(g_idTimerSensorUpdate);
 8000ae4:	4b0d      	ldr	r3, [pc, #52]	@ (8000b1c <MultiSensorScan+0x54>)
 8000ae6:	781b      	ldrb	r3, [r3, #0]
 8000ae8:	4618      	mov	r0, r3
 8000aea:	f002 f9a3 	bl	8002e34 <TimerStop>
		g_idTimerSensorUpdate = NO_TIMER;
 8000aee:	4b0b      	ldr	r3, [pc, #44]	@ (8000b1c <MultiSensorScan+0x54>)
 8000af0:	22ff      	movs	r2, #255	@ 0xff
 8000af2:	701a      	strb	r2, [r3, #0]
	}

	g_idTimerSensorUpdate = TimerStart("Task_multiSensorScan",
 8000af4:	2300      	movs	r3, #0
 8000af6:	9300      	str	r3, [sp, #0]
 8000af8:	4b09      	ldr	r3, [pc, #36]	@ (8000b20 <MultiSensorScan+0x58>)
 8000afa:	22ff      	movs	r2, #255	@ 0xff
 8000afc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000b00:	4808      	ldr	r0, [pc, #32]	@ (8000b24 <MultiSensorScan+0x5c>)
 8000b02:	f002 f919 	bl	8002d38 <TimerStart>
 8000b06:	4603      	mov	r3, r0
 8000b08:	461a      	mov	r2, r3
 8000b0a:	4b04      	ldr	r3, [pc, #16]	@ (8000b1c <MultiSensorScan+0x54>)
 8000b0c:	701a      	strb	r2, [r3, #0]
									PERIOD_SCAN_MULTISENSOR,
									TIMER_REPEAT_FOREVER,
									(void*)Task_MultiSensorScan,
									NULL);
}
 8000b0e:	bf00      	nop
 8000b10:	46bd      	mov	sp, r7
 8000b12:	bd80      	pop	{r7, pc}
 8000b14:	200000d8 	.word	0x200000d8
 8000b18:	08008944 	.word	0x08008944
 8000b1c:	20000003 	.word	0x20000003
 8000b20:	08000b29 	.word	0x08000b29
 8000b24:	08007d14 	.word	0x08007d14

08000b28 <Task_MultiSensorScan>:
 * @retval:		None
 *
 * @note:		None
 */
void Task_MultiSensorScan (void)
{
 8000b28:	b580      	push	{r7, lr}
 8000b2a:	b082      	sub	sp, #8
 8000b2c:	af02      	add	r7, sp, #8
	// Retrieve temperature, humidity, and light intensity values from the sensors---------
	g_temperature = (TemHumSensor_GetTemp() / 100);
 8000b2e:	f002 fbdd 	bl	80032ec <TemHumSensor_GetTemp>
 8000b32:	4603      	mov	r3, r0
 8000b34:	4a32      	ldr	r2, [pc, #200]	@ (8000c00 <Task_MultiSensorScan+0xd8>)
 8000b36:	fba2 2303 	umull	r2, r3, r2, r3
 8000b3a:	095b      	lsrs	r3, r3, #5
 8000b3c:	b29a      	uxth	r2, r3
 8000b3e:	4b31      	ldr	r3, [pc, #196]	@ (8000c04 <Task_MultiSensorScan+0xdc>)
 8000b40:	801a      	strh	r2, [r3, #0]
	g_humidity =  (TemHumSensor_GetHumi() / 100);
 8000b42:	f002 fc11 	bl	8003368 <TemHumSensor_GetHumi>
 8000b46:	4603      	mov	r3, r0
 8000b48:	4a2d      	ldr	r2, [pc, #180]	@ (8000c00 <Task_MultiSensorScan+0xd8>)
 8000b4a:	fba2 2303 	umull	r2, r3, r2, r3
 8000b4e:	095b      	lsrs	r3, r3, #5
 8000b50:	b29a      	uxth	r2, r3
 8000b52:	4b2d      	ldr	r3, [pc, #180]	@ (8000c08 <Task_MultiSensorScan+0xe0>)
 8000b54:	801a      	strh	r2, [r3, #0]
	g_light = LightSensor_MeasureUseDMAMode();
 8000b56:	f002 fb65 	bl	8003224 <LightSensor_MeasureUseDMAMode>
 8000b5a:	4603      	mov	r3, r0
 8000b5c:	461a      	mov	r2, r3
 8000b5e:	4b2b      	ldr	r3, [pc, #172]	@ (8000c0c <Task_MultiSensorScan+0xe4>)
 8000b60:	801a      	strh	r2, [r3, #0]

	// Store temperature, humidity, and light intensity values-----------------------------
	memset(g_strTemp, 0, sizeof(g_strTemp));
 8000b62:	221e      	movs	r2, #30
 8000b64:	2100      	movs	r1, #0
 8000b66:	482a      	ldr	r0, [pc, #168]	@ (8000c10 <Task_MultiSensorScan+0xe8>)
 8000b68:	f006 fbba 	bl	80072e0 <memset>
	memset(g_strHumi, 0, sizeof(g_strHumi));
 8000b6c:	221e      	movs	r2, #30
 8000b6e:	2100      	movs	r1, #0
 8000b70:	4828      	ldr	r0, [pc, #160]	@ (8000c14 <Task_MultiSensorScan+0xec>)
 8000b72:	f006 fbb5 	bl	80072e0 <memset>
	memset(g_strLight, 0, sizeof(g_strLight));
 8000b76:	221e      	movs	r2, #30
 8000b78:	2100      	movs	r1, #0
 8000b7a:	4827      	ldr	r0, [pc, #156]	@ (8000c18 <Task_MultiSensorScan+0xf0>)
 8000b7c:	f006 fbb0 	bl	80072e0 <memset>

	sprintf(g_strTemp, "Temp = %d oC     ", g_temperature);
 8000b80:	4b20      	ldr	r3, [pc, #128]	@ (8000c04 <Task_MultiSensorScan+0xdc>)
 8000b82:	881b      	ldrh	r3, [r3, #0]
 8000b84:	461a      	mov	r2, r3
 8000b86:	4925      	ldr	r1, [pc, #148]	@ (8000c1c <Task_MultiSensorScan+0xf4>)
 8000b88:	4821      	ldr	r0, [pc, #132]	@ (8000c10 <Task_MultiSensorScan+0xe8>)
 8000b8a:	f006 fb89 	bl	80072a0 <siprintf>
	sprintf(g_strHumi, "Humi = %d %%     ", g_humidity);
 8000b8e:	4b1e      	ldr	r3, [pc, #120]	@ (8000c08 <Task_MultiSensorScan+0xe0>)
 8000b90:	881b      	ldrh	r3, [r3, #0]
 8000b92:	461a      	mov	r2, r3
 8000b94:	4922      	ldr	r1, [pc, #136]	@ (8000c20 <Task_MultiSensorScan+0xf8>)
 8000b96:	481f      	ldr	r0, [pc, #124]	@ (8000c14 <Task_MultiSensorScan+0xec>)
 8000b98:	f006 fb82 	bl	80072a0 <siprintf>
	sprintf(g_strLight, "Light = %d Lux     ", g_light);
 8000b9c:	4b1b      	ldr	r3, [pc, #108]	@ (8000c0c <Task_MultiSensorScan+0xe4>)
 8000b9e:	881b      	ldrh	r3, [r3, #0]
 8000ba0:	461a      	mov	r2, r3
 8000ba2:	4920      	ldr	r1, [pc, #128]	@ (8000c24 <Task_MultiSensorScan+0xfc>)
 8000ba4:	481c      	ldr	r0, [pc, #112]	@ (8000c18 <Task_MultiSensorScan+0xf0>)
 8000ba6:	f006 fb7b 	bl	80072a0 <siprintf>

	// Display on LCD----------------------------------------------------------------------
	ucg_DrawString(&g_ucg, 0, 40, 0, g_strTemp);
 8000baa:	4b19      	ldr	r3, [pc, #100]	@ (8000c10 <Task_MultiSensorScan+0xe8>)
 8000bac:	9300      	str	r3, [sp, #0]
 8000bae:	2300      	movs	r3, #0
 8000bb0:	2228      	movs	r2, #40	@ 0x28
 8000bb2:	2100      	movs	r1, #0
 8000bb4:	481c      	ldr	r0, [pc, #112]	@ (8000c28 <Task_MultiSensorScan+0x100>)
 8000bb6:	f004 f885 	bl	8004cc4 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 0, 65, 0, g_strHumi);
 8000bba:	4b16      	ldr	r3, [pc, #88]	@ (8000c14 <Task_MultiSensorScan+0xec>)
 8000bbc:	9300      	str	r3, [sp, #0]
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	2241      	movs	r2, #65	@ 0x41
 8000bc2:	2100      	movs	r1, #0
 8000bc4:	4818      	ldr	r0, [pc, #96]	@ (8000c28 <Task_MultiSensorScan+0x100>)
 8000bc6:	f004 f87d 	bl	8004cc4 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 0, 90, 0, g_strLight);
 8000bca:	4b13      	ldr	r3, [pc, #76]	@ (8000c18 <Task_MultiSensorScan+0xf0>)
 8000bcc:	9300      	str	r3, [sp, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	225a      	movs	r2, #90	@ 0x5a
 8000bd2:	2100      	movs	r1, #0
 8000bd4:	4814      	ldr	r0, [pc, #80]	@ (8000c28 <Task_MultiSensorScan+0x100>)
 8000bd6:	f004 f875 	bl	8004cc4 <ucg_DrawString>

	// Send data to simulation software----------------------------------------------------
	TempSensor_SendPacketRespond(g_temperature);
 8000bda:	4b0a      	ldr	r3, [pc, #40]	@ (8000c04 <Task_MultiSensorScan+0xdc>)
 8000bdc:	881b      	ldrh	r3, [r3, #0]
 8000bde:	4618      	mov	r0, r3
 8000be0:	f002 fb4d 	bl	800327e <TempSensor_SendPacketRespond>
	HumiSensor_SendPacketRespond(g_humidity);
 8000be4:	4b08      	ldr	r3, [pc, #32]	@ (8000c08 <Task_MultiSensorScan+0xe0>)
 8000be6:	881b      	ldrh	r3, [r3, #0]
 8000be8:	4618      	mov	r0, r3
 8000bea:	f002 fb63 	bl	80032b4 <HumiSensor_SendPacketRespond>
	LightSensor_SendPacketRespond(g_light);
 8000bee:	4b07      	ldr	r3, [pc, #28]	@ (8000c0c <Task_MultiSensorScan+0xe4>)
 8000bf0:	881b      	ldrh	r3, [r3, #0]
 8000bf2:	4618      	mov	r0, r3
 8000bf4:	f002 fb22 	bl	800323c <LightSensor_SendPacketRespond>
}
 8000bf8:	bf00      	nop
 8000bfa:	46bd      	mov	sp, r7
 8000bfc:	bd80      	pop	{r7, pc}
 8000bfe:	bf00      	nop
 8000c00:	51eb851f 	.word	0x51eb851f
 8000c04:	20000194 	.word	0x20000194
 8000c08:	20000196 	.word	0x20000196
 8000c0c:	20000198 	.word	0x20000198
 8000c10:	200002c0 	.word	0x200002c0
 8000c14:	200002e0 	.word	0x200002e0
 8000c18:	20000300 	.word	0x20000300
 8000c1c:	08007d2c 	.word	0x08007d2c
 8000c20:	08007d40 	.word	0x08007d40
 8000c24:	08007d54 	.word	0x08007d54
 8000c28:	200000d8 	.word	0x200000d8

08000c2c <Serial_SendPacketCustom>:
 *
 * @note:		None
 */
void Serial_SendPacketCustom (uint8_t byOption, uint8_t byCmdId, uint8_t byCmdType,
							  uint8_t *pPayload, uint8_t byLengthPayload)
{
 8000c2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c30:	b087      	sub	sp, #28
 8000c32:	af00      	add	r7, sp, #0
 8000c34:	603b      	str	r3, [r7, #0]
 8000c36:	4603      	mov	r3, r0
 8000c38:	71fb      	strb	r3, [r7, #7]
 8000c3a:	460b      	mov	r3, r1
 8000c3c:	71bb      	strb	r3, [r7, #6]
 8000c3e:	4613      	mov	r3, r2
 8000c40:	717b      	strb	r3, [r7, #5]
 8000c42:	466b      	mov	r3, sp
 8000c44:	461e      	mov	r6, r3
	uint8_t	byLength = 5 + byLengthPayload;
 8000c46:	f897 3038 	ldrb.w	r3, [r7, #56]	@ 0x38
 8000c4a:	3305      	adds	r3, #5
 8000c4c:	74bb      	strb	r3, [r7, #18]
	static uint8_t bySequence = 0;
	uint8_t byCXOR = CXOR_INIT_VAL;
 8000c4e:	23ff      	movs	r3, #255	@ 0xff
 8000c50:	75fb      	strb	r3, [r7, #23]
	uint8_t size = 0;
 8000c52:	2300      	movs	r3, #0
 8000c54:	75bb      	strb	r3, [r7, #22]
	uint8_t Frame[byLength + 2];
 8000c56:	7cbb      	ldrb	r3, [r7, #18]
 8000c58:	1c99      	adds	r1, r3, #2
 8000c5a:	1e4b      	subs	r3, r1, #1
 8000c5c:	60fb      	str	r3, [r7, #12]
 8000c5e:	460a      	mov	r2, r1
 8000c60:	2300      	movs	r3, #0
 8000c62:	4690      	mov	r8, r2
 8000c64:	4699      	mov	r9, r3
 8000c66:	f04f 0200 	mov.w	r2, #0
 8000c6a:	f04f 0300 	mov.w	r3, #0
 8000c6e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8000c72:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8000c76:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8000c7a:	460a      	mov	r2, r1
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	4614      	mov	r4, r2
 8000c80:	461d      	mov	r5, r3
 8000c82:	f04f 0200 	mov.w	r2, #0
 8000c86:	f04f 0300 	mov.w	r3, #0
 8000c8a:	00eb      	lsls	r3, r5, #3
 8000c8c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8000c90:	00e2      	lsls	r2, r4, #3
 8000c92:	460b      	mov	r3, r1
 8000c94:	3307      	adds	r3, #7
 8000c96:	08db      	lsrs	r3, r3, #3
 8000c98:	00db      	lsls	r3, r3, #3
 8000c9a:	ebad 0d03 	sub.w	sp, sp, r3
 8000c9e:	466b      	mov	r3, sp
 8000ca0:	3300      	adds	r3, #0
 8000ca2:	60bb      	str	r3, [r7, #8]

	bySequence++;
 8000ca4:	4b41      	ldr	r3, [pc, #260]	@ (8000dac <Serial_SendPacketCustom+0x180>)
 8000ca6:	781b      	ldrb	r3, [r3, #0]
 8000ca8:	3301      	adds	r3, #1
 8000caa:	b2da      	uxtb	r2, r3
 8000cac:	4b3f      	ldr	r3, [pc, #252]	@ (8000dac <Serial_SendPacketCustom+0x180>)
 8000cae:	701a      	strb	r2, [r3, #0]

	Frame[size++] = FRAME_SOF;
 8000cb0:	7dbb      	ldrb	r3, [r7, #22]
 8000cb2:	1c5a      	adds	r2, r3, #1
 8000cb4:	75ba      	strb	r2, [r7, #22]
 8000cb6:	461a      	mov	r2, r3
 8000cb8:	68bb      	ldr	r3, [r7, #8]
 8000cba:	21b1      	movs	r1, #177	@ 0xb1
 8000cbc:	5499      	strb	r1, [r3, r2]
	Frame[size++] = byLength;
 8000cbe:	7dbb      	ldrb	r3, [r7, #22]
 8000cc0:	1c5a      	adds	r2, r3, #1
 8000cc2:	75ba      	strb	r2, [r7, #22]
 8000cc4:	4619      	mov	r1, r3
 8000cc6:	68bb      	ldr	r3, [r7, #8]
 8000cc8:	7cba      	ldrb	r2, [r7, #18]
 8000cca:	545a      	strb	r2, [r3, r1]
	Frame[size++] = byOption;
 8000ccc:	7dbb      	ldrb	r3, [r7, #22]
 8000cce:	1c5a      	adds	r2, r3, #1
 8000cd0:	75ba      	strb	r2, [r7, #22]
 8000cd2:	4619      	mov	r1, r3
 8000cd4:	68bb      	ldr	r3, [r7, #8]
 8000cd6:	79fa      	ldrb	r2, [r7, #7]
 8000cd8:	545a      	strb	r2, [r3, r1]
	Frame[size++] = byCmdId;
 8000cda:	7dbb      	ldrb	r3, [r7, #22]
 8000cdc:	1c5a      	adds	r2, r3, #1
 8000cde:	75ba      	strb	r2, [r7, #22]
 8000ce0:	4619      	mov	r1, r3
 8000ce2:	68bb      	ldr	r3, [r7, #8]
 8000ce4:	79ba      	ldrb	r2, [r7, #6]
 8000ce6:	545a      	strb	r2, [r3, r1]
	Frame[size++] = byCmdType;
 8000ce8:	7dbb      	ldrb	r3, [r7, #22]
 8000cea:	1c5a      	adds	r2, r3, #1
 8000cec:	75ba      	strb	r2, [r7, #22]
 8000cee:	4619      	mov	r1, r3
 8000cf0:	68bb      	ldr	r3, [r7, #8]
 8000cf2:	797a      	ldrb	r2, [r7, #5]
 8000cf4:	545a      	strb	r2, [r3, r1]

	for (uint8_t i = 0; i < byLengthPayload; i++)
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	757b      	strb	r3, [r7, #21]
 8000cfa:	e00c      	b.n	8000d16 <Serial_SendPacketCustom+0xea>
	{
		Frame[size++] = pPayload[i];
 8000cfc:	7d7b      	ldrb	r3, [r7, #21]
 8000cfe:	683a      	ldr	r2, [r7, #0]
 8000d00:	441a      	add	r2, r3
 8000d02:	7dbb      	ldrb	r3, [r7, #22]
 8000d04:	1c59      	adds	r1, r3, #1
 8000d06:	75b9      	strb	r1, [r7, #22]
 8000d08:	4619      	mov	r1, r3
 8000d0a:	7812      	ldrb	r2, [r2, #0]
 8000d0c:	68bb      	ldr	r3, [r7, #8]
 8000d0e:	545a      	strb	r2, [r3, r1]
	for (uint8_t i = 0; i < byLengthPayload; i++)
 8000d10:	7d7b      	ldrb	r3, [r7, #21]
 8000d12:	3301      	adds	r3, #1
 8000d14:	757b      	strb	r3, [r7, #21]
 8000d16:	7d7a      	ldrb	r2, [r7, #21]
 8000d18:	f897 3038 	ldrb.w	r3, [r7, #56]	@ 0x38
 8000d1c:	429a      	cmp	r2, r3
 8000d1e:	d3ed      	bcc.n	8000cfc <Serial_SendPacketCustom+0xd0>
	}

	Frame[size++] = bySequence;
 8000d20:	7dbb      	ldrb	r3, [r7, #22]
 8000d22:	1c5a      	adds	r2, r3, #1
 8000d24:	75ba      	strb	r2, [r7, #22]
 8000d26:	461a      	mov	r2, r3
 8000d28:	4b20      	ldr	r3, [pc, #128]	@ (8000dac <Serial_SendPacketCustom+0x180>)
 8000d2a:	7819      	ldrb	r1, [r3, #0]
 8000d2c:	68bb      	ldr	r3, [r7, #8]
 8000d2e:	5499      	strb	r1, [r3, r2]

	for (uint8_t j = 2; j < size; j++)
 8000d30:	2302      	movs	r3, #2
 8000d32:	753b      	strb	r3, [r7, #20]
 8000d34:	e008      	b.n	8000d48 <Serial_SendPacketCustom+0x11c>
	{
		byCXOR ^= Frame[j];
 8000d36:	7d3b      	ldrb	r3, [r7, #20]
 8000d38:	68ba      	ldr	r2, [r7, #8]
 8000d3a:	5cd2      	ldrb	r2, [r2, r3]
 8000d3c:	7dfb      	ldrb	r3, [r7, #23]
 8000d3e:	4053      	eors	r3, r2
 8000d40:	75fb      	strb	r3, [r7, #23]
	for (uint8_t j = 2; j < size; j++)
 8000d42:	7d3b      	ldrb	r3, [r7, #20]
 8000d44:	3301      	adds	r3, #1
 8000d46:	753b      	strb	r3, [r7, #20]
 8000d48:	7d3a      	ldrb	r2, [r7, #20]
 8000d4a:	7dbb      	ldrb	r3, [r7, #22]
 8000d4c:	429a      	cmp	r2, r3
 8000d4e:	d3f2      	bcc.n	8000d36 <Serial_SendPacketCustom+0x10a>
	}
	Frame[size++] = byCXOR;
 8000d50:	7dbb      	ldrb	r3, [r7, #22]
 8000d52:	1c5a      	adds	r2, r3, #1
 8000d54:	75ba      	strb	r2, [r7, #22]
 8000d56:	4619      	mov	r1, r3
 8000d58:	68bb      	ldr	r3, [r7, #8]
 8000d5a:	7dfa      	ldrb	r2, [r7, #23]
 8000d5c:	545a      	strb	r2, [r3, r1]

	for (uint8_t k = 0; k < size; k++)
 8000d5e:	2300      	movs	r3, #0
 8000d60:	74fb      	strb	r3, [r7, #19]
 8000d62:	e019      	b.n	8000d98 <Serial_SendPacketCustom+0x16c>
	{
		while(USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET);
 8000d64:	bf00      	nop
 8000d66:	2180      	movs	r1, #128	@ 0x80
 8000d68:	4811      	ldr	r0, [pc, #68]	@ (8000db0 <Serial_SendPacketCustom+0x184>)
 8000d6a:	f001 f92b 	bl	8001fc4 <USART_GetFlagStatus>
 8000d6e:	4603      	mov	r3, r0
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d0f8      	beq.n	8000d66 <Serial_SendPacketCustom+0x13a>
		USART_SendData(USART2, Frame[k]);
 8000d74:	7cfb      	ldrb	r3, [r7, #19]
 8000d76:	68ba      	ldr	r2, [r7, #8]
 8000d78:	5cd3      	ldrb	r3, [r2, r3]
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	480c      	ldr	r0, [pc, #48]	@ (8000db0 <Serial_SendPacketCustom+0x184>)
 8000d7e:	f001 f8b7 	bl	8001ef0 <USART_SendData>
		while(USART_GetFlagStatus(USART2, USART_FLAG_TC) == RESET);
 8000d82:	bf00      	nop
 8000d84:	2140      	movs	r1, #64	@ 0x40
 8000d86:	480a      	ldr	r0, [pc, #40]	@ (8000db0 <Serial_SendPacketCustom+0x184>)
 8000d88:	f001 f91c 	bl	8001fc4 <USART_GetFlagStatus>
 8000d8c:	4603      	mov	r3, r0
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	d0f8      	beq.n	8000d84 <Serial_SendPacketCustom+0x158>
	for (uint8_t k = 0; k < size; k++)
 8000d92:	7cfb      	ldrb	r3, [r7, #19]
 8000d94:	3301      	adds	r3, #1
 8000d96:	74fb      	strb	r3, [r7, #19]
 8000d98:	7cfa      	ldrb	r2, [r7, #19]
 8000d9a:	7dbb      	ldrb	r3, [r7, #22]
 8000d9c:	429a      	cmp	r2, r3
 8000d9e:	d3e1      	bcc.n	8000d64 <Serial_SendPacketCustom+0x138>
 8000da0:	46b5      	mov	sp, r6
	}
}
 8000da2:	bf00      	nop
 8000da4:	371c      	adds	r7, #28
 8000da6:	46bd      	mov	sp, r7
 8000da8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000dac:	2000031e 	.word	0x2000031e
 8000db0:	40004400 	.word	0x40004400

08000db4 <processSerialReceiverCustom>:
 * @retval:		None
 *
 * @note:		None
 */
void processSerialReceiverCustom (void)
{
 8000db4:	b590      	push	{r4, r7, lr}
 8000db6:	b085      	sub	sp, #20
 8000db8:	af02      	add	r7, sp, #8
	uint8_t	RxState = PollRxBuff();
 8000dba:	f000 f865 	bl	8000e88 <PollRxBuff>
 8000dbe:	4603      	mov	r3, r0
 8000dc0:	71fb      	strb	r3, [r7, #7]

	if (RxState != USART_STATE_IDLE)
 8000dc2:	79fb      	ldrb	r3, [r7, #7]
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d057      	beq.n	8000e78 <processSerialReceiverCustom+0xc4>
	{
		switch (RxState)
 8000dc8:	79fb      	ldrb	r3, [r7, #7]
 8000dca:	3b01      	subs	r3, #1
 8000dcc:	2b04      	cmp	r3, #4
 8000dce:	d850      	bhi.n	8000e72 <processSerialReceiverCustom+0xbe>
 8000dd0:	a201      	add	r2, pc, #4	@ (adr r2, 8000dd8 <processSerialReceiverCustom+0x24>)
 8000dd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000dd6:	bf00      	nop
 8000dd8:	08000ded 	.word	0x08000ded
 8000ddc:	08000e73 	.word	0x08000e73
 8000de0:	08000e73 	.word	0x08000e73
 8000de4:	08000e73 	.word	0x08000e73
 8000de8:	08000e73 	.word	0x08000e73
		{
			case USART_STATE_DATA_RECEIVED:
			{
				if ((CMD_ID == CMD_ID_LED) && (CMD_TYPE == CMD_TYPE_SET))
 8000dec:	4b24      	ldr	r3, [pc, #144]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000dee:	789b      	ldrb	r3, [r3, #2]
 8000df0:	2b01      	cmp	r3, #1
 8000df2:	d112      	bne.n	8000e1a <processSerialReceiverCustom+0x66>
 8000df4:	4b22      	ldr	r3, [pc, #136]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000df6:	78db      	ldrb	r3, [r3, #3]
 8000df8:	2b02      	cmp	r3, #2
 8000dfa:	d10e      	bne.n	8000e1a <processSerialReceiverCustom+0x66>
				{
					LedCmdSetState(CMD_DATA_LED_ID, CMD_DATA_LED_COLOR, CMD_DATA_LED_NUMBLINK,	\
 8000dfc:	4b20      	ldr	r3, [pc, #128]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000dfe:	7918      	ldrb	r0, [r3, #4]
 8000e00:	4b1f      	ldr	r3, [pc, #124]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e02:	7959      	ldrb	r1, [r3, #5]
 8000e04:	4b1e      	ldr	r3, [pc, #120]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e06:	799a      	ldrb	r2, [r3, #6]
 8000e08:	4b1d      	ldr	r3, [pc, #116]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e0a:	79dc      	ldrb	r4, [r3, #7]
 8000e0c:	4b1c      	ldr	r3, [pc, #112]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e0e:	7a1b      	ldrb	r3, [r3, #8]
 8000e10:	9300      	str	r3, [sp, #0]
 8000e12:	4623      	mov	r3, r4
 8000e14:	f000 fa92 	bl	800133c <LedCmdSetState>
 8000e18:	e02a      	b.n	8000e70 <processSerialReceiverCustom+0xbc>
								   CMD_DATA_LED_INTERVAL, CMD_DATA_LED_LASTSTATE);
				}
				else if ((CMD_ID == CMD_ID_BUZZER) && (CMD_TYPE == CMD_TYPE_SET))
 8000e1a:	4b19      	ldr	r3, [pc, #100]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e1c:	789b      	ldrb	r3, [r3, #2]
 8000e1e:	2b04      	cmp	r3, #4
 8000e20:	d109      	bne.n	8000e36 <processSerialReceiverCustom+0x82>
 8000e22:	4b17      	ldr	r3, [pc, #92]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e24:	78db      	ldrb	r3, [r3, #3]
 8000e26:	2b02      	cmp	r3, #2
 8000e28:	d105      	bne.n	8000e36 <processSerialReceiverCustom+0x82>
				{
					BuzzerCmdSetState(CMD_DATA_BUZZER_STATE);
 8000e2a:	4b15      	ldr	r3, [pc, #84]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e2c:	791b      	ldrb	r3, [r3, #4]
 8000e2e:	4618      	mov	r0, r3
 8000e30:	f000 faf8 	bl	8001424 <BuzzerCmdSetState>
 8000e34:	e01c      	b.n	8000e70 <processSerialReceiverCustom+0xbc>
				}
				else if ((CMD_ID == CMD_ID_BUTTON) && (CMD_TYPE == CMD_TYPE_SET))
 8000e36:	4b12      	ldr	r3, [pc, #72]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e38:	789b      	ldrb	r3, [r3, #2]
 8000e3a:	2b82      	cmp	r3, #130	@ 0x82
 8000e3c:	d10c      	bne.n	8000e58 <processSerialReceiverCustom+0xa4>
 8000e3e:	4b10      	ldr	r3, [pc, #64]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e40:	78db      	ldrb	r3, [r3, #3]
 8000e42:	2b02      	cmp	r3, #2
 8000e44:	d108      	bne.n	8000e58 <processSerialReceiverCustom+0xa4>
				{
					ButtonCmdSetState(CMD_DATA_BUTTON_EVENT, CMD_DATA_BUTTON_STATE);
 8000e46:	4b0e      	ldr	r3, [pc, #56]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e48:	791b      	ldrb	r3, [r3, #4]
 8000e4a:	4a0d      	ldr	r2, [pc, #52]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e4c:	7952      	ldrb	r2, [r2, #5]
 8000e4e:	4611      	mov	r1, r2
 8000e50:	4618      	mov	r0, r3
 8000e52:	f000 f8a1 	bl	8000f98 <ButtonCmdSetState>
 8000e56:	e00b      	b.n	8000e70 <processSerialReceiverCustom+0xbc>
				}
				else if ((CMD_ID == CMD_ID_LCD) && (CMD_TYPE == CMD_TYPE_SET))
 8000e58:	4b09      	ldr	r3, [pc, #36]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e5a:	789b      	ldrb	r3, [r3, #2]
 8000e5c:	2b87      	cmp	r3, #135	@ 0x87
 8000e5e:	d10a      	bne.n	8000e76 <processSerialReceiverCustom+0xc2>
 8000e60:	4b07      	ldr	r3, [pc, #28]	@ (8000e80 <processSerialReceiverCustom+0xcc>)
 8000e62:	78db      	ldrb	r3, [r3, #3]
 8000e64:	2b02      	cmp	r3, #2
 8000e66:	d106      	bne.n	8000e76 <processSerialReceiverCustom+0xc2>
				{
					LcdCmdSetState((char*)(&CMD_DATA_LCD));
 8000e68:	4806      	ldr	r0, [pc, #24]	@ (8000e84 <processSerialReceiverCustom+0xd0>)
 8000e6a:	f000 faed 	bl	8001448 <LcdCmdSetState>
				}
			} break;
 8000e6e:	e002      	b.n	8000e76 <processSerialReceiverCustom+0xc2>
 8000e70:	e001      	b.n	8000e76 <processSerialReceiverCustom+0xc2>
			case USART_STATE_ERROR:
			case USART_STATE_RX_TIMEOUT:
				break;

			default:
				break;
 8000e72:	bf00      	nop
 8000e74:	e000      	b.n	8000e78 <processSerialReceiverCustom+0xc4>
			} break;
 8000e76:	bf00      	nop
		}
	}
}
 8000e78:	bf00      	nop
 8000e7a:	370c      	adds	r7, #12
 8000e7c:	46bd      	mov	sp, r7
 8000e7e:	bd90      	pop	{r4, r7, pc}
 8000e80:	200002ac 	.word	0x200002ac
 8000e84:	200002b0 	.word	0x200002b0

08000e88 <PollRxBuff>:
 * @retval:		byUartState - USART Status
 *
 * @note:		None
 */
uint8_t PollRxBuff (void)
{
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	b082      	sub	sp, #8
 8000e8c:	af00      	add	r7, sp, #0
	// Variable to store value after retrieved from Queue
	uint8_t byRxData;

	uint8_t byUartState = (uint8_t) USART_STATE_IDLE;
 8000e8e:	2300      	movs	r3, #0
 8000e90:	71fb      	strb	r3, [r7, #7]

	while ((bufNumItems(&g_serialQueueRx) != 0) && (byUartState == USART_STATE_IDLE))
 8000e92:	e069      	b.n	8000f68 <PollRxBuff+0xe0>
	{
		bufDeDat(&g_serialQueueRx, &byRxData);			// Retrieve data from the queue (FIFO)
 8000e94:	1dbb      	adds	r3, r7, #6
 8000e96:	4619      	mov	r1, r3
 8000e98:	483a      	ldr	r0, [pc, #232]	@ (8000f84 <PollRxBuff+0xfc>)
 8000e9a:	f004 fa7f 	bl	800539c <bufDeDat>

		switch (g_RxBufState)
 8000e9e:	4b3a      	ldr	r3, [pc, #232]	@ (8000f88 <PollRxBuff+0x100>)
 8000ea0:	781b      	ldrb	r3, [r3, #0]
 8000ea2:	2b02      	cmp	r3, #2
 8000ea4:	d04d      	beq.n	8000f42 <PollRxBuff+0xba>
 8000ea6:	2b02      	cmp	r3, #2
 8000ea8:	dc59      	bgt.n	8000f5e <PollRxBuff+0xd6>
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d002      	beq.n	8000eb4 <PollRxBuff+0x2c>
 8000eae:	2b01      	cmp	r3, #1
 8000eb0:	d01c      	beq.n	8000eec <PollRxBuff+0x64>
 8000eb2:	e054      	b.n	8000f5e <PollRxBuff+0xd6>
		{
			case RX_STATE_START_BYTE:
			{
				if (byRxData == FRAME_SOF)
 8000eb4:	79bb      	ldrb	r3, [r7, #6]
 8000eb6:	2bb1      	cmp	r3, #177	@ 0xb1
 8000eb8:	d109      	bne.n	8000ece <PollRxBuff+0x46>
				{
					g_IndexRxBuf = 0;
 8000eba:	4b34      	ldr	r3, [pc, #208]	@ (8000f8c <PollRxBuff+0x104>)
 8000ebc:	2200      	movs	r2, #0
 8000ebe:	701a      	strb	r2, [r3, #0]
					g_byCheckXorRxBuf = CXOR_INIT_VAL;
 8000ec0:	4b33      	ldr	r3, [pc, #204]	@ (8000f90 <PollRxBuff+0x108>)
 8000ec2:	22ff      	movs	r2, #255	@ 0xff
 8000ec4:	701a      	strb	r2, [r3, #0]
					g_RxBufState = RX_STATE_DATA_BYTES;
 8000ec6:	4b30      	ldr	r3, [pc, #192]	@ (8000f88 <PollRxBuff+0x100>)
 8000ec8:	2201      	movs	r2, #1
 8000eca:	701a      	strb	r2, [r3, #0]
				}
				else
				{
					byUartState = USART_STATE_ERROR;
				}
			} break;
 8000ecc:	e04c      	b.n	8000f68 <PollRxBuff+0xe0>
				else if (byRxData == FRAME_ACK)
 8000ece:	79bb      	ldrb	r3, [r7, #6]
 8000ed0:	2b06      	cmp	r3, #6
 8000ed2:	d102      	bne.n	8000eda <PollRxBuff+0x52>
					byUartState = USART_STATE_ACK_RECEIVED;
 8000ed4:	2302      	movs	r3, #2
 8000ed6:	71fb      	strb	r3, [r7, #7]
			} break;
 8000ed8:	e046      	b.n	8000f68 <PollRxBuff+0xe0>
				else if (byRxData == FRAME_NACK)
 8000eda:	79bb      	ldrb	r3, [r7, #6]
 8000edc:	2b15      	cmp	r3, #21
 8000ede:	d102      	bne.n	8000ee6 <PollRxBuff+0x5e>
					byUartState = USART_STATE_NACK_RECEIVED;
 8000ee0:	2303      	movs	r3, #3
 8000ee2:	71fb      	strb	r3, [r7, #7]
			} break;
 8000ee4:	e040      	b.n	8000f68 <PollRxBuff+0xe0>
					byUartState = USART_STATE_ERROR;
 8000ee6:	2304      	movs	r3, #4
 8000ee8:	71fb      	strb	r3, [r7, #7]
			} break;
 8000eea:	e03d      	b.n	8000f68 <PollRxBuff+0xe0>

			case RX_STATE_DATA_BYTES:
			{
				if (g_IndexRxBuf < RX_BUFFER_SIZE)
 8000eec:	4b27      	ldr	r3, [pc, #156]	@ (8000f8c <PollRxBuff+0x104>)
 8000eee:	781b      	ldrb	r3, [r3, #0]
 8000ef0:	2b0f      	cmp	r3, #15
 8000ef2:	d820      	bhi.n	8000f36 <PollRxBuff+0xae>
				{
					// Retrieve the bytes in the transmission frame
					g_strRxBuffer[g_IndexRxBuf] = byRxData;
 8000ef4:	4b25      	ldr	r3, [pc, #148]	@ (8000f8c <PollRxBuff+0x104>)
 8000ef6:	781b      	ldrb	r3, [r3, #0]
 8000ef8:	461a      	mov	r2, r3
 8000efa:	79b9      	ldrb	r1, [r7, #6]
 8000efc:	4b25      	ldr	r3, [pc, #148]	@ (8000f94 <PollRxBuff+0x10c>)
 8000efe:	5499      	strb	r1, [r3, r2]

					if (g_IndexRxBuf > 0)
 8000f00:	4b22      	ldr	r3, [pc, #136]	@ (8000f8c <PollRxBuff+0x104>)
 8000f02:	781b      	ldrb	r3, [r3, #0]
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	d006      	beq.n	8000f16 <PollRxBuff+0x8e>
					{
						g_byCheckXorRxBuf ^= byRxData;		// Calculator CXOR
 8000f08:	4b21      	ldr	r3, [pc, #132]	@ (8000f90 <PollRxBuff+0x108>)
 8000f0a:	781a      	ldrb	r2, [r3, #0]
 8000f0c:	79bb      	ldrb	r3, [r7, #6]
 8000f0e:	4053      	eors	r3, r2
 8000f10:	b2da      	uxtb	r2, r3
 8000f12:	4b1f      	ldr	r3, [pc, #124]	@ (8000f90 <PollRxBuff+0x108>)
 8000f14:	701a      	strb	r2, [r3, #0]
					}

					g_IndexRxBuf++;
 8000f16:	4b1d      	ldr	r3, [pc, #116]	@ (8000f8c <PollRxBuff+0x104>)
 8000f18:	781b      	ldrb	r3, [r3, #0]
 8000f1a:	3301      	adds	r3, #1
 8000f1c:	b2da      	uxtb	r2, r3
 8000f1e:	4b1b      	ldr	r3, [pc, #108]	@ (8000f8c <PollRxBuff+0x104>)
 8000f20:	701a      	strb	r2, [r3, #0]

					if (g_IndexRxBuf == *g_strRxBuffer)
 8000f22:	4b1c      	ldr	r3, [pc, #112]	@ (8000f94 <PollRxBuff+0x10c>)
 8000f24:	781a      	ldrb	r2, [r3, #0]
 8000f26:	4b19      	ldr	r3, [pc, #100]	@ (8000f8c <PollRxBuff+0x104>)
 8000f28:	781b      	ldrb	r3, [r3, #0]
 8000f2a:	429a      	cmp	r2, r3
 8000f2c:	d11b      	bne.n	8000f66 <PollRxBuff+0xde>
					{
						g_RxBufState = RX_STATE_CXOR_BYTE;
 8000f2e:	4b16      	ldr	r3, [pc, #88]	@ (8000f88 <PollRxBuff+0x100>)
 8000f30:	2202      	movs	r2, #2
 8000f32:	701a      	strb	r2, [r3, #0]
				else
				{
					g_RxBufState = RX_STATE_START_BYTE;
					byUartState = USART_STATE_ERROR;
				}
			} break;
 8000f34:	e017      	b.n	8000f66 <PollRxBuff+0xde>
					g_RxBufState = RX_STATE_START_BYTE;
 8000f36:	4b14      	ldr	r3, [pc, #80]	@ (8000f88 <PollRxBuff+0x100>)
 8000f38:	2200      	movs	r2, #0
 8000f3a:	701a      	strb	r2, [r3, #0]
					byUartState = USART_STATE_ERROR;
 8000f3c:	2304      	movs	r3, #4
 8000f3e:	71fb      	strb	r3, [r7, #7]
			} break;
 8000f40:	e011      	b.n	8000f66 <PollRxBuff+0xde>

			case RX_STATE_CXOR_BYTE:
			{
				if (byRxData == g_byCheckXorRxBuf)
 8000f42:	79ba      	ldrb	r2, [r7, #6]
 8000f44:	4b12      	ldr	r3, [pc, #72]	@ (8000f90 <PollRxBuff+0x108>)
 8000f46:	781b      	ldrb	r3, [r3, #0]
 8000f48:	429a      	cmp	r2, r3
 8000f4a:	d102      	bne.n	8000f52 <PollRxBuff+0xca>
				{
					byUartState = USART_STATE_DATA_RECEIVED;
 8000f4c:	2301      	movs	r3, #1
 8000f4e:	71fb      	strb	r3, [r7, #7]
 8000f50:	e001      	b.n	8000f56 <PollRxBuff+0xce>
				}
				else
				{
					byUartState = USART_STATE_ERROR;
 8000f52:	2304      	movs	r3, #4
 8000f54:	71fb      	strb	r3, [r7, #7]
				}

				g_RxBufState = RX_STATE_START_BYTE;
 8000f56:	4b0c      	ldr	r3, [pc, #48]	@ (8000f88 <PollRxBuff+0x100>)
 8000f58:	2200      	movs	r2, #0
 8000f5a:	701a      	strb	r2, [r3, #0]
			} break;
 8000f5c:	e004      	b.n	8000f68 <PollRxBuff+0xe0>

			default:
				g_RxBufState = RX_STATE_START_BYTE;
 8000f5e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f88 <PollRxBuff+0x100>)
 8000f60:	2200      	movs	r2, #0
 8000f62:	701a      	strb	r2, [r3, #0]
				break;
 8000f64:	e000      	b.n	8000f68 <PollRxBuff+0xe0>
			} break;
 8000f66:	bf00      	nop
	while ((bufNumItems(&g_serialQueueRx) != 0) && (byUartState == USART_STATE_IDLE))
 8000f68:	4806      	ldr	r0, [pc, #24]	@ (8000f84 <PollRxBuff+0xfc>)
 8000f6a:	f004 f97e 	bl	800526a <bufNumItems>
 8000f6e:	4603      	mov	r3, r0
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	d002      	beq.n	8000f7a <PollRxBuff+0xf2>
 8000f74:	79fb      	ldrb	r3, [r7, #7]
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d08c      	beq.n	8000e94 <PollRxBuff+0xc>
		}
	}

	return byUartState;
 8000f7a:	79fb      	ldrb	r3, [r7, #7]
}
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	3708      	adds	r7, #8
 8000f80:	46bd      	mov	sp, r7
 8000f82:	bd80      	pop	{r7, pc}
 8000f84:	2000029c 	.word	0x2000029c
 8000f88:	2000019a 	.word	0x2000019a
 8000f8c:	2000019b 	.word	0x2000019b
 8000f90:	200002bc 	.word	0x200002bc
 8000f94:	200002ac 	.word	0x200002ac

08000f98 <ButtonCmdSetState>:
 * @retval:		None
 *
 * @note:		None
 */
void ButtonCmdSetState (uint8_t button_event, uint8_t button_state)
{
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	b084      	sub	sp, #16
 8000f9c:	af02      	add	r7, sp, #8
 8000f9e:	4603      	mov	r3, r0
 8000fa0:	460a      	mov	r2, r1
 8000fa2:	71fb      	strb	r3, [r7, #7]
 8000fa4:	4613      	mov	r3, r2
 8000fa6:	71bb      	strb	r3, [r7, #6]
	switch (button_event)
 8000fa8:	79fb      	ldrb	r3, [r7, #7]
 8000faa:	3b01      	subs	r3, #1
 8000fac:	2b04      	cmp	r3, #4
 8000fae:	f200 818c 	bhi.w	80012ca <ButtonCmdSetState+0x332>
 8000fb2:	a201      	add	r2, pc, #4	@ (adr r2, 8000fb8 <ButtonCmdSetState+0x20>)
 8000fb4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000fb8:	08001113 	.word	0x08001113
 8000fbc:	08001181 	.word	0x08001181
 8000fc0:	08000fcd 	.word	0x08000fcd
 8000fc4:	080011ef 	.word	0x080011ef
 8000fc8:	0800125d 	.word	0x0800125d
	{
		case EVENT_OF_BUTTON_3_PRESS_LOGIC:
		{
			g_B3Count++;
 8000fcc:	4bc2      	ldr	r3, [pc, #776]	@ (80012d8 <ButtonCmdSetState+0x340>)
 8000fce:	781b      	ldrb	r3, [r3, #0]
 8000fd0:	3301      	adds	r3, #1
 8000fd2:	b2da      	uxtb	r2, r3
 8000fd4:	4bc0      	ldr	r3, [pc, #768]	@ (80012d8 <ButtonCmdSetState+0x340>)
 8000fd6:	701a      	strb	r2, [r3, #0]

			if (g_B3Count == 5)
 8000fd8:	4bbf      	ldr	r3, [pc, #764]	@ (80012d8 <ButtonCmdSetState+0x340>)
 8000fda:	781b      	ldrb	r3, [r3, #0]
 8000fdc:	2b05      	cmp	r3, #5
 8000fde:	f040 8176 	bne.w	80012ce <ButtonCmdSetState+0x336>
			{
				if (g_idTimerSensorUpdate != NO_TIMER)
 8000fe2:	4bbe      	ldr	r3, [pc, #760]	@ (80012dc <ButtonCmdSetState+0x344>)
 8000fe4:	781b      	ldrb	r3, [r3, #0]
 8000fe6:	2bff      	cmp	r3, #255	@ 0xff
 8000fe8:	d007      	beq.n	8000ffa <ButtonCmdSetState+0x62>
				{
					TimerStop(g_idTimerSensorUpdate);
 8000fea:	4bbc      	ldr	r3, [pc, #752]	@ (80012dc <ButtonCmdSetState+0x344>)
 8000fec:	781b      	ldrb	r3, [r3, #0]
 8000fee:	4618      	mov	r0, r3
 8000ff0:	f001 ff20 	bl	8002e34 <TimerStop>
					g_idTimerSensorUpdate = NO_TIMER;
 8000ff4:	4bb9      	ldr	r3, [pc, #740]	@ (80012dc <ButtonCmdSetState+0x344>)
 8000ff6:	22ff      	movs	r2, #255	@ 0xff
 8000ff8:	701a      	strb	r2, [r3, #0]
				}

				// Display system status information on the LCD screen-------------------------
				memset(g_strTemp, 0, sizeof(g_strTemp));
 8000ffa:	221e      	movs	r2, #30
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	48b8      	ldr	r0, [pc, #736]	@ (80012e0 <ButtonCmdSetState+0x348>)
 8001000:	f006 f96e 	bl	80072e0 <memset>
				memset(g_strHumi, 0, sizeof(g_strHumi));
 8001004:	221e      	movs	r2, #30
 8001006:	2100      	movs	r1, #0
 8001008:	48b6      	ldr	r0, [pc, #728]	@ (80012e4 <ButtonCmdSetState+0x34c>)
 800100a:	f006 f969 	bl	80072e0 <memset>
				memset(g_strLight, 0, sizeof(g_strLight));
 800100e:	221e      	movs	r2, #30
 8001010:	2100      	movs	r1, #0
 8001012:	48b5      	ldr	r0, [pc, #724]	@ (80012e8 <ButtonCmdSetState+0x350>)
 8001014:	f006 f964 	bl	80072e0 <memset>
				ucg_ClearScreen(&g_ucg);
 8001018:	48b4      	ldr	r0, [pc, #720]	@ (80012ec <ButtonCmdSetState+0x354>)
 800101a:	f002 fdfe 	bl	8003c1a <ucg_ClearScreen>
				ucg_SetFont(&g_ucg, ucg_font_ncenR08_hf);
 800101e:	49b4      	ldr	r1, [pc, #720]	@ (80012f0 <ButtonCmdSetState+0x358>)
 8001020:	48b2      	ldr	r0, [pc, #712]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001022:	f003 ff13 	bl	8004e4c <ucg_SetFont>
				ucg_DrawString(&g_ucg, 0, 12, 0, "Device: Board");
 8001026:	4bb3      	ldr	r3, [pc, #716]	@ (80012f4 <ButtonCmdSetState+0x35c>)
 8001028:	9300      	str	r3, [sp, #0]
 800102a:	2300      	movs	r3, #0
 800102c:	220c      	movs	r2, #12
 800102e:	2100      	movs	r1, #0
 8001030:	48ae      	ldr	r0, [pc, #696]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001032:	f003 fe47 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 24, 0, "STM32 Nucleo.");
 8001036:	4bb0      	ldr	r3, [pc, #704]	@ (80012f8 <ButtonCmdSetState+0x360>)
 8001038:	9300      	str	r3, [sp, #0]
 800103a:	2300      	movs	r3, #0
 800103c:	2218      	movs	r2, #24
 800103e:	2100      	movs	r1, #0
 8001040:	48aa      	ldr	r0, [pc, #680]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001042:	f003 fe3f 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 36, 0, "Code: STM32F401RE_");
 8001046:	4bad      	ldr	r3, [pc, #692]	@ (80012fc <ButtonCmdSetState+0x364>)
 8001048:	9300      	str	r3, [sp, #0]
 800104a:	2300      	movs	r3, #0
 800104c:	2224      	movs	r2, #36	@ 0x24
 800104e:	2100      	movs	r1, #0
 8001050:	48a6      	ldr	r0, [pc, #664]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001052:	f003 fe37 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 48, 0, "NUCLEO.");
 8001056:	4baa      	ldr	r3, [pc, #680]	@ (8001300 <ButtonCmdSetState+0x368>)
 8001058:	9300      	str	r3, [sp, #0]
 800105a:	2300      	movs	r3, #0
 800105c:	2230      	movs	r2, #48	@ 0x30
 800105e:	2100      	movs	r1, #0
 8001060:	48a2      	ldr	r0, [pc, #648]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001062:	f003 fe2f 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 60, 0, "Manufacturer:");
 8001066:	4ba7      	ldr	r3, [pc, #668]	@ (8001304 <ButtonCmdSetState+0x36c>)
 8001068:	9300      	str	r3, [sp, #0]
 800106a:	2300      	movs	r3, #0
 800106c:	223c      	movs	r2, #60	@ 0x3c
 800106e:	2100      	movs	r1, #0
 8001070:	489e      	ldr	r0, [pc, #632]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001072:	f003 fe27 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 72, 0, "STMicroelectronics.");
 8001076:	4ba4      	ldr	r3, [pc, #656]	@ (8001308 <ButtonCmdSetState+0x370>)
 8001078:	9300      	str	r3, [sp, #0]
 800107a:	2300      	movs	r3, #0
 800107c:	2248      	movs	r2, #72	@ 0x48
 800107e:	2100      	movs	r1, #0
 8001080:	489a      	ldr	r0, [pc, #616]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001082:	f003 fe1f 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 84, 0, "Kit expansion:");
 8001086:	4ba1      	ldr	r3, [pc, #644]	@ (800130c <ButtonCmdSetState+0x374>)
 8001088:	9300      	str	r3, [sp, #0]
 800108a:	2300      	movs	r3, #0
 800108c:	2254      	movs	r2, #84	@ 0x54
 800108e:	2100      	movs	r1, #0
 8001090:	4896      	ldr	r0, [pc, #600]	@ (80012ec <ButtonCmdSetState+0x354>)
 8001092:	f003 fe17 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 97, 0, "Lumi Smarthome.");
 8001096:	4b9e      	ldr	r3, [pc, #632]	@ (8001310 <ButtonCmdSetState+0x378>)
 8001098:	9300      	str	r3, [sp, #0]
 800109a:	2300      	movs	r3, #0
 800109c:	2261      	movs	r2, #97	@ 0x61
 800109e:	2100      	movs	r1, #0
 80010a0:	4892      	ldr	r0, [pc, #584]	@ (80012ec <ButtonCmdSetState+0x354>)
 80010a2:	f003 fe0f 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 110, 0, "Project:");
 80010a6:	4b9b      	ldr	r3, [pc, #620]	@ (8001314 <ButtonCmdSetState+0x37c>)
 80010a8:	9300      	str	r3, [sp, #0]
 80010aa:	2300      	movs	r3, #0
 80010ac:	226e      	movs	r2, #110	@ 0x6e
 80010ae:	2100      	movs	r1, #0
 80010b0:	488e      	ldr	r0, [pc, #568]	@ (80012ec <ButtonCmdSetState+0x354>)
 80010b2:	f003 fe07 	bl	8004cc4 <ucg_DrawString>
				ucg_DrawString(&g_ucg, 0, 123, 0, "Simulator touch switch.");
 80010b6:	4b98      	ldr	r3, [pc, #608]	@ (8001318 <ButtonCmdSetState+0x380>)
 80010b8:	9300      	str	r3, [sp, #0]
 80010ba:	2300      	movs	r3, #0
 80010bc:	227b      	movs	r2, #123	@ 0x7b
 80010be:	2100      	movs	r1, #0
 80010c0:	488a      	ldr	r0, [pc, #552]	@ (80012ec <ButtonCmdSetState+0x354>)
 80010c2:	f003 fdff 	bl	8004cc4 <ucg_DrawString>

				// Blink the green LED 5 times-------------------------------------------------
				LedControl_BlinkStart(LED_ALL_ID, BLINK_GREEN, 10, 1000, LED_COLOR_BLACK);
 80010c6:	2304      	movs	r3, #4
 80010c8:	9300      	str	r3, [sp, #0]
 80010ca:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80010ce:	220a      	movs	r2, #10
 80010d0:	2102      	movs	r1, #2
 80010d2:	2003      	movs	r0, #3
 80010d4:	f001 fc3e 	bl	8002954 <LedControl_BlinkStart>

				// Temperature, humidity, light intensity parameters---------------------------
				if (g_idTimerDisplayLCD != NO_TIMER)
 80010d8:	4b90      	ldr	r3, [pc, #576]	@ (800131c <ButtonCmdSetState+0x384>)
 80010da:	781b      	ldrb	r3, [r3, #0]
 80010dc:	2bff      	cmp	r3, #255	@ 0xff
 80010de:	d007      	beq.n	80010f0 <ButtonCmdSetState+0x158>
				{
					TimerStop(g_idTimerDisplayLCD);
 80010e0:	4b8e      	ldr	r3, [pc, #568]	@ (800131c <ButtonCmdSetState+0x384>)
 80010e2:	781b      	ldrb	r3, [r3, #0]
 80010e4:	4618      	mov	r0, r3
 80010e6:	f001 fea5 	bl	8002e34 <TimerStop>
					g_idTimerDisplayLCD = NO_TIMER;
 80010ea:	4b8c      	ldr	r3, [pc, #560]	@ (800131c <ButtonCmdSetState+0x384>)
 80010ec:	22ff      	movs	r2, #255	@ 0xff
 80010ee:	701a      	strb	r2, [r3, #0]
				}

				g_idTimerDisplayLCD = TimerStart("MultiSensorScan", 7000, 1, 	\
 80010f0:	2300      	movs	r3, #0
 80010f2:	9300      	str	r3, [sp, #0]
 80010f4:	4b8a      	ldr	r3, [pc, #552]	@ (8001320 <ButtonCmdSetState+0x388>)
 80010f6:	2201      	movs	r2, #1
 80010f8:	f641 3158 	movw	r1, #7000	@ 0x1b58
 80010fc:	4889      	ldr	r0, [pc, #548]	@ (8001324 <ButtonCmdSetState+0x38c>)
 80010fe:	f001 fe1b 	bl	8002d38 <TimerStart>
 8001102:	4603      	mov	r3, r0
 8001104:	461a      	mov	r2, r3
 8001106:	4b85      	ldr	r3, [pc, #532]	@ (800131c <ButtonCmdSetState+0x384>)
 8001108:	701a      	strb	r2, [r3, #0]
												(void*)MultiSensorScan, NULL);
				g_B3Count = 0;
 800110a:	4b73      	ldr	r3, [pc, #460]	@ (80012d8 <ButtonCmdSetState+0x340>)
 800110c:	2200      	movs	r2, #0
 800110e:	701a      	strb	r2, [r3, #0]
			}
		} break;
 8001110:	e0dd      	b.n	80012ce <ButtonCmdSetState+0x336>

		case EVENT_OF_BUTTON_1_PRESS_LOGIC:
		{
			if(g_ledRed == 0)
 8001112:	4b85      	ldr	r3, [pc, #532]	@ (8001328 <ButtonCmdSetState+0x390>)
 8001114:	781b      	ldrb	r3, [r3, #0]
 8001116:	2b00      	cmp	r3, #0
 8001118:	d11a      	bne.n	8001150 <ButtonCmdSetState+0x1b8>
			{
				g_ledRed = 1;
 800111a:	4b83      	ldr	r3, [pc, #524]	@ (8001328 <ButtonCmdSetState+0x390>)
 800111c:	2201      	movs	r2, #1
 800111e:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 8001120:	4b82      	ldr	r3, [pc, #520]	@ (800132c <ButtonCmdSetState+0x394>)
 8001122:	2200      	movs	r2, #0
 8001124:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 8001126:	4b82      	ldr	r3, [pc, #520]	@ (8001330 <ButtonCmdSetState+0x398>)
 8001128:	2200      	movs	r2, #0
 800112a:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 800112c:	4b81      	ldr	r3, [pc, #516]	@ (8001334 <ButtonCmdSetState+0x39c>)
 800112e:	2200      	movs	r2, #0
 8001130:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_RED, 50);
 8001132:	2132      	movs	r1, #50	@ 0x32
 8001134:	2000      	movs	r0, #0
 8001136:	f001 fc4b 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_RED, 50);
 800113a:	2232      	movs	r2, #50	@ 0x32
 800113c:	2100      	movs	r1, #0
 800113e:	2001      	movs	r0, #1
 8001140:	f001 fc61 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_RED, 50);
 8001144:	2232      	movs	r2, #50	@ 0x32
 8001146:	2100      	movs	r1, #0
 8001148:	2002      	movs	r0, #2
 800114a:	f001 fc5c 	bl	8002a06 <LedControl_SendPacketRespond>
 800114e:	e010      	b.n	8001172 <ButtonCmdSetState+0x1da>
			}
			else
			{
				g_ledRed = 0;
 8001150:	4b75      	ldr	r3, [pc, #468]	@ (8001328 <ButtonCmdSetState+0x390>)
 8001152:	2200      	movs	r2, #0
 8001154:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_RED, 0);
 8001156:	2100      	movs	r1, #0
 8001158:	2000      	movs	r0, #0
 800115a:	f001 fc39 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_RED, 0);
 800115e:	2200      	movs	r2, #0
 8001160:	2100      	movs	r1, #0
 8001162:	2001      	movs	r0, #1
 8001164:	f001 fc4f 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_RED, 0);
 8001168:	2200      	movs	r2, #0
 800116a:	2100      	movs	r1, #0
 800116c:	2002      	movs	r0, #2
 800116e:	f001 fc4a 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 8001172:	4871      	ldr	r0, [pc, #452]	@ (8001338 <ButtonCmdSetState+0x3a0>)
 8001174:	f001 f91a 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 8001178:	2001      	movs	r0, #1
 800117a:	f001 f935 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 800117e:	e0a7      	b.n	80012d0 <ButtonCmdSetState+0x338>

		case EVENT_OF_BUTTON_2_PRESS_LOGIC:
		{
			if(g_ledGreen == 0)
 8001180:	4b6a      	ldr	r3, [pc, #424]	@ (800132c <ButtonCmdSetState+0x394>)
 8001182:	781b      	ldrb	r3, [r3, #0]
 8001184:	2b00      	cmp	r3, #0
 8001186:	d11a      	bne.n	80011be <ButtonCmdSetState+0x226>
			{
				g_ledRed = 0;
 8001188:	4b67      	ldr	r3, [pc, #412]	@ (8001328 <ButtonCmdSetState+0x390>)
 800118a:	2200      	movs	r2, #0
 800118c:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 1;
 800118e:	4b67      	ldr	r3, [pc, #412]	@ (800132c <ButtonCmdSetState+0x394>)
 8001190:	2201      	movs	r2, #1
 8001192:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 8001194:	4b66      	ldr	r3, [pc, #408]	@ (8001330 <ButtonCmdSetState+0x398>)
 8001196:	2200      	movs	r2, #0
 8001198:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 800119a:	4b66      	ldr	r3, [pc, #408]	@ (8001334 <ButtonCmdSetState+0x39c>)
 800119c:	2200      	movs	r2, #0
 800119e:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_GREEN, 50);
 80011a0:	2132      	movs	r1, #50	@ 0x32
 80011a2:	2001      	movs	r0, #1
 80011a4:	f001 fc14 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_GREEN, 50);
 80011a8:	2232      	movs	r2, #50	@ 0x32
 80011aa:	2101      	movs	r1, #1
 80011ac:	2001      	movs	r0, #1
 80011ae:	f001 fc2a 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_GREEN, 50);
 80011b2:	2232      	movs	r2, #50	@ 0x32
 80011b4:	2101      	movs	r1, #1
 80011b6:	2002      	movs	r0, #2
 80011b8:	f001 fc25 	bl	8002a06 <LedControl_SendPacketRespond>
 80011bc:	e010      	b.n	80011e0 <ButtonCmdSetState+0x248>
			}
			else
			{
				g_ledGreen = 0;
 80011be:	4b5b      	ldr	r3, [pc, #364]	@ (800132c <ButtonCmdSetState+0x394>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_GREEN, 0);
 80011c4:	2100      	movs	r1, #0
 80011c6:	2001      	movs	r0, #1
 80011c8:	f001 fc02 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_GREEN, 0);
 80011cc:	2200      	movs	r2, #0
 80011ce:	2101      	movs	r1, #1
 80011d0:	2001      	movs	r0, #1
 80011d2:	f001 fc18 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_GREEN, 0);
 80011d6:	2200      	movs	r2, #0
 80011d8:	2101      	movs	r1, #1
 80011da:	2002      	movs	r0, #2
 80011dc:	f001 fc13 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 80011e0:	4855      	ldr	r0, [pc, #340]	@ (8001338 <ButtonCmdSetState+0x3a0>)
 80011e2:	f001 f8e3 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 80011e6:	2001      	movs	r0, #1
 80011e8:	f001 f8fe 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 80011ec:	e070      	b.n	80012d0 <ButtonCmdSetState+0x338>

		case EVENT_OF_BUTTON_4_PRESS_LOGIC:
		{
			if(g_ledWhite == 0)
 80011ee:	4b50      	ldr	r3, [pc, #320]	@ (8001330 <ButtonCmdSetState+0x398>)
 80011f0:	781b      	ldrb	r3, [r3, #0]
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d11a      	bne.n	800122c <ButtonCmdSetState+0x294>
			{
				g_ledRed = 0;
 80011f6:	4b4c      	ldr	r3, [pc, #304]	@ (8001328 <ButtonCmdSetState+0x390>)
 80011f8:	2200      	movs	r2, #0
 80011fa:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 80011fc:	4b4b      	ldr	r3, [pc, #300]	@ (800132c <ButtonCmdSetState+0x394>)
 80011fe:	2200      	movs	r2, #0
 8001200:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 1;
 8001202:	4b4b      	ldr	r3, [pc, #300]	@ (8001330 <ButtonCmdSetState+0x398>)
 8001204:	2201      	movs	r2, #1
 8001206:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 0;
 8001208:	4b4a      	ldr	r3, [pc, #296]	@ (8001334 <ButtonCmdSetState+0x39c>)
 800120a:	2200      	movs	r2, #0
 800120c:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_WHITE, 50);
 800120e:	2132      	movs	r1, #50	@ 0x32
 8001210:	2003      	movs	r0, #3
 8001212:	f001 fbdd 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_WHITE, 50);
 8001216:	2232      	movs	r2, #50	@ 0x32
 8001218:	2103      	movs	r1, #3
 800121a:	2001      	movs	r0, #1
 800121c:	f001 fbf3 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_WHITE, 50);
 8001220:	2232      	movs	r2, #50	@ 0x32
 8001222:	2103      	movs	r1, #3
 8001224:	2002      	movs	r0, #2
 8001226:	f001 fbee 	bl	8002a06 <LedControl_SendPacketRespond>
 800122a:	e010      	b.n	800124e <ButtonCmdSetState+0x2b6>
			}
			else
			{
				g_ledWhite = 0;
 800122c:	4b40      	ldr	r3, [pc, #256]	@ (8001330 <ButtonCmdSetState+0x398>)
 800122e:	2200      	movs	r2, #0
 8001230:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_WHITE, 0);
 8001232:	2100      	movs	r1, #0
 8001234:	2003      	movs	r0, #3
 8001236:	f001 fbcb 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_WHITE, 0);
 800123a:	2200      	movs	r2, #0
 800123c:	2103      	movs	r1, #3
 800123e:	2001      	movs	r0, #1
 8001240:	f001 fbe1 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_WHITE, 0);
 8001244:	2200      	movs	r2, #0
 8001246:	2103      	movs	r1, #3
 8001248:	2002      	movs	r0, #2
 800124a:	f001 fbdc 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 800124e:	483a      	ldr	r0, [pc, #232]	@ (8001338 <ButtonCmdSetState+0x3a0>)
 8001250:	f001 f8ac 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 8001254:	2001      	movs	r0, #1
 8001256:	f001 f8c7 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 800125a:	e039      	b.n	80012d0 <ButtonCmdSetState+0x338>

		case EVENT_OF_BUTTON_5_PRESS_LOGIC:
		{
			if(g_ledBlue == 0)
 800125c:	4b35      	ldr	r3, [pc, #212]	@ (8001334 <ButtonCmdSetState+0x39c>)
 800125e:	781b      	ldrb	r3, [r3, #0]
 8001260:	2b00      	cmp	r3, #0
 8001262:	d11a      	bne.n	800129a <ButtonCmdSetState+0x302>
			{
				g_ledRed = 0;
 8001264:	4b30      	ldr	r3, [pc, #192]	@ (8001328 <ButtonCmdSetState+0x390>)
 8001266:	2200      	movs	r2, #0
 8001268:	701a      	strb	r2, [r3, #0]
				g_ledGreen = 0;
 800126a:	4b30      	ldr	r3, [pc, #192]	@ (800132c <ButtonCmdSetState+0x394>)
 800126c:	2200      	movs	r2, #0
 800126e:	701a      	strb	r2, [r3, #0]
				g_ledWhite = 0;
 8001270:	4b2f      	ldr	r3, [pc, #188]	@ (8001330 <ButtonCmdSetState+0x398>)
 8001272:	2200      	movs	r2, #0
 8001274:	701a      	strb	r2, [r3, #0]
				g_ledBlue = 1;
 8001276:	4b2f      	ldr	r3, [pc, #188]	@ (8001334 <ButtonCmdSetState+0x39c>)
 8001278:	2201      	movs	r2, #1
 800127a:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_BLUE, 50);
 800127c:	2132      	movs	r1, #50	@ 0x32
 800127e:	2002      	movs	r0, #2
 8001280:	f001 fba6 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_BLUE, 50);
 8001284:	2232      	movs	r2, #50	@ 0x32
 8001286:	2102      	movs	r1, #2
 8001288:	2001      	movs	r0, #1
 800128a:	f001 fbbc 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_BLUE, 50);
 800128e:	2232      	movs	r2, #50	@ 0x32
 8001290:	2102      	movs	r1, #2
 8001292:	2002      	movs	r0, #2
 8001294:	f001 fbb7 	bl	8002a06 <LedControl_SendPacketRespond>
 8001298:	e010      	b.n	80012bc <ButtonCmdSetState+0x324>
			}
			else
			{
				g_ledBlue = 0;
 800129a:	4b26      	ldr	r3, [pc, #152]	@ (8001334 <ButtonCmdSetState+0x39c>)
 800129c:	2200      	movs	r2, #0
 800129e:	701a      	strb	r2, [r3, #0]
				LedControl_SetAllColor(LED_COLOR_BLUE, 0);
 80012a0:	2100      	movs	r1, #0
 80012a2:	2002      	movs	r0, #2
 80012a4:	f001 fb94 	bl	80029d0 <LedControl_SetAllColor>
				LedControl_SendPacketRespond(LED_KIT_ID0, LED_COLOR_BLUE, 0);
 80012a8:	2200      	movs	r2, #0
 80012aa:	2102      	movs	r1, #2
 80012ac:	2001      	movs	r0, #1
 80012ae:	f001 fbaa 	bl	8002a06 <LedControl_SendPacketRespond>
				LedControl_SendPacketRespond(LED_KIT_ID1, LED_COLOR_BLUE, 0);
 80012b2:	2200      	movs	r2, #0
 80012b4:	2102      	movs	r1, #2
 80012b6:	2002      	movs	r0, #2
 80012b8:	f001 fba5 	bl	8002a06 <LedControl_SendPacketRespond>
			}

			BuzzerControl_SetMelody(pbeep);
 80012bc:	481e      	ldr	r0, [pc, #120]	@ (8001338 <ButtonCmdSetState+0x3a0>)
 80012be:	f001 f875 	bl	80023ac <BuzzerControl_SetMelody>
			BuzzerControl_SendPacketRespond(1);
 80012c2:	2001      	movs	r0, #1
 80012c4:	f001 f890 	bl	80023e8 <BuzzerControl_SendPacketRespond>
		} break;
 80012c8:	e002      	b.n	80012d0 <ButtonCmdSetState+0x338>

		default:
			break;
 80012ca:	bf00      	nop
 80012cc:	e000      	b.n	80012d0 <ButtonCmdSetState+0x338>
		} break;
 80012ce:	bf00      	nop
	}
}
 80012d0:	bf00      	nop
 80012d2:	3708      	adds	r7, #8
 80012d4:	46bd      	mov	sp, r7
 80012d6:	bd80      	pop	{r7, pc}
 80012d8:	20000192 	.word	0x20000192
 80012dc:	20000003 	.word	0x20000003
 80012e0:	200002c0 	.word	0x200002c0
 80012e4:	200002e0 	.word	0x200002e0
 80012e8:	20000300 	.word	0x20000300
 80012ec:	200000d8 	.word	0x200000d8
 80012f0:	08007e90 	.word	0x08007e90
 80012f4:	08007c40 	.word	0x08007c40
 80012f8:	08007c50 	.word	0x08007c50
 80012fc:	08007c60 	.word	0x08007c60
 8001300:	08007c74 	.word	0x08007c74
 8001304:	08007c7c 	.word	0x08007c7c
 8001308:	08007c8c 	.word	0x08007c8c
 800130c:	08007ca0 	.word	0x08007ca0
 8001310:	08007cb0 	.word	0x08007cb0
 8001314:	08007cc0 	.word	0x08007cc0
 8001318:	08007ccc 	.word	0x08007ccc
 800131c:	20000002 	.word	0x20000002
 8001320:	08000ac9 	.word	0x08000ac9
 8001324:	08007ce4 	.word	0x08007ce4
 8001328:	2000018d 	.word	0x2000018d
 800132c:	2000018e 	.word	0x2000018e
 8001330:	2000018f 	.word	0x2000018f
 8001334:	20000190 	.word	0x20000190
 8001338:	2000002c 	.word	0x2000002c

0800133c <LedCmdSetState>:
 *
 * @note:	None
 */
void LedCmdSetState (uint8_t led_id, uint8_t led_color, uint8_t led_num_blink,
		 	 	 	 uint8_t led_interval, uint8_t led_last_state)
{
 800133c:	b590      	push	{r4, r7, lr}
 800133e:	b083      	sub	sp, #12
 8001340:	af00      	add	r7, sp, #0
 8001342:	4604      	mov	r4, r0
 8001344:	4608      	mov	r0, r1
 8001346:	4611      	mov	r1, r2
 8001348:	461a      	mov	r2, r3
 800134a:	4623      	mov	r3, r4
 800134c:	71fb      	strb	r3, [r7, #7]
 800134e:	4603      	mov	r3, r0
 8001350:	71bb      	strb	r3, [r7, #6]
 8001352:	460b      	mov	r3, r1
 8001354:	717b      	strb	r3, [r7, #5]
 8001356:	4613      	mov	r3, r2
 8001358:	713b      	strb	r3, [r7, #4]
	if (led_id == LED_KIT_ID0)
 800135a:	79fb      	ldrb	r3, [r7, #7]
 800135c:	2b01      	cmp	r3, #1
 800135e:	d12d      	bne.n	80013bc <LedCmdSetState+0x80>
	{
		if (led_last_state == LED_COLOR_RED)
 8001360:	7e3b      	ldrb	r3, [r7, #24]
 8001362:	2b00      	cmp	r3, #0
 8001364:	d105      	bne.n	8001372 <LedCmdSetState+0x36>
		{
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_RED, 50);
 8001366:	2232      	movs	r2, #50	@ 0x32
 8001368:	2100      	movs	r1, #0
 800136a:	2001      	movs	r0, #1
 800136c:	f001 f974 	bl	8002658 <LedControl_SetColorGeneral>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_RED, 0);
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_GREEN, 0);
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_BLUE, 0);
		}
	}
}
 8001370:	e054      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_GREEN)
 8001372:	7e3b      	ldrb	r3, [r7, #24]
 8001374:	2b01      	cmp	r3, #1
 8001376:	d105      	bne.n	8001384 <LedCmdSetState+0x48>
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_GREEN, 50);
 8001378:	2232      	movs	r2, #50	@ 0x32
 800137a:	2101      	movs	r1, #1
 800137c:	2001      	movs	r0, #1
 800137e:	f001 f96b 	bl	8002658 <LedControl_SetColorGeneral>
}
 8001382:	e04b      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_BLUE)
 8001384:	7e3b      	ldrb	r3, [r7, #24]
 8001386:	2b02      	cmp	r3, #2
 8001388:	d105      	bne.n	8001396 <LedCmdSetState+0x5a>
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_BLUE, 50);
 800138a:	2232      	movs	r2, #50	@ 0x32
 800138c:	2102      	movs	r1, #2
 800138e:	2001      	movs	r0, #1
 8001390:	f001 f962 	bl	8002658 <LedControl_SetColorGeneral>
}
 8001394:	e042      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_BLACK)
 8001396:	7e3b      	ldrb	r3, [r7, #24]
 8001398:	2b04      	cmp	r3, #4
 800139a:	d13f      	bne.n	800141c <LedCmdSetState+0xe0>
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_RED, 0);
 800139c:	2200      	movs	r2, #0
 800139e:	2100      	movs	r1, #0
 80013a0:	2001      	movs	r0, #1
 80013a2:	f001 f959 	bl	8002658 <LedControl_SetColorGeneral>
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_GREEN, 0);
 80013a6:	2200      	movs	r2, #0
 80013a8:	2101      	movs	r1, #1
 80013aa:	2001      	movs	r0, #1
 80013ac:	f001 f954 	bl	8002658 <LedControl_SetColorGeneral>
			LedControl_SetColorGeneral(LED_KIT_ID0, LED_COLOR_BLUE, 0);
 80013b0:	2200      	movs	r2, #0
 80013b2:	2102      	movs	r1, #2
 80013b4:	2001      	movs	r0, #1
 80013b6:	f001 f94f 	bl	8002658 <LedControl_SetColorGeneral>
}
 80013ba:	e02f      	b.n	800141c <LedCmdSetState+0xe0>
	else if (led_id == LED_KIT_ID1)
 80013bc:	79fb      	ldrb	r3, [r7, #7]
 80013be:	2b02      	cmp	r3, #2
 80013c0:	d12c      	bne.n	800141c <LedCmdSetState+0xe0>
		if (led_last_state == LED_COLOR_RED)
 80013c2:	7e3b      	ldrb	r3, [r7, #24]
 80013c4:	2b00      	cmp	r3, #0
 80013c6:	d105      	bne.n	80013d4 <LedCmdSetState+0x98>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_RED, 50);
 80013c8:	2232      	movs	r2, #50	@ 0x32
 80013ca:	2100      	movs	r1, #0
 80013cc:	2002      	movs	r0, #2
 80013ce:	f001 f943 	bl	8002658 <LedControl_SetColorGeneral>
}
 80013d2:	e023      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_GREEN)
 80013d4:	7e3b      	ldrb	r3, [r7, #24]
 80013d6:	2b01      	cmp	r3, #1
 80013d8:	d105      	bne.n	80013e6 <LedCmdSetState+0xaa>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_GREEN, 50);
 80013da:	2232      	movs	r2, #50	@ 0x32
 80013dc:	2101      	movs	r1, #1
 80013de:	2002      	movs	r0, #2
 80013e0:	f001 f93a 	bl	8002658 <LedControl_SetColorGeneral>
}
 80013e4:	e01a      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_BLUE)
 80013e6:	7e3b      	ldrb	r3, [r7, #24]
 80013e8:	2b02      	cmp	r3, #2
 80013ea:	d105      	bne.n	80013f8 <LedCmdSetState+0xbc>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_BLUE, 50);
 80013ec:	2232      	movs	r2, #50	@ 0x32
 80013ee:	2102      	movs	r1, #2
 80013f0:	2002      	movs	r0, #2
 80013f2:	f001 f931 	bl	8002658 <LedControl_SetColorGeneral>
}
 80013f6:	e011      	b.n	800141c <LedCmdSetState+0xe0>
		else if (led_last_state == LED_COLOR_BLACK)
 80013f8:	7e3b      	ldrb	r3, [r7, #24]
 80013fa:	2b04      	cmp	r3, #4
 80013fc:	d10e      	bne.n	800141c <LedCmdSetState+0xe0>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_RED, 0);
 80013fe:	2200      	movs	r2, #0
 8001400:	2100      	movs	r1, #0
 8001402:	2002      	movs	r0, #2
 8001404:	f001 f928 	bl	8002658 <LedControl_SetColorGeneral>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_GREEN, 0);
 8001408:	2200      	movs	r2, #0
 800140a:	2101      	movs	r1, #1
 800140c:	2002      	movs	r0, #2
 800140e:	f001 f923 	bl	8002658 <LedControl_SetColorGeneral>
			LedControl_SetColorGeneral(LED_KIT_ID1, LED_COLOR_BLUE, 0);
 8001412:	2200      	movs	r2, #0
 8001414:	2102      	movs	r1, #2
 8001416:	2002      	movs	r0, #2
 8001418:	f001 f91e 	bl	8002658 <LedControl_SetColorGeneral>
}
 800141c:	bf00      	nop
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	bd90      	pop	{r4, r7, pc}

08001424 <BuzzerCmdSetState>:
 * @retval:		None
 *
 * @note:		None
 */
void BuzzerCmdSetState (uint8_t buzzer_state)
{
 8001424:	b580      	push	{r7, lr}
 8001426:	b082      	sub	sp, #8
 8001428:	af00      	add	r7, sp, #0
 800142a:	4603      	mov	r3, r0
 800142c:	71fb      	strb	r3, [r7, #7]
	if (buzzer_state == 100)
 800142e:	79fb      	ldrb	r3, [r7, #7]
 8001430:	2b64      	cmp	r3, #100	@ 0x64
 8001432:	d102      	bne.n	800143a <BuzzerCmdSetState+0x16>
	{
		BuzzerControl_SetMelody(pbeep);
 8001434:	4803      	ldr	r0, [pc, #12]	@ (8001444 <BuzzerCmdSetState+0x20>)
 8001436:	f000 ffb9 	bl	80023ac <BuzzerControl_SetMelody>
	}
}
 800143a:	bf00      	nop
 800143c:	3708      	adds	r7, #8
 800143e:	46bd      	mov	sp, r7
 8001440:	bd80      	pop	{r7, pc}
 8001442:	bf00      	nop
 8001444:	2000002c 	.word	0x2000002c

08001448 <LcdCmdSetState>:
 * @retval:		None
 *
 * @note:		None
 */
void LcdCmdSetState (char *text)
{
 8001448:	b580      	push	{r7, lr}
 800144a:	b086      	sub	sp, #24
 800144c:	af02      	add	r7, sp, #8
 800144e:	6078      	str	r0, [r7, #4]
	if (g_idTimerSensorUpdate != NO_TIMER)
 8001450:	4b20      	ldr	r3, [pc, #128]	@ (80014d4 <LcdCmdSetState+0x8c>)
 8001452:	781b      	ldrb	r3, [r3, #0]
 8001454:	2bff      	cmp	r3, #255	@ 0xff
 8001456:	d007      	beq.n	8001468 <LcdCmdSetState+0x20>
	{
		TimerStop(g_idTimerSensorUpdate);
 8001458:	4b1e      	ldr	r3, [pc, #120]	@ (80014d4 <LcdCmdSetState+0x8c>)
 800145a:	781b      	ldrb	r3, [r3, #0]
 800145c:	4618      	mov	r0, r3
 800145e:	f001 fce9 	bl	8002e34 <TimerStop>
		g_idTimerSensorUpdate = NO_TIMER;
 8001462:	4b1c      	ldr	r3, [pc, #112]	@ (80014d4 <LcdCmdSetState+0x8c>)
 8001464:	22ff      	movs	r2, #255	@ 0xff
 8001466:	701a      	strb	r2, [r3, #0]
	}

	memset(g_strTemp, 0, sizeof(g_strTemp));
 8001468:	221e      	movs	r2, #30
 800146a:	2100      	movs	r1, #0
 800146c:	481a      	ldr	r0, [pc, #104]	@ (80014d8 <LcdCmdSetState+0x90>)
 800146e:	f005 ff37 	bl	80072e0 <memset>
	memset(g_strHumi, 0, sizeof(g_strHumi));
 8001472:	221e      	movs	r2, #30
 8001474:	2100      	movs	r1, #0
 8001476:	4819      	ldr	r0, [pc, #100]	@ (80014dc <LcdCmdSetState+0x94>)
 8001478:	f005 ff32 	bl	80072e0 <memset>
	memset(g_strLight, 0, sizeof(g_strLight));
 800147c:	221e      	movs	r2, #30
 800147e:	2100      	movs	r1, #0
 8001480:	4817      	ldr	r0, [pc, #92]	@ (80014e0 <LcdCmdSetState+0x98>)
 8001482:	f005 ff2d 	bl	80072e0 <memset>

	uint8_t i = 0;
 8001486:	2300      	movs	r3, #0
 8001488:	73fb      	strb	r3, [r7, #15]
	static char buffer[20];

	memset((uint8_t *)buffer, 0, sizeof(buffer));
 800148a:	2214      	movs	r2, #20
 800148c:	2100      	movs	r1, #0
 800148e:	4815      	ldr	r0, [pc, #84]	@ (80014e4 <LcdCmdSetState+0x9c>)
 8001490:	f005 ff26 	bl	80072e0 <memset>

	while (text[i] != 0x0D)
 8001494:	e009      	b.n	80014aa <LcdCmdSetState+0x62>
	{
		buffer[i] = text[i];
 8001496:	7bfb      	ldrb	r3, [r7, #15]
 8001498:	687a      	ldr	r2, [r7, #4]
 800149a:	441a      	add	r2, r3
 800149c:	7bfb      	ldrb	r3, [r7, #15]
 800149e:	7811      	ldrb	r1, [r2, #0]
 80014a0:	4a10      	ldr	r2, [pc, #64]	@ (80014e4 <LcdCmdSetState+0x9c>)
 80014a2:	54d1      	strb	r1, [r2, r3]
		i++;
 80014a4:	7bfb      	ldrb	r3, [r7, #15]
 80014a6:	3301      	adds	r3, #1
 80014a8:	73fb      	strb	r3, [r7, #15]
	while (text[i] != 0x0D)
 80014aa:	7bfb      	ldrb	r3, [r7, #15]
 80014ac:	687a      	ldr	r2, [r7, #4]
 80014ae:	4413      	add	r3, r2
 80014b0:	781b      	ldrb	r3, [r3, #0]
 80014b2:	2b0d      	cmp	r3, #13
 80014b4:	d1ef      	bne.n	8001496 <LcdCmdSetState+0x4e>
	}

	ucg_ClearScreen(&g_ucg);
 80014b6:	480c      	ldr	r0, [pc, #48]	@ (80014e8 <LcdCmdSetState+0xa0>)
 80014b8:	f002 fbaf 	bl	8003c1a <ucg_ClearScreen>
	ucg_DrawString(&g_ucg, 0, 40, 0, (char *)buffer);
 80014bc:	4b09      	ldr	r3, [pc, #36]	@ (80014e4 <LcdCmdSetState+0x9c>)
 80014be:	9300      	str	r3, [sp, #0]
 80014c0:	2300      	movs	r3, #0
 80014c2:	2228      	movs	r2, #40	@ 0x28
 80014c4:	2100      	movs	r1, #0
 80014c6:	4808      	ldr	r0, [pc, #32]	@ (80014e8 <LcdCmdSetState+0xa0>)
 80014c8:	f003 fbfc 	bl	8004cc4 <ucg_DrawString>
}
 80014cc:	bf00      	nop
 80014ce:	3710      	adds	r7, #16
 80014d0:	46bd      	mov	sp, r7
 80014d2:	bd80      	pop	{r7, pc}
 80014d4:	20000003 	.word	0x20000003
 80014d8:	200002c0 	.word	0x200002c0
 80014dc:	200002e0 	.word	0x200002e0
 80014e0:	20000300 	.word	0x20000300
 80014e4:	20000320 	.word	0x20000320
 80014e8:	200000d8 	.word	0x200000d8

080014ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b086      	sub	sp, #24
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80014f4:	4a14      	ldr	r2, [pc, #80]	@ (8001548 <_sbrk+0x5c>)
 80014f6:	4b15      	ldr	r3, [pc, #84]	@ (800154c <_sbrk+0x60>)
 80014f8:	1ad3      	subs	r3, r2, r3
 80014fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80014fc:	697b      	ldr	r3, [r7, #20]
 80014fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001500:	4b13      	ldr	r3, [pc, #76]	@ (8001550 <_sbrk+0x64>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	2b00      	cmp	r3, #0
 8001506:	d102      	bne.n	800150e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001508:	4b11      	ldr	r3, [pc, #68]	@ (8001550 <_sbrk+0x64>)
 800150a:	4a12      	ldr	r2, [pc, #72]	@ (8001554 <_sbrk+0x68>)
 800150c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800150e:	4b10      	ldr	r3, [pc, #64]	@ (8001550 <_sbrk+0x64>)
 8001510:	681a      	ldr	r2, [r3, #0]
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	4413      	add	r3, r2
 8001516:	693a      	ldr	r2, [r7, #16]
 8001518:	429a      	cmp	r2, r3
 800151a:	d207      	bcs.n	800152c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800151c:	f005 fee8 	bl	80072f0 <__errno>
 8001520:	4603      	mov	r3, r0
 8001522:	220c      	movs	r2, #12
 8001524:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001526:	f04f 33ff 	mov.w	r3, #4294967295
 800152a:	e009      	b.n	8001540 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800152c:	4b08      	ldr	r3, [pc, #32]	@ (8001550 <_sbrk+0x64>)
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001532:	4b07      	ldr	r3, [pc, #28]	@ (8001550 <_sbrk+0x64>)
 8001534:	681a      	ldr	r2, [r3, #0]
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	4413      	add	r3, r2
 800153a:	4a05      	ldr	r2, [pc, #20]	@ (8001550 <_sbrk+0x64>)
 800153c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800153e:	68fb      	ldr	r3, [r7, #12]
}
 8001540:	4618      	mov	r0, r3
 8001542:	3718      	adds	r7, #24
 8001544:	46bd      	mov	sp, r7
 8001546:	bd80      	pop	{r7, pc}
 8001548:	20018000 	.word	0x20018000
 800154c:	00000400 	.word	0x00000400
 8001550:	20000334 	.word	0x20000334
 8001554:	200017d8 	.word	0x200017d8

08001558 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001558:	480d      	ldr	r0, [pc, #52]	@ (8001590 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800155a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800155c:	f000 f826 	bl	80015ac <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001560:	480c      	ldr	r0, [pc, #48]	@ (8001594 <LoopForever+0x6>)
  ldr r1, =_edata
 8001562:	490d      	ldr	r1, [pc, #52]	@ (8001598 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001564:	4a0d      	ldr	r2, [pc, #52]	@ (800159c <LoopForever+0xe>)
  movs r3, #0
 8001566:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001568:	e002      	b.n	8001570 <LoopCopyDataInit>

0800156a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800156a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800156c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800156e:	3304      	adds	r3, #4

08001570 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001570:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001572:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001574:	d3f9      	bcc.n	800156a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001576:	4a0a      	ldr	r2, [pc, #40]	@ (80015a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001578:	4c0a      	ldr	r4, [pc, #40]	@ (80015a4 <LoopForever+0x16>)
  movs r3, #0
 800157a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800157c:	e001      	b.n	8001582 <LoopFillZerobss>

0800157e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800157e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001580:	3204      	adds	r2, #4

08001582 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001582:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001584:	d3fb      	bcc.n	800157e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001586:	f005 feb9 	bl	80072fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800158a:	f7fe fe79 	bl	8000280 <main>

0800158e <LoopForever>:

LoopForever:
  b LoopForever
 800158e:	e7fe      	b.n	800158e <LoopForever>
  ldr   r0, =_estack
 8001590:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001594:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001598:	200000bc 	.word	0x200000bc
  ldr r2, =_sidata
 800159c:	080098fc 	.word	0x080098fc
  ldr r2, =_sbss
 80015a0:	200000bc 	.word	0x200000bc
  ldr r4, =_ebss
 80015a4:	200017d8 	.word	0x200017d8

080015a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80015a8:	e7fe      	b.n	80015a8 <ADC_IRQHandler>
	...

080015ac <SystemInit>:
 80015ac:	b580      	push	{r7, lr}
 80015ae:	af00      	add	r7, sp, #0
 80015b0:	4b16      	ldr	r3, [pc, #88]	@ (800160c <SystemInit+0x60>)
 80015b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80015b6:	4a15      	ldr	r2, [pc, #84]	@ (800160c <SystemInit+0x60>)
 80015b8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80015bc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80015c0:	4b13      	ldr	r3, [pc, #76]	@ (8001610 <SystemInit+0x64>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	4a12      	ldr	r2, [pc, #72]	@ (8001610 <SystemInit+0x64>)
 80015c6:	f043 0301 	orr.w	r3, r3, #1
 80015ca:	6013      	str	r3, [r2, #0]
 80015cc:	4b10      	ldr	r3, [pc, #64]	@ (8001610 <SystemInit+0x64>)
 80015ce:	2200      	movs	r2, #0
 80015d0:	609a      	str	r2, [r3, #8]
 80015d2:	4b0f      	ldr	r3, [pc, #60]	@ (8001610 <SystemInit+0x64>)
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	4a0e      	ldr	r2, [pc, #56]	@ (8001610 <SystemInit+0x64>)
 80015d8:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 80015dc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80015e0:	6013      	str	r3, [r2, #0]
 80015e2:	4b0b      	ldr	r3, [pc, #44]	@ (8001610 <SystemInit+0x64>)
 80015e4:	4a0b      	ldr	r2, [pc, #44]	@ (8001614 <SystemInit+0x68>)
 80015e6:	605a      	str	r2, [r3, #4]
 80015e8:	4b09      	ldr	r3, [pc, #36]	@ (8001610 <SystemInit+0x64>)
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	4a08      	ldr	r2, [pc, #32]	@ (8001610 <SystemInit+0x64>)
 80015ee:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80015f2:	6013      	str	r3, [r2, #0]
 80015f4:	4b06      	ldr	r3, [pc, #24]	@ (8001610 <SystemInit+0x64>)
 80015f6:	2200      	movs	r2, #0
 80015f8:	60da      	str	r2, [r3, #12]
 80015fa:	f000 f889 	bl	8001710 <SetSysClock>
 80015fe:	4b03      	ldr	r3, [pc, #12]	@ (800160c <SystemInit+0x60>)
 8001600:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001604:	609a      	str	r2, [r3, #8]
 8001606:	bf00      	nop
 8001608:	bd80      	pop	{r7, pc}
 800160a:	bf00      	nop
 800160c:	e000ed00 	.word	0xe000ed00
 8001610:	40023800 	.word	0x40023800
 8001614:	24003010 	.word	0x24003010

08001618 <SystemCoreClockUpdate>:
 8001618:	b480      	push	{r7}
 800161a:	b087      	sub	sp, #28
 800161c:	af00      	add	r7, sp, #0
 800161e:	2300      	movs	r3, #0
 8001620:	613b      	str	r3, [r7, #16]
 8001622:	2300      	movs	r3, #0
 8001624:	617b      	str	r3, [r7, #20]
 8001626:	2302      	movs	r3, #2
 8001628:	60fb      	str	r3, [r7, #12]
 800162a:	2300      	movs	r3, #0
 800162c:	60bb      	str	r3, [r7, #8]
 800162e:	2302      	movs	r3, #2
 8001630:	607b      	str	r3, [r7, #4]
 8001632:	4b32      	ldr	r3, [pc, #200]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 8001634:	689b      	ldr	r3, [r3, #8]
 8001636:	f003 030c 	and.w	r3, r3, #12
 800163a:	613b      	str	r3, [r7, #16]
 800163c:	693b      	ldr	r3, [r7, #16]
 800163e:	2b04      	cmp	r3, #4
 8001640:	d007      	beq.n	8001652 <SystemCoreClockUpdate+0x3a>
 8001642:	2b08      	cmp	r3, #8
 8001644:	d009      	beq.n	800165a <SystemCoreClockUpdate+0x42>
 8001646:	2b00      	cmp	r3, #0
 8001648:	d13d      	bne.n	80016c6 <SystemCoreClockUpdate+0xae>
 800164a:	4b2d      	ldr	r3, [pc, #180]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 800164c:	4a2d      	ldr	r2, [pc, #180]	@ (8001704 <SystemCoreClockUpdate+0xec>)
 800164e:	601a      	str	r2, [r3, #0]
 8001650:	e03d      	b.n	80016ce <SystemCoreClockUpdate+0xb6>
 8001652:	4b2b      	ldr	r3, [pc, #172]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 8001654:	4a2c      	ldr	r2, [pc, #176]	@ (8001708 <SystemCoreClockUpdate+0xf0>)
 8001656:	601a      	str	r2, [r3, #0]
 8001658:	e039      	b.n	80016ce <SystemCoreClockUpdate+0xb6>
 800165a:	4b28      	ldr	r3, [pc, #160]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 800165c:	685b      	ldr	r3, [r3, #4]
 800165e:	0d9b      	lsrs	r3, r3, #22
 8001660:	f003 0301 	and.w	r3, r3, #1
 8001664:	60bb      	str	r3, [r7, #8]
 8001666:	4b25      	ldr	r3, [pc, #148]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 8001668:	685b      	ldr	r3, [r3, #4]
 800166a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800166e:	607b      	str	r3, [r7, #4]
 8001670:	68bb      	ldr	r3, [r7, #8]
 8001672:	2b00      	cmp	r3, #0
 8001674:	d00c      	beq.n	8001690 <SystemCoreClockUpdate+0x78>
 8001676:	4a24      	ldr	r2, [pc, #144]	@ (8001708 <SystemCoreClockUpdate+0xf0>)
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	fbb2 f3f3 	udiv	r3, r2, r3
 800167e:	4a1f      	ldr	r2, [pc, #124]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 8001680:	6852      	ldr	r2, [r2, #4]
 8001682:	0992      	lsrs	r2, r2, #6
 8001684:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001688:	fb02 f303 	mul.w	r3, r2, r3
 800168c:	617b      	str	r3, [r7, #20]
 800168e:	e00b      	b.n	80016a8 <SystemCoreClockUpdate+0x90>
 8001690:	4a1c      	ldr	r2, [pc, #112]	@ (8001704 <SystemCoreClockUpdate+0xec>)
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	fbb2 f3f3 	udiv	r3, r2, r3
 8001698:	4a18      	ldr	r2, [pc, #96]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 800169a:	6852      	ldr	r2, [r2, #4]
 800169c:	0992      	lsrs	r2, r2, #6
 800169e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80016a2:	fb02 f303 	mul.w	r3, r2, r3
 80016a6:	617b      	str	r3, [r7, #20]
 80016a8:	4b14      	ldr	r3, [pc, #80]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 80016aa:	685b      	ldr	r3, [r3, #4]
 80016ac:	0c1b      	lsrs	r3, r3, #16
 80016ae:	f003 0303 	and.w	r3, r3, #3
 80016b2:	3301      	adds	r3, #1
 80016b4:	005b      	lsls	r3, r3, #1
 80016b6:	60fb      	str	r3, [r7, #12]
 80016b8:	697a      	ldr	r2, [r7, #20]
 80016ba:	68fb      	ldr	r3, [r7, #12]
 80016bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80016c0:	4a0f      	ldr	r2, [pc, #60]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 80016c2:	6013      	str	r3, [r2, #0]
 80016c4:	e003      	b.n	80016ce <SystemCoreClockUpdate+0xb6>
 80016c6:	4b0e      	ldr	r3, [pc, #56]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 80016c8:	4a0e      	ldr	r2, [pc, #56]	@ (8001704 <SystemCoreClockUpdate+0xec>)
 80016ca:	601a      	str	r2, [r3, #0]
 80016cc:	bf00      	nop
 80016ce:	4b0b      	ldr	r3, [pc, #44]	@ (80016fc <SystemCoreClockUpdate+0xe4>)
 80016d0:	689b      	ldr	r3, [r3, #8]
 80016d2:	091b      	lsrs	r3, r3, #4
 80016d4:	f003 030f 	and.w	r3, r3, #15
 80016d8:	4a0c      	ldr	r2, [pc, #48]	@ (800170c <SystemCoreClockUpdate+0xf4>)
 80016da:	5cd3      	ldrb	r3, [r2, r3]
 80016dc:	b2db      	uxtb	r3, r3
 80016de:	613b      	str	r3, [r7, #16]
 80016e0:	4b07      	ldr	r3, [pc, #28]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 80016e2:	681a      	ldr	r2, [r3, #0]
 80016e4:	693b      	ldr	r3, [r7, #16]
 80016e6:	fa22 f303 	lsr.w	r3, r2, r3
 80016ea:	4a05      	ldr	r2, [pc, #20]	@ (8001700 <SystemCoreClockUpdate+0xe8>)
 80016ec:	6013      	str	r3, [r2, #0]
 80016ee:	bf00      	nop
 80016f0:	371c      	adds	r7, #28
 80016f2:	46bd      	mov	sp, r7
 80016f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f8:	4770      	bx	lr
 80016fa:	bf00      	nop
 80016fc:	40023800 	.word	0x40023800
 8001700:	20000004 	.word	0x20000004
 8001704:	00f42400 	.word	0x00f42400
 8001708:	017d7840 	.word	0x017d7840
 800170c:	20000008 	.word	0x20000008

08001710 <SetSysClock>:
 8001710:	b480      	push	{r7}
 8001712:	af00      	add	r7, sp, #0
 8001714:	4b22      	ldr	r3, [pc, #136]	@ (80017a0 <SetSysClock+0x90>)
 8001716:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001718:	4a21      	ldr	r2, [pc, #132]	@ (80017a0 <SetSysClock+0x90>)
 800171a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800171e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001720:	4b20      	ldr	r3, [pc, #128]	@ (80017a4 <SetSysClock+0x94>)
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	4a1f      	ldr	r2, [pc, #124]	@ (80017a4 <SetSysClock+0x94>)
 8001726:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800172a:	6013      	str	r3, [r2, #0]
 800172c:	4b1c      	ldr	r3, [pc, #112]	@ (80017a0 <SetSysClock+0x90>)
 800172e:	4a1c      	ldr	r2, [pc, #112]	@ (80017a0 <SetSysClock+0x90>)
 8001730:	689b      	ldr	r3, [r3, #8]
 8001732:	6093      	str	r3, [r2, #8]
 8001734:	4b1a      	ldr	r3, [pc, #104]	@ (80017a0 <SetSysClock+0x90>)
 8001736:	4a1a      	ldr	r2, [pc, #104]	@ (80017a0 <SetSysClock+0x90>)
 8001738:	689b      	ldr	r3, [r3, #8]
 800173a:	6093      	str	r3, [r2, #8]
 800173c:	4b18      	ldr	r3, [pc, #96]	@ (80017a0 <SetSysClock+0x90>)
 800173e:	689b      	ldr	r3, [r3, #8]
 8001740:	4a17      	ldr	r2, [pc, #92]	@ (80017a0 <SetSysClock+0x90>)
 8001742:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001746:	6093      	str	r3, [r2, #8]
 8001748:	4b15      	ldr	r3, [pc, #84]	@ (80017a0 <SetSysClock+0x90>)
 800174a:	4a17      	ldr	r2, [pc, #92]	@ (80017a8 <SetSysClock+0x98>)
 800174c:	605a      	str	r2, [r3, #4]
 800174e:	4b14      	ldr	r3, [pc, #80]	@ (80017a0 <SetSysClock+0x90>)
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	4a13      	ldr	r2, [pc, #76]	@ (80017a0 <SetSysClock+0x90>)
 8001754:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001758:	6013      	str	r3, [r2, #0]
 800175a:	bf00      	nop
 800175c:	4b10      	ldr	r3, [pc, #64]	@ (80017a0 <SetSysClock+0x90>)
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001764:	2b00      	cmp	r3, #0
 8001766:	d0f9      	beq.n	800175c <SetSysClock+0x4c>
 8001768:	4b10      	ldr	r3, [pc, #64]	@ (80017ac <SetSysClock+0x9c>)
 800176a:	f240 6202 	movw	r2, #1538	@ 0x602
 800176e:	601a      	str	r2, [r3, #0]
 8001770:	4b0b      	ldr	r3, [pc, #44]	@ (80017a0 <SetSysClock+0x90>)
 8001772:	689b      	ldr	r3, [r3, #8]
 8001774:	4a0a      	ldr	r2, [pc, #40]	@ (80017a0 <SetSysClock+0x90>)
 8001776:	f023 0303 	bic.w	r3, r3, #3
 800177a:	6093      	str	r3, [r2, #8]
 800177c:	4b08      	ldr	r3, [pc, #32]	@ (80017a0 <SetSysClock+0x90>)
 800177e:	689b      	ldr	r3, [r3, #8]
 8001780:	4a07      	ldr	r2, [pc, #28]	@ (80017a0 <SetSysClock+0x90>)
 8001782:	f043 0302 	orr.w	r3, r3, #2
 8001786:	6093      	str	r3, [r2, #8]
 8001788:	bf00      	nop
 800178a:	4b05      	ldr	r3, [pc, #20]	@ (80017a0 <SetSysClock+0x90>)
 800178c:	689b      	ldr	r3, [r3, #8]
 800178e:	f003 030c 	and.w	r3, r3, #12
 8001792:	2b08      	cmp	r3, #8
 8001794:	d1f9      	bne.n	800178a <SetSysClock+0x7a>
 8001796:	bf00      	nop
 8001798:	46bd      	mov	sp, r7
 800179a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800179e:	4770      	bx	lr
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40007000 	.word	0x40007000
 80017a8:	08015410 	.word	0x08015410
 80017ac:	40023c00 	.word	0x40023c00

080017b0 <NVIC_PriorityGroupConfig>:
 80017b0:	b480      	push	{r7}
 80017b2:	b083      	sub	sp, #12
 80017b4:	af00      	add	r7, sp, #0
 80017b6:	6078      	str	r0, [r7, #4]
 80017b8:	4a06      	ldr	r2, [pc, #24]	@ (80017d4 <NVIC_PriorityGroupConfig+0x24>)
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80017c0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80017c4:	60d3      	str	r3, [r2, #12]
 80017c6:	bf00      	nop
 80017c8:	370c      	adds	r7, #12
 80017ca:	46bd      	mov	sp, r7
 80017cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d0:	4770      	bx	lr
 80017d2:	bf00      	nop
 80017d4:	e000ed00 	.word	0xe000ed00

080017d8 <NVIC_Init>:
 80017d8:	b480      	push	{r7}
 80017da:	b085      	sub	sp, #20
 80017dc:	af00      	add	r7, sp, #0
 80017de:	6078      	str	r0, [r7, #4]
 80017e0:	2300      	movs	r3, #0
 80017e2:	73fb      	strb	r3, [r7, #15]
 80017e4:	2300      	movs	r3, #0
 80017e6:	73bb      	strb	r3, [r7, #14]
 80017e8:	230f      	movs	r3, #15
 80017ea:	737b      	strb	r3, [r7, #13]
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	78db      	ldrb	r3, [r3, #3]
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d039      	beq.n	8001868 <NVIC_Init+0x90>
 80017f4:	4b27      	ldr	r3, [pc, #156]	@ (8001894 <NVIC_Init+0xbc>)
 80017f6:	68db      	ldr	r3, [r3, #12]
 80017f8:	43db      	mvns	r3, r3
 80017fa:	0a1b      	lsrs	r3, r3, #8
 80017fc:	b2db      	uxtb	r3, r3
 80017fe:	f003 0307 	and.w	r3, r3, #7
 8001802:	73fb      	strb	r3, [r7, #15]
 8001804:	7bfb      	ldrb	r3, [r7, #15]
 8001806:	f1c3 0304 	rsb	r3, r3, #4
 800180a:	73bb      	strb	r3, [r7, #14]
 800180c:	7b7a      	ldrb	r2, [r7, #13]
 800180e:	7bfb      	ldrb	r3, [r7, #15]
 8001810:	fa42 f303 	asr.w	r3, r2, r3
 8001814:	737b      	strb	r3, [r7, #13]
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	785b      	ldrb	r3, [r3, #1]
 800181a:	461a      	mov	r2, r3
 800181c:	7bbb      	ldrb	r3, [r7, #14]
 800181e:	fa02 f303 	lsl.w	r3, r2, r3
 8001822:	73fb      	strb	r3, [r7, #15]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	789a      	ldrb	r2, [r3, #2]
 8001828:	7b7b      	ldrb	r3, [r7, #13]
 800182a:	4013      	ands	r3, r2
 800182c:	b2da      	uxtb	r2, r3
 800182e:	7bfb      	ldrb	r3, [r7, #15]
 8001830:	4313      	orrs	r3, r2
 8001832:	73fb      	strb	r3, [r7, #15]
 8001834:	7bfb      	ldrb	r3, [r7, #15]
 8001836:	011b      	lsls	r3, r3, #4
 8001838:	73fb      	strb	r3, [r7, #15]
 800183a:	4a17      	ldr	r2, [pc, #92]	@ (8001898 <NVIC_Init+0xc0>)
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	781b      	ldrb	r3, [r3, #0]
 8001840:	4413      	add	r3, r2
 8001842:	7bfa      	ldrb	r2, [r7, #15]
 8001844:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	781b      	ldrb	r3, [r3, #0]
 800184c:	f003 031f 	and.w	r3, r3, #31
 8001850:	4911      	ldr	r1, [pc, #68]	@ (8001898 <NVIC_Init+0xc0>)
 8001852:	687a      	ldr	r2, [r7, #4]
 8001854:	7812      	ldrb	r2, [r2, #0]
 8001856:	0952      	lsrs	r2, r2, #5
 8001858:	b2d2      	uxtb	r2, r2
 800185a:	4610      	mov	r0, r2
 800185c:	2201      	movs	r2, #1
 800185e:	fa02 f303 	lsl.w	r3, r2, r3
 8001862:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 8001866:	e00f      	b.n	8001888 <NVIC_Init+0xb0>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	781b      	ldrb	r3, [r3, #0]
 800186c:	f003 031f 	and.w	r3, r3, #31
 8001870:	4909      	ldr	r1, [pc, #36]	@ (8001898 <NVIC_Init+0xc0>)
 8001872:	687a      	ldr	r2, [r7, #4]
 8001874:	7812      	ldrb	r2, [r2, #0]
 8001876:	0952      	lsrs	r2, r2, #5
 8001878:	b2d2      	uxtb	r2, r2
 800187a:	4610      	mov	r0, r2
 800187c:	2201      	movs	r2, #1
 800187e:	409a      	lsls	r2, r3
 8001880:	f100 0320 	add.w	r3, r0, #32
 8001884:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001888:	bf00      	nop
 800188a:	3714      	adds	r7, #20
 800188c:	46bd      	mov	sp, r7
 800188e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001892:	4770      	bx	lr
 8001894:	e000ed00 	.word	0xe000ed00
 8001898:	e000e100 	.word	0xe000e100

0800189c <GPIO_Init>:
 800189c:	b480      	push	{r7}
 800189e:	b087      	sub	sp, #28
 80018a0:	af00      	add	r7, sp, #0
 80018a2:	6078      	str	r0, [r7, #4]
 80018a4:	6039      	str	r1, [r7, #0]
 80018a6:	2300      	movs	r3, #0
 80018a8:	617b      	str	r3, [r7, #20]
 80018aa:	2300      	movs	r3, #0
 80018ac:	613b      	str	r3, [r7, #16]
 80018ae:	2300      	movs	r3, #0
 80018b0:	60fb      	str	r3, [r7, #12]
 80018b2:	2300      	movs	r3, #0
 80018b4:	617b      	str	r3, [r7, #20]
 80018b6:	e076      	b.n	80019a6 <GPIO_Init+0x10a>
 80018b8:	2201      	movs	r2, #1
 80018ba:	697b      	ldr	r3, [r7, #20]
 80018bc:	fa02 f303 	lsl.w	r3, r2, r3
 80018c0:	613b      	str	r3, [r7, #16]
 80018c2:	683b      	ldr	r3, [r7, #0]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	693a      	ldr	r2, [r7, #16]
 80018c8:	4013      	ands	r3, r2
 80018ca:	60fb      	str	r3, [r7, #12]
 80018cc:	68fa      	ldr	r2, [r7, #12]
 80018ce:	693b      	ldr	r3, [r7, #16]
 80018d0:	429a      	cmp	r2, r3
 80018d2:	d165      	bne.n	80019a0 <GPIO_Init+0x104>
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	681a      	ldr	r2, [r3, #0]
 80018d8:	697b      	ldr	r3, [r7, #20]
 80018da:	005b      	lsls	r3, r3, #1
 80018dc:	2103      	movs	r1, #3
 80018de:	fa01 f303 	lsl.w	r3, r1, r3
 80018e2:	43db      	mvns	r3, r3
 80018e4:	401a      	ands	r2, r3
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	601a      	str	r2, [r3, #0]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681a      	ldr	r2, [r3, #0]
 80018ee:	683b      	ldr	r3, [r7, #0]
 80018f0:	791b      	ldrb	r3, [r3, #4]
 80018f2:	4619      	mov	r1, r3
 80018f4:	697b      	ldr	r3, [r7, #20]
 80018f6:	005b      	lsls	r3, r3, #1
 80018f8:	fa01 f303 	lsl.w	r3, r1, r3
 80018fc:	431a      	orrs	r2, r3
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	601a      	str	r2, [r3, #0]
 8001902:	683b      	ldr	r3, [r7, #0]
 8001904:	791b      	ldrb	r3, [r3, #4]
 8001906:	2b01      	cmp	r3, #1
 8001908:	d003      	beq.n	8001912 <GPIO_Init+0x76>
 800190a:	683b      	ldr	r3, [r7, #0]
 800190c:	791b      	ldrb	r3, [r3, #4]
 800190e:	2b02      	cmp	r3, #2
 8001910:	d12e      	bne.n	8001970 <GPIO_Init+0xd4>
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	689a      	ldr	r2, [r3, #8]
 8001916:	697b      	ldr	r3, [r7, #20]
 8001918:	005b      	lsls	r3, r3, #1
 800191a:	2103      	movs	r1, #3
 800191c:	fa01 f303 	lsl.w	r3, r1, r3
 8001920:	43db      	mvns	r3, r3
 8001922:	401a      	ands	r2, r3
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	609a      	str	r2, [r3, #8]
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	689a      	ldr	r2, [r3, #8]
 800192c:	683b      	ldr	r3, [r7, #0]
 800192e:	795b      	ldrb	r3, [r3, #5]
 8001930:	4619      	mov	r1, r3
 8001932:	697b      	ldr	r3, [r7, #20]
 8001934:	005b      	lsls	r3, r3, #1
 8001936:	fa01 f303 	lsl.w	r3, r1, r3
 800193a:	431a      	orrs	r2, r3
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	609a      	str	r2, [r3, #8]
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	685a      	ldr	r2, [r3, #4]
 8001944:	697b      	ldr	r3, [r7, #20]
 8001946:	b29b      	uxth	r3, r3
 8001948:	4619      	mov	r1, r3
 800194a:	2301      	movs	r3, #1
 800194c:	408b      	lsls	r3, r1
 800194e:	43db      	mvns	r3, r3
 8001950:	401a      	ands	r2, r3
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	605a      	str	r2, [r3, #4]
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	683a      	ldr	r2, [r7, #0]
 800195c:	7992      	ldrb	r2, [r2, #6]
 800195e:	4611      	mov	r1, r2
 8001960:	697a      	ldr	r2, [r7, #20]
 8001962:	b292      	uxth	r2, r2
 8001964:	fa01 f202 	lsl.w	r2, r1, r2
 8001968:	b292      	uxth	r2, r2
 800196a:	431a      	orrs	r2, r3
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	605a      	str	r2, [r3, #4]
 8001970:	687b      	ldr	r3, [r7, #4]
 8001972:	68da      	ldr	r2, [r3, #12]
 8001974:	697b      	ldr	r3, [r7, #20]
 8001976:	b29b      	uxth	r3, r3
 8001978:	005b      	lsls	r3, r3, #1
 800197a:	2103      	movs	r1, #3
 800197c:	fa01 f303 	lsl.w	r3, r1, r3
 8001980:	43db      	mvns	r3, r3
 8001982:	401a      	ands	r2, r3
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	60da      	str	r2, [r3, #12]
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	68da      	ldr	r2, [r3, #12]
 800198c:	683b      	ldr	r3, [r7, #0]
 800198e:	79db      	ldrb	r3, [r3, #7]
 8001990:	4619      	mov	r1, r3
 8001992:	697b      	ldr	r3, [r7, #20]
 8001994:	005b      	lsls	r3, r3, #1
 8001996:	fa01 f303 	lsl.w	r3, r1, r3
 800199a:	431a      	orrs	r2, r3
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	60da      	str	r2, [r3, #12]
 80019a0:	697b      	ldr	r3, [r7, #20]
 80019a2:	3301      	adds	r3, #1
 80019a4:	617b      	str	r3, [r7, #20]
 80019a6:	697b      	ldr	r3, [r7, #20]
 80019a8:	2b0f      	cmp	r3, #15
 80019aa:	d985      	bls.n	80018b8 <GPIO_Init+0x1c>
 80019ac:	bf00      	nop
 80019ae:	371c      	adds	r7, #28
 80019b0:	46bd      	mov	sp, r7
 80019b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b6:	4770      	bx	lr

080019b8 <GPIO_ReadInputDataBit>:
 80019b8:	b480      	push	{r7}
 80019ba:	b085      	sub	sp, #20
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]
 80019c0:	460b      	mov	r3, r1
 80019c2:	807b      	strh	r3, [r7, #2]
 80019c4:	2300      	movs	r3, #0
 80019c6:	73fb      	strb	r3, [r7, #15]
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	691a      	ldr	r2, [r3, #16]
 80019cc:	887b      	ldrh	r3, [r7, #2]
 80019ce:	4013      	ands	r3, r2
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d002      	beq.n	80019da <GPIO_ReadInputDataBit+0x22>
 80019d4:	2301      	movs	r3, #1
 80019d6:	73fb      	strb	r3, [r7, #15]
 80019d8:	e001      	b.n	80019de <GPIO_ReadInputDataBit+0x26>
 80019da:	2300      	movs	r3, #0
 80019dc:	73fb      	strb	r3, [r7, #15]
 80019de:	7bfb      	ldrb	r3, [r7, #15]
 80019e0:	4618      	mov	r0, r3
 80019e2:	3714      	adds	r7, #20
 80019e4:	46bd      	mov	sp, r7
 80019e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ea:	4770      	bx	lr

080019ec <GPIO_SetBits>:
 80019ec:	b480      	push	{r7}
 80019ee:	b083      	sub	sp, #12
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
 80019f4:	460b      	mov	r3, r1
 80019f6:	807b      	strh	r3, [r7, #2]
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	887a      	ldrh	r2, [r7, #2]
 80019fc:	831a      	strh	r2, [r3, #24]
 80019fe:	bf00      	nop
 8001a00:	370c      	adds	r7, #12
 8001a02:	46bd      	mov	sp, r7
 8001a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a08:	4770      	bx	lr

08001a0a <GPIO_ResetBits>:
 8001a0a:	b480      	push	{r7}
 8001a0c:	b083      	sub	sp, #12
 8001a0e:	af00      	add	r7, sp, #0
 8001a10:	6078      	str	r0, [r7, #4]
 8001a12:	460b      	mov	r3, r1
 8001a14:	807b      	strh	r3, [r7, #2]
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	887a      	ldrh	r2, [r7, #2]
 8001a1a:	835a      	strh	r2, [r3, #26]
 8001a1c:	bf00      	nop
 8001a1e:	370c      	adds	r7, #12
 8001a20:	46bd      	mov	sp, r7
 8001a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a26:	4770      	bx	lr

08001a28 <GPIO_WriteBit>:
 8001a28:	b480      	push	{r7}
 8001a2a:	b083      	sub	sp, #12
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
 8001a30:	460b      	mov	r3, r1
 8001a32:	807b      	strh	r3, [r7, #2]
 8001a34:	4613      	mov	r3, r2
 8001a36:	707b      	strb	r3, [r7, #1]
 8001a38:	787b      	ldrb	r3, [r7, #1]
 8001a3a:	2b00      	cmp	r3, #0
 8001a3c:	d003      	beq.n	8001a46 <GPIO_WriteBit+0x1e>
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	887a      	ldrh	r2, [r7, #2]
 8001a42:	831a      	strh	r2, [r3, #24]
 8001a44:	e002      	b.n	8001a4c <GPIO_WriteBit+0x24>
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	887a      	ldrh	r2, [r7, #2]
 8001a4a:	835a      	strh	r2, [r3, #26]
 8001a4c:	bf00      	nop
 8001a4e:	370c      	adds	r7, #12
 8001a50:	46bd      	mov	sp, r7
 8001a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a56:	4770      	bx	lr

08001a58 <GPIO_PinAFConfig>:
 8001a58:	b480      	push	{r7}
 8001a5a:	b085      	sub	sp, #20
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	6078      	str	r0, [r7, #4]
 8001a60:	460b      	mov	r3, r1
 8001a62:	807b      	strh	r3, [r7, #2]
 8001a64:	4613      	mov	r3, r2
 8001a66:	707b      	strb	r3, [r7, #1]
 8001a68:	2300      	movs	r3, #0
 8001a6a:	60fb      	str	r3, [r7, #12]
 8001a6c:	2300      	movs	r3, #0
 8001a6e:	60bb      	str	r3, [r7, #8]
 8001a70:	787a      	ldrb	r2, [r7, #1]
 8001a72:	887b      	ldrh	r3, [r7, #2]
 8001a74:	f003 0307 	and.w	r3, r3, #7
 8001a78:	009b      	lsls	r3, r3, #2
 8001a7a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a7e:	60fb      	str	r3, [r7, #12]
 8001a80:	887b      	ldrh	r3, [r7, #2]
 8001a82:	08db      	lsrs	r3, r3, #3
 8001a84:	b29b      	uxth	r3, r3
 8001a86:	461a      	mov	r2, r3
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	3208      	adds	r2, #8
 8001a8c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001a90:	887b      	ldrh	r3, [r7, #2]
 8001a92:	f003 0307 	and.w	r3, r3, #7
 8001a96:	009b      	lsls	r3, r3, #2
 8001a98:	210f      	movs	r1, #15
 8001a9a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a9e:	43db      	mvns	r3, r3
 8001aa0:	8879      	ldrh	r1, [r7, #2]
 8001aa2:	08c9      	lsrs	r1, r1, #3
 8001aa4:	b289      	uxth	r1, r1
 8001aa6:	4608      	mov	r0, r1
 8001aa8:	ea02 0103 	and.w	r1, r2, r3
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	f100 0208 	add.w	r2, r0, #8
 8001ab2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001ab6:	887b      	ldrh	r3, [r7, #2]
 8001ab8:	08db      	lsrs	r3, r3, #3
 8001aba:	b29b      	uxth	r3, r3
 8001abc:	461a      	mov	r2, r3
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	3208      	adds	r2, #8
 8001ac2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ac6:	68fa      	ldr	r2, [r7, #12]
 8001ac8:	4313      	orrs	r3, r2
 8001aca:	60bb      	str	r3, [r7, #8]
 8001acc:	887b      	ldrh	r3, [r7, #2]
 8001ace:	08db      	lsrs	r3, r3, #3
 8001ad0:	b29b      	uxth	r3, r3
 8001ad2:	461a      	mov	r2, r3
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	3208      	adds	r2, #8
 8001ad8:	68b9      	ldr	r1, [r7, #8]
 8001ada:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001ade:	bf00      	nop
 8001ae0:	3714      	adds	r7, #20
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae8:	4770      	bx	lr
	...

08001aec <RCC_GetClocksFreq>:
 8001aec:	b480      	push	{r7}
 8001aee:	b089      	sub	sp, #36	@ 0x24
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
 8001af4:	2300      	movs	r3, #0
 8001af6:	61bb      	str	r3, [r7, #24]
 8001af8:	2300      	movs	r3, #0
 8001afa:	617b      	str	r3, [r7, #20]
 8001afc:	2300      	movs	r3, #0
 8001afe:	61fb      	str	r3, [r7, #28]
 8001b00:	2302      	movs	r3, #2
 8001b02:	613b      	str	r3, [r7, #16]
 8001b04:	2300      	movs	r3, #0
 8001b06:	60fb      	str	r3, [r7, #12]
 8001b08:	2302      	movs	r3, #2
 8001b0a:	60bb      	str	r3, [r7, #8]
 8001b0c:	4b47      	ldr	r3, [pc, #284]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b0e:	689b      	ldr	r3, [r3, #8]
 8001b10:	f003 030c 	and.w	r3, r3, #12
 8001b14:	61bb      	str	r3, [r7, #24]
 8001b16:	69bb      	ldr	r3, [r7, #24]
 8001b18:	2b04      	cmp	r3, #4
 8001b1a:	d007      	beq.n	8001b2c <RCC_GetClocksFreq+0x40>
 8001b1c:	2b08      	cmp	r3, #8
 8001b1e:	d009      	beq.n	8001b34 <RCC_GetClocksFreq+0x48>
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	d13d      	bne.n	8001ba0 <RCC_GetClocksFreq+0xb4>
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	4a42      	ldr	r2, [pc, #264]	@ (8001c30 <RCC_GetClocksFreq+0x144>)
 8001b28:	601a      	str	r2, [r3, #0]
 8001b2a:	e03d      	b.n	8001ba8 <RCC_GetClocksFreq+0xbc>
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	4a41      	ldr	r2, [pc, #260]	@ (8001c34 <RCC_GetClocksFreq+0x148>)
 8001b30:	601a      	str	r2, [r3, #0]
 8001b32:	e039      	b.n	8001ba8 <RCC_GetClocksFreq+0xbc>
 8001b34:	4b3d      	ldr	r3, [pc, #244]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b36:	685b      	ldr	r3, [r3, #4]
 8001b38:	0d9b      	lsrs	r3, r3, #22
 8001b3a:	f003 0301 	and.w	r3, r3, #1
 8001b3e:	60fb      	str	r3, [r7, #12]
 8001b40:	4b3a      	ldr	r3, [pc, #232]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b42:	685b      	ldr	r3, [r3, #4]
 8001b44:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001b48:	60bb      	str	r3, [r7, #8]
 8001b4a:	68fb      	ldr	r3, [r7, #12]
 8001b4c:	2b00      	cmp	r3, #0
 8001b4e:	d00c      	beq.n	8001b6a <RCC_GetClocksFreq+0x7e>
 8001b50:	4a38      	ldr	r2, [pc, #224]	@ (8001c34 <RCC_GetClocksFreq+0x148>)
 8001b52:	68bb      	ldr	r3, [r7, #8]
 8001b54:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b58:	4a34      	ldr	r2, [pc, #208]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b5a:	6852      	ldr	r2, [r2, #4]
 8001b5c:	0992      	lsrs	r2, r2, #6
 8001b5e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001b62:	fb02 f303 	mul.w	r3, r2, r3
 8001b66:	61fb      	str	r3, [r7, #28]
 8001b68:	e00b      	b.n	8001b82 <RCC_GetClocksFreq+0x96>
 8001b6a:	4a31      	ldr	r2, [pc, #196]	@ (8001c30 <RCC_GetClocksFreq+0x144>)
 8001b6c:	68bb      	ldr	r3, [r7, #8]
 8001b6e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b72:	4a2e      	ldr	r2, [pc, #184]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b74:	6852      	ldr	r2, [r2, #4]
 8001b76:	0992      	lsrs	r2, r2, #6
 8001b78:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001b7c:	fb02 f303 	mul.w	r3, r2, r3
 8001b80:	61fb      	str	r3, [r7, #28]
 8001b82:	4b2a      	ldr	r3, [pc, #168]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001b84:	685b      	ldr	r3, [r3, #4]
 8001b86:	0c1b      	lsrs	r3, r3, #16
 8001b88:	f003 0303 	and.w	r3, r3, #3
 8001b8c:	3301      	adds	r3, #1
 8001b8e:	005b      	lsls	r3, r3, #1
 8001b90:	613b      	str	r3, [r7, #16]
 8001b92:	69fa      	ldr	r2, [r7, #28]
 8001b94:	693b      	ldr	r3, [r7, #16]
 8001b96:	fbb2 f2f3 	udiv	r2, r2, r3
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	601a      	str	r2, [r3, #0]
 8001b9e:	e003      	b.n	8001ba8 <RCC_GetClocksFreq+0xbc>
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	4a23      	ldr	r2, [pc, #140]	@ (8001c30 <RCC_GetClocksFreq+0x144>)
 8001ba4:	601a      	str	r2, [r3, #0]
 8001ba6:	bf00      	nop
 8001ba8:	4b20      	ldr	r3, [pc, #128]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001baa:	689b      	ldr	r3, [r3, #8]
 8001bac:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001bb0:	61bb      	str	r3, [r7, #24]
 8001bb2:	69bb      	ldr	r3, [r7, #24]
 8001bb4:	091b      	lsrs	r3, r3, #4
 8001bb6:	61bb      	str	r3, [r7, #24]
 8001bb8:	4a1f      	ldr	r2, [pc, #124]	@ (8001c38 <RCC_GetClocksFreq+0x14c>)
 8001bba:	69bb      	ldr	r3, [r7, #24]
 8001bbc:	4413      	add	r3, r2
 8001bbe:	781b      	ldrb	r3, [r3, #0]
 8001bc0:	b2db      	uxtb	r3, r3
 8001bc2:	617b      	str	r3, [r7, #20]
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	681a      	ldr	r2, [r3, #0]
 8001bc8:	697b      	ldr	r3, [r7, #20]
 8001bca:	40da      	lsrs	r2, r3
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	605a      	str	r2, [r3, #4]
 8001bd0:	4b16      	ldr	r3, [pc, #88]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001bd2:	689b      	ldr	r3, [r3, #8]
 8001bd4:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8001bd8:	61bb      	str	r3, [r7, #24]
 8001bda:	69bb      	ldr	r3, [r7, #24]
 8001bdc:	0a9b      	lsrs	r3, r3, #10
 8001bde:	61bb      	str	r3, [r7, #24]
 8001be0:	4a15      	ldr	r2, [pc, #84]	@ (8001c38 <RCC_GetClocksFreq+0x14c>)
 8001be2:	69bb      	ldr	r3, [r7, #24]
 8001be4:	4413      	add	r3, r2
 8001be6:	781b      	ldrb	r3, [r3, #0]
 8001be8:	b2db      	uxtb	r3, r3
 8001bea:	617b      	str	r3, [r7, #20]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	685a      	ldr	r2, [r3, #4]
 8001bf0:	697b      	ldr	r3, [r7, #20]
 8001bf2:	40da      	lsrs	r2, r3
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	609a      	str	r2, [r3, #8]
 8001bf8:	4b0c      	ldr	r3, [pc, #48]	@ (8001c2c <RCC_GetClocksFreq+0x140>)
 8001bfa:	689b      	ldr	r3, [r3, #8]
 8001bfc:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8001c00:	61bb      	str	r3, [r7, #24]
 8001c02:	69bb      	ldr	r3, [r7, #24]
 8001c04:	0b5b      	lsrs	r3, r3, #13
 8001c06:	61bb      	str	r3, [r7, #24]
 8001c08:	4a0b      	ldr	r2, [pc, #44]	@ (8001c38 <RCC_GetClocksFreq+0x14c>)
 8001c0a:	69bb      	ldr	r3, [r7, #24]
 8001c0c:	4413      	add	r3, r2
 8001c0e:	781b      	ldrb	r3, [r3, #0]
 8001c10:	b2db      	uxtb	r3, r3
 8001c12:	617b      	str	r3, [r7, #20]
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	685a      	ldr	r2, [r3, #4]
 8001c18:	697b      	ldr	r3, [r7, #20]
 8001c1a:	40da      	lsrs	r2, r3
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	60da      	str	r2, [r3, #12]
 8001c20:	bf00      	nop
 8001c22:	3724      	adds	r7, #36	@ 0x24
 8001c24:	46bd      	mov	sp, r7
 8001c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c2a:	4770      	bx	lr
 8001c2c:	40023800 	.word	0x40023800
 8001c30:	00f42400 	.word	0x00f42400
 8001c34:	017d7840 	.word	0x017d7840
 8001c38:	20000018 	.word	0x20000018

08001c3c <RCC_AHB1PeriphClockCmd>:
 8001c3c:	b480      	push	{r7}
 8001c3e:	b083      	sub	sp, #12
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	460b      	mov	r3, r1
 8001c46:	70fb      	strb	r3, [r7, #3]
 8001c48:	78fb      	ldrb	r3, [r7, #3]
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d006      	beq.n	8001c5c <RCC_AHB1PeriphClockCmd+0x20>
 8001c4e:	4b0a      	ldr	r3, [pc, #40]	@ (8001c78 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001c50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c52:	4909      	ldr	r1, [pc, #36]	@ (8001c78 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	4313      	orrs	r3, r2
 8001c58:	630b      	str	r3, [r1, #48]	@ 0x30
 8001c5a:	e006      	b.n	8001c6a <RCC_AHB1PeriphClockCmd+0x2e>
 8001c5c:	4b06      	ldr	r3, [pc, #24]	@ (8001c78 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001c5e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	43db      	mvns	r3, r3
 8001c64:	4904      	ldr	r1, [pc, #16]	@ (8001c78 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001c66:	4013      	ands	r3, r2
 8001c68:	630b      	str	r3, [r1, #48]	@ 0x30
 8001c6a:	bf00      	nop
 8001c6c:	370c      	adds	r7, #12
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c74:	4770      	bx	lr
 8001c76:	bf00      	nop
 8001c78:	40023800 	.word	0x40023800

08001c7c <RCC_APB1PeriphClockCmd>:
 8001c7c:	b480      	push	{r7}
 8001c7e:	b083      	sub	sp, #12
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	6078      	str	r0, [r7, #4]
 8001c84:	460b      	mov	r3, r1
 8001c86:	70fb      	strb	r3, [r7, #3]
 8001c88:	78fb      	ldrb	r3, [r7, #3]
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d006      	beq.n	8001c9c <RCC_APB1PeriphClockCmd+0x20>
 8001c8e:	4b0a      	ldr	r3, [pc, #40]	@ (8001cb8 <RCC_APB1PeriphClockCmd+0x3c>)
 8001c90:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001c92:	4909      	ldr	r1, [pc, #36]	@ (8001cb8 <RCC_APB1PeriphClockCmd+0x3c>)
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	4313      	orrs	r3, r2
 8001c98:	640b      	str	r3, [r1, #64]	@ 0x40
 8001c9a:	e006      	b.n	8001caa <RCC_APB1PeriphClockCmd+0x2e>
 8001c9c:	4b06      	ldr	r3, [pc, #24]	@ (8001cb8 <RCC_APB1PeriphClockCmd+0x3c>)
 8001c9e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	43db      	mvns	r3, r3
 8001ca4:	4904      	ldr	r1, [pc, #16]	@ (8001cb8 <RCC_APB1PeriphClockCmd+0x3c>)
 8001ca6:	4013      	ands	r3, r2
 8001ca8:	640b      	str	r3, [r1, #64]	@ 0x40
 8001caa:	bf00      	nop
 8001cac:	370c      	adds	r7, #12
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb4:	4770      	bx	lr
 8001cb6:	bf00      	nop
 8001cb8:	40023800 	.word	0x40023800

08001cbc <RCC_APB2PeriphClockCmd>:
 8001cbc:	b480      	push	{r7}
 8001cbe:	b083      	sub	sp, #12
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	6078      	str	r0, [r7, #4]
 8001cc4:	460b      	mov	r3, r1
 8001cc6:	70fb      	strb	r3, [r7, #3]
 8001cc8:	78fb      	ldrb	r3, [r7, #3]
 8001cca:	2b00      	cmp	r3, #0
 8001ccc:	d006      	beq.n	8001cdc <RCC_APB2PeriphClockCmd+0x20>
 8001cce:	4b0a      	ldr	r3, [pc, #40]	@ (8001cf8 <RCC_APB2PeriphClockCmd+0x3c>)
 8001cd0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001cd2:	4909      	ldr	r1, [pc, #36]	@ (8001cf8 <RCC_APB2PeriphClockCmd+0x3c>)
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	4313      	orrs	r3, r2
 8001cd8:	644b      	str	r3, [r1, #68]	@ 0x44
 8001cda:	e006      	b.n	8001cea <RCC_APB2PeriphClockCmd+0x2e>
 8001cdc:	4b06      	ldr	r3, [pc, #24]	@ (8001cf8 <RCC_APB2PeriphClockCmd+0x3c>)
 8001cde:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	43db      	mvns	r3, r3
 8001ce4:	4904      	ldr	r1, [pc, #16]	@ (8001cf8 <RCC_APB2PeriphClockCmd+0x3c>)
 8001ce6:	4013      	ands	r3, r2
 8001ce8:	644b      	str	r3, [r1, #68]	@ 0x44
 8001cea:	bf00      	nop
 8001cec:	370c      	adds	r7, #12
 8001cee:	46bd      	mov	sp, r7
 8001cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cf4:	4770      	bx	lr
 8001cf6:	bf00      	nop
 8001cf8:	40023800 	.word	0x40023800

08001cfc <RCC_APB2PeriphResetCmd>:
 8001cfc:	b480      	push	{r7}
 8001cfe:	b083      	sub	sp, #12
 8001d00:	af00      	add	r7, sp, #0
 8001d02:	6078      	str	r0, [r7, #4]
 8001d04:	460b      	mov	r3, r1
 8001d06:	70fb      	strb	r3, [r7, #3]
 8001d08:	78fb      	ldrb	r3, [r7, #3]
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d006      	beq.n	8001d1c <RCC_APB2PeriphResetCmd+0x20>
 8001d0e:	4b0a      	ldr	r3, [pc, #40]	@ (8001d38 <RCC_APB2PeriphResetCmd+0x3c>)
 8001d10:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001d12:	4909      	ldr	r1, [pc, #36]	@ (8001d38 <RCC_APB2PeriphResetCmd+0x3c>)
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	4313      	orrs	r3, r2
 8001d18:	624b      	str	r3, [r1, #36]	@ 0x24
 8001d1a:	e006      	b.n	8001d2a <RCC_APB2PeriphResetCmd+0x2e>
 8001d1c:	4b06      	ldr	r3, [pc, #24]	@ (8001d38 <RCC_APB2PeriphResetCmd+0x3c>)
 8001d1e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	43db      	mvns	r3, r3
 8001d24:	4904      	ldr	r1, [pc, #16]	@ (8001d38 <RCC_APB2PeriphResetCmd+0x3c>)
 8001d26:	4013      	ands	r3, r2
 8001d28:	624b      	str	r3, [r1, #36]	@ 0x24
 8001d2a:	bf00      	nop
 8001d2c:	370c      	adds	r7, #12
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d34:	4770      	bx	lr
 8001d36:	bf00      	nop
 8001d38:	40023800 	.word	0x40023800

08001d3c <USART_Init>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b08a      	sub	sp, #40	@ 0x28
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	6078      	str	r0, [r7, #4]
 8001d44:	6039      	str	r1, [r7, #0]
 8001d46:	2300      	movs	r3, #0
 8001d48:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	623b      	str	r3, [r7, #32]
 8001d4e:	2300      	movs	r3, #0
 8001d50:	61fb      	str	r3, [r7, #28]
 8001d52:	2300      	movs	r3, #0
 8001d54:	61bb      	str	r3, [r7, #24]
 8001d56:	687b      	ldr	r3, [r7, #4]
 8001d58:	8a1b      	ldrh	r3, [r3, #16]
 8001d5a:	b29b      	uxth	r3, r3
 8001d5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d60:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001d64:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d66:	683b      	ldr	r3, [r7, #0]
 8001d68:	88db      	ldrh	r3, [r3, #6]
 8001d6a:	461a      	mov	r2, r3
 8001d6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d6e:	4313      	orrs	r3, r2
 8001d70:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d74:	b29a      	uxth	r2, r3
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	821a      	strh	r2, [r3, #16]
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	899b      	ldrh	r3, [r3, #12]
 8001d7e:	b29b      	uxth	r3, r3
 8001d80:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d84:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8001d88:	f023 030c 	bic.w	r3, r3, #12
 8001d8c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d8e:	683b      	ldr	r3, [r7, #0]
 8001d90:	889a      	ldrh	r2, [r3, #4]
 8001d92:	683b      	ldr	r3, [r7, #0]
 8001d94:	891b      	ldrh	r3, [r3, #8]
 8001d96:	4313      	orrs	r3, r2
 8001d98:	b29a      	uxth	r2, r3
 8001d9a:	683b      	ldr	r3, [r7, #0]
 8001d9c:	895b      	ldrh	r3, [r3, #10]
 8001d9e:	4313      	orrs	r3, r2
 8001da0:	b29b      	uxth	r3, r3
 8001da2:	461a      	mov	r2, r3
 8001da4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001da6:	4313      	orrs	r3, r2
 8001da8:	627b      	str	r3, [r7, #36]	@ 0x24
 8001daa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dac:	b29a      	uxth	r2, r3
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	819a      	strh	r2, [r3, #12]
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	8a9b      	ldrh	r3, [r3, #20]
 8001db6:	b29b      	uxth	r3, r3
 8001db8:	627b      	str	r3, [r7, #36]	@ 0x24
 8001dba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dbc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8001dc0:	627b      	str	r3, [r7, #36]	@ 0x24
 8001dc2:	683b      	ldr	r3, [r7, #0]
 8001dc4:	899b      	ldrh	r3, [r3, #12]
 8001dc6:	461a      	mov	r2, r3
 8001dc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dca:	4313      	orrs	r3, r2
 8001dcc:	627b      	str	r3, [r7, #36]	@ 0x24
 8001dce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dd0:	b29a      	uxth	r2, r3
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	829a      	strh	r2, [r3, #20]
 8001dd6:	f107 0308 	add.w	r3, r7, #8
 8001dda:	4618      	mov	r0, r3
 8001ddc:	f7ff fe86 	bl	8001aec <RCC_GetClocksFreq>
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	4a30      	ldr	r2, [pc, #192]	@ (8001ea4 <USART_Init+0x168>)
 8001de4:	4293      	cmp	r3, r2
 8001de6:	d003      	beq.n	8001df0 <USART_Init+0xb4>
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	4a2f      	ldr	r2, [pc, #188]	@ (8001ea8 <USART_Init+0x16c>)
 8001dec:	4293      	cmp	r3, r2
 8001dee:	d102      	bne.n	8001df6 <USART_Init+0xba>
 8001df0:	697b      	ldr	r3, [r7, #20]
 8001df2:	623b      	str	r3, [r7, #32]
 8001df4:	e001      	b.n	8001dfa <USART_Init+0xbe>
 8001df6:	693b      	ldr	r3, [r7, #16]
 8001df8:	623b      	str	r3, [r7, #32]
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	899b      	ldrh	r3, [r3, #12]
 8001dfe:	b29b      	uxth	r3, r3
 8001e00:	b21b      	sxth	r3, r3
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	da0c      	bge.n	8001e20 <USART_Init+0xe4>
 8001e06:	6a3a      	ldr	r2, [r7, #32]
 8001e08:	4613      	mov	r3, r2
 8001e0a:	009b      	lsls	r3, r3, #2
 8001e0c:	4413      	add	r3, r2
 8001e0e:	009a      	lsls	r2, r3, #2
 8001e10:	441a      	add	r2, r3
 8001e12:	683b      	ldr	r3, [r7, #0]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	005b      	lsls	r3, r3, #1
 8001e18:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e1c:	61fb      	str	r3, [r7, #28]
 8001e1e:	e00b      	b.n	8001e38 <USART_Init+0xfc>
 8001e20:	6a3a      	ldr	r2, [r7, #32]
 8001e22:	4613      	mov	r3, r2
 8001e24:	009b      	lsls	r3, r3, #2
 8001e26:	4413      	add	r3, r2
 8001e28:	009a      	lsls	r2, r3, #2
 8001e2a:	441a      	add	r2, r3
 8001e2c:	683b      	ldr	r3, [r7, #0]
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	009b      	lsls	r3, r3, #2
 8001e32:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e36:	61fb      	str	r3, [r7, #28]
 8001e38:	69fb      	ldr	r3, [r7, #28]
 8001e3a:	4a1c      	ldr	r2, [pc, #112]	@ (8001eac <USART_Init+0x170>)
 8001e3c:	fba2 2303 	umull	r2, r3, r2, r3
 8001e40:	095b      	lsrs	r3, r3, #5
 8001e42:	011b      	lsls	r3, r3, #4
 8001e44:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e48:	091b      	lsrs	r3, r3, #4
 8001e4a:	2264      	movs	r2, #100	@ 0x64
 8001e4c:	fb02 f303 	mul.w	r3, r2, r3
 8001e50:	69fa      	ldr	r2, [r7, #28]
 8001e52:	1ad3      	subs	r3, r2, r3
 8001e54:	61bb      	str	r3, [r7, #24]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	899b      	ldrh	r3, [r3, #12]
 8001e5a:	b29b      	uxth	r3, r3
 8001e5c:	b21b      	sxth	r3, r3
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	da0c      	bge.n	8001e7c <USART_Init+0x140>
 8001e62:	69bb      	ldr	r3, [r7, #24]
 8001e64:	00db      	lsls	r3, r3, #3
 8001e66:	3332      	adds	r3, #50	@ 0x32
 8001e68:	4a10      	ldr	r2, [pc, #64]	@ (8001eac <USART_Init+0x170>)
 8001e6a:	fba2 2303 	umull	r2, r3, r2, r3
 8001e6e:	095b      	lsrs	r3, r3, #5
 8001e70:	f003 0307 	and.w	r3, r3, #7
 8001e74:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001e76:	4313      	orrs	r3, r2
 8001e78:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e7a:	e00b      	b.n	8001e94 <USART_Init+0x158>
 8001e7c:	69bb      	ldr	r3, [r7, #24]
 8001e7e:	011b      	lsls	r3, r3, #4
 8001e80:	3332      	adds	r3, #50	@ 0x32
 8001e82:	4a0a      	ldr	r2, [pc, #40]	@ (8001eac <USART_Init+0x170>)
 8001e84:	fba2 2303 	umull	r2, r3, r2, r3
 8001e88:	095b      	lsrs	r3, r3, #5
 8001e8a:	f003 030f 	and.w	r3, r3, #15
 8001e8e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001e90:	4313      	orrs	r3, r2
 8001e92:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e96:	b29a      	uxth	r2, r3
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	811a      	strh	r2, [r3, #8]
 8001e9c:	bf00      	nop
 8001e9e:	3728      	adds	r7, #40	@ 0x28
 8001ea0:	46bd      	mov	sp, r7
 8001ea2:	bd80      	pop	{r7, pc}
 8001ea4:	40011000 	.word	0x40011000
 8001ea8:	40011400 	.word	0x40011400
 8001eac:	51eb851f 	.word	0x51eb851f

08001eb0 <USART_Cmd>:
 8001eb0:	b480      	push	{r7}
 8001eb2:	b083      	sub	sp, #12
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	6078      	str	r0, [r7, #4]
 8001eb8:	460b      	mov	r3, r1
 8001eba:	70fb      	strb	r3, [r7, #3]
 8001ebc:	78fb      	ldrb	r3, [r7, #3]
 8001ebe:	2b00      	cmp	r3, #0
 8001ec0:	d008      	beq.n	8001ed4 <USART_Cmd+0x24>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	899b      	ldrh	r3, [r3, #12]
 8001ec6:	b29b      	uxth	r3, r3
 8001ec8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001ecc:	b29a      	uxth	r2, r3
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	819a      	strh	r2, [r3, #12]
 8001ed2:	e007      	b.n	8001ee4 <USART_Cmd+0x34>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	899b      	ldrh	r3, [r3, #12]
 8001ed8:	b29b      	uxth	r3, r3
 8001eda:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8001ede:	b29a      	uxth	r2, r3
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	819a      	strh	r2, [r3, #12]
 8001ee4:	bf00      	nop
 8001ee6:	370c      	adds	r7, #12
 8001ee8:	46bd      	mov	sp, r7
 8001eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eee:	4770      	bx	lr

08001ef0 <USART_SendData>:
 8001ef0:	b480      	push	{r7}
 8001ef2:	b083      	sub	sp, #12
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	460b      	mov	r3, r1
 8001efa:	807b      	strh	r3, [r7, #2]
 8001efc:	887b      	ldrh	r3, [r7, #2]
 8001efe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001f02:	b29a      	uxth	r2, r3
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	809a      	strh	r2, [r3, #4]
 8001f08:	bf00      	nop
 8001f0a:	370c      	adds	r7, #12
 8001f0c:	46bd      	mov	sp, r7
 8001f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f12:	4770      	bx	lr

08001f14 <USART_ReceiveData>:
 8001f14:	b480      	push	{r7}
 8001f16:	b083      	sub	sp, #12
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	6078      	str	r0, [r7, #4]
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	889b      	ldrh	r3, [r3, #4]
 8001f20:	b29b      	uxth	r3, r3
 8001f22:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001f26:	b29b      	uxth	r3, r3
 8001f28:	4618      	mov	r0, r3
 8001f2a:	370c      	adds	r7, #12
 8001f2c:	46bd      	mov	sp, r7
 8001f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f32:	4770      	bx	lr

08001f34 <USART_ITConfig>:
 8001f34:	b480      	push	{r7}
 8001f36:	b087      	sub	sp, #28
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
 8001f3c:	460b      	mov	r3, r1
 8001f3e:	807b      	strh	r3, [r7, #2]
 8001f40:	4613      	mov	r3, r2
 8001f42:	707b      	strb	r3, [r7, #1]
 8001f44:	2300      	movs	r3, #0
 8001f46:	613b      	str	r3, [r7, #16]
 8001f48:	2300      	movs	r3, #0
 8001f4a:	60fb      	str	r3, [r7, #12]
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	60bb      	str	r3, [r7, #8]
 8001f50:	2300      	movs	r3, #0
 8001f52:	617b      	str	r3, [r7, #20]
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	617b      	str	r3, [r7, #20]
 8001f58:	887b      	ldrh	r3, [r7, #2]
 8001f5a:	b2db      	uxtb	r3, r3
 8001f5c:	095b      	lsrs	r3, r3, #5
 8001f5e:	b2db      	uxtb	r3, r3
 8001f60:	613b      	str	r3, [r7, #16]
 8001f62:	887b      	ldrh	r3, [r7, #2]
 8001f64:	f003 031f 	and.w	r3, r3, #31
 8001f68:	60fb      	str	r3, [r7, #12]
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	68fb      	ldr	r3, [r7, #12]
 8001f6e:	fa02 f303 	lsl.w	r3, r2, r3
 8001f72:	60bb      	str	r3, [r7, #8]
 8001f74:	693b      	ldr	r3, [r7, #16]
 8001f76:	2b01      	cmp	r3, #1
 8001f78:	d103      	bne.n	8001f82 <USART_ITConfig+0x4e>
 8001f7a:	697b      	ldr	r3, [r7, #20]
 8001f7c:	330c      	adds	r3, #12
 8001f7e:	617b      	str	r3, [r7, #20]
 8001f80:	e009      	b.n	8001f96 <USART_ITConfig+0x62>
 8001f82:	693b      	ldr	r3, [r7, #16]
 8001f84:	2b02      	cmp	r3, #2
 8001f86:	d103      	bne.n	8001f90 <USART_ITConfig+0x5c>
 8001f88:	697b      	ldr	r3, [r7, #20]
 8001f8a:	3310      	adds	r3, #16
 8001f8c:	617b      	str	r3, [r7, #20]
 8001f8e:	e002      	b.n	8001f96 <USART_ITConfig+0x62>
 8001f90:	697b      	ldr	r3, [r7, #20]
 8001f92:	3314      	adds	r3, #20
 8001f94:	617b      	str	r3, [r7, #20]
 8001f96:	787b      	ldrb	r3, [r7, #1]
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d006      	beq.n	8001faa <USART_ITConfig+0x76>
 8001f9c:	697b      	ldr	r3, [r7, #20]
 8001f9e:	6819      	ldr	r1, [r3, #0]
 8001fa0:	697b      	ldr	r3, [r7, #20]
 8001fa2:	68ba      	ldr	r2, [r7, #8]
 8001fa4:	430a      	orrs	r2, r1
 8001fa6:	601a      	str	r2, [r3, #0]
 8001fa8:	e006      	b.n	8001fb8 <USART_ITConfig+0x84>
 8001faa:	697b      	ldr	r3, [r7, #20]
 8001fac:	6819      	ldr	r1, [r3, #0]
 8001fae:	68bb      	ldr	r3, [r7, #8]
 8001fb0:	43da      	mvns	r2, r3
 8001fb2:	697b      	ldr	r3, [r7, #20]
 8001fb4:	400a      	ands	r2, r1
 8001fb6:	601a      	str	r2, [r3, #0]
 8001fb8:	bf00      	nop
 8001fba:	371c      	adds	r7, #28
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc2:	4770      	bx	lr

08001fc4 <USART_GetFlagStatus>:
 8001fc4:	b480      	push	{r7}
 8001fc6:	b085      	sub	sp, #20
 8001fc8:	af00      	add	r7, sp, #0
 8001fca:	6078      	str	r0, [r7, #4]
 8001fcc:	460b      	mov	r3, r1
 8001fce:	807b      	strh	r3, [r7, #2]
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	73fb      	strb	r3, [r7, #15]
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	881b      	ldrh	r3, [r3, #0]
 8001fd8:	b29a      	uxth	r2, r3
 8001fda:	887b      	ldrh	r3, [r7, #2]
 8001fdc:	4013      	ands	r3, r2
 8001fde:	b29b      	uxth	r3, r3
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d002      	beq.n	8001fea <USART_GetFlagStatus+0x26>
 8001fe4:	2301      	movs	r3, #1
 8001fe6:	73fb      	strb	r3, [r7, #15]
 8001fe8:	e001      	b.n	8001fee <USART_GetFlagStatus+0x2a>
 8001fea:	2300      	movs	r3, #0
 8001fec:	73fb      	strb	r3, [r7, #15]
 8001fee:	7bfb      	ldrb	r3, [r7, #15]
 8001ff0:	4618      	mov	r0, r3
 8001ff2:	3714      	adds	r7, #20
 8001ff4:	46bd      	mov	sp, r7
 8001ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffa:	4770      	bx	lr

08001ffc <USART_GetITStatus>:
 8001ffc:	b480      	push	{r7}
 8001ffe:	b087      	sub	sp, #28
 8002000:	af00      	add	r7, sp, #0
 8002002:	6078      	str	r0, [r7, #4]
 8002004:	460b      	mov	r3, r1
 8002006:	807b      	strh	r3, [r7, #2]
 8002008:	2300      	movs	r3, #0
 800200a:	60fb      	str	r3, [r7, #12]
 800200c:	2300      	movs	r3, #0
 800200e:	617b      	str	r3, [r7, #20]
 8002010:	2300      	movs	r3, #0
 8002012:	60bb      	str	r3, [r7, #8]
 8002014:	2300      	movs	r3, #0
 8002016:	74fb      	strb	r3, [r7, #19]
 8002018:	887b      	ldrh	r3, [r7, #2]
 800201a:	b2db      	uxtb	r3, r3
 800201c:	095b      	lsrs	r3, r3, #5
 800201e:	b2db      	uxtb	r3, r3
 8002020:	60bb      	str	r3, [r7, #8]
 8002022:	887b      	ldrh	r3, [r7, #2]
 8002024:	f003 031f 	and.w	r3, r3, #31
 8002028:	617b      	str	r3, [r7, #20]
 800202a:	2201      	movs	r2, #1
 800202c:	697b      	ldr	r3, [r7, #20]
 800202e:	fa02 f303 	lsl.w	r3, r2, r3
 8002032:	617b      	str	r3, [r7, #20]
 8002034:	68bb      	ldr	r3, [r7, #8]
 8002036:	2b01      	cmp	r3, #1
 8002038:	d107      	bne.n	800204a <USART_GetITStatus+0x4e>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	899b      	ldrh	r3, [r3, #12]
 800203e:	b29b      	uxth	r3, r3
 8002040:	461a      	mov	r2, r3
 8002042:	697b      	ldr	r3, [r7, #20]
 8002044:	4013      	ands	r3, r2
 8002046:	617b      	str	r3, [r7, #20]
 8002048:	e011      	b.n	800206e <USART_GetITStatus+0x72>
 800204a:	68bb      	ldr	r3, [r7, #8]
 800204c:	2b02      	cmp	r3, #2
 800204e:	d107      	bne.n	8002060 <USART_GetITStatus+0x64>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	8a1b      	ldrh	r3, [r3, #16]
 8002054:	b29b      	uxth	r3, r3
 8002056:	461a      	mov	r2, r3
 8002058:	697b      	ldr	r3, [r7, #20]
 800205a:	4013      	ands	r3, r2
 800205c:	617b      	str	r3, [r7, #20]
 800205e:	e006      	b.n	800206e <USART_GetITStatus+0x72>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	8a9b      	ldrh	r3, [r3, #20]
 8002064:	b29b      	uxth	r3, r3
 8002066:	461a      	mov	r2, r3
 8002068:	697b      	ldr	r3, [r7, #20]
 800206a:	4013      	ands	r3, r2
 800206c:	617b      	str	r3, [r7, #20]
 800206e:	887b      	ldrh	r3, [r7, #2]
 8002070:	0a1b      	lsrs	r3, r3, #8
 8002072:	b29b      	uxth	r3, r3
 8002074:	60fb      	str	r3, [r7, #12]
 8002076:	2201      	movs	r2, #1
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	fa02 f303 	lsl.w	r3, r2, r3
 800207e:	60fb      	str	r3, [r7, #12]
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	881b      	ldrh	r3, [r3, #0]
 8002084:	b29b      	uxth	r3, r3
 8002086:	461a      	mov	r2, r3
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	4013      	ands	r3, r2
 800208c:	60fb      	str	r3, [r7, #12]
 800208e:	697b      	ldr	r3, [r7, #20]
 8002090:	2b00      	cmp	r3, #0
 8002092:	d005      	beq.n	80020a0 <USART_GetITStatus+0xa4>
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	2b00      	cmp	r3, #0
 8002098:	d002      	beq.n	80020a0 <USART_GetITStatus+0xa4>
 800209a:	2301      	movs	r3, #1
 800209c:	74fb      	strb	r3, [r7, #19]
 800209e:	e001      	b.n	80020a4 <USART_GetITStatus+0xa8>
 80020a0:	2300      	movs	r3, #0
 80020a2:	74fb      	strb	r3, [r7, #19]
 80020a4:	7cfb      	ldrb	r3, [r7, #19]
 80020a6:	4618      	mov	r0, r3
 80020a8:	371c      	adds	r7, #28
 80020aa:	46bd      	mov	sp, r7
 80020ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b0:	4770      	bx	lr

080020b2 <USART_ClearITPendingBit>:
 80020b2:	b480      	push	{r7}
 80020b4:	b085      	sub	sp, #20
 80020b6:	af00      	add	r7, sp, #0
 80020b8:	6078      	str	r0, [r7, #4]
 80020ba:	460b      	mov	r3, r1
 80020bc:	807b      	strh	r3, [r7, #2]
 80020be:	2300      	movs	r3, #0
 80020c0:	81fb      	strh	r3, [r7, #14]
 80020c2:	2300      	movs	r3, #0
 80020c4:	81bb      	strh	r3, [r7, #12]
 80020c6:	887b      	ldrh	r3, [r7, #2]
 80020c8:	0a1b      	lsrs	r3, r3, #8
 80020ca:	81fb      	strh	r3, [r7, #14]
 80020cc:	89fb      	ldrh	r3, [r7, #14]
 80020ce:	2201      	movs	r2, #1
 80020d0:	fa02 f303 	lsl.w	r3, r2, r3
 80020d4:	81bb      	strh	r3, [r7, #12]
 80020d6:	89bb      	ldrh	r3, [r7, #12]
 80020d8:	43db      	mvns	r3, r3
 80020da:	b29a      	uxth	r2, r3
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	801a      	strh	r2, [r3, #0]
 80020e0:	bf00      	nop
 80020e2:	3714      	adds	r7, #20
 80020e4:	46bd      	mov	sp, r7
 80020e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ea:	4770      	bx	lr

080020ec <EventButton_Init>:
 80020ec:	b580      	push	{r7, lr}
 80020ee:	af00      	add	r7, sp, #0
 80020f0:	4915      	ldr	r1, [pc, #84]	@ (8002148 <EventButton_Init+0x5c>)
 80020f2:	2000      	movs	r0, #0
 80020f4:	f004 fa5e 	bl	80065b4 <Button_RegisterEventCallback>
 80020f8:	4914      	ldr	r1, [pc, #80]	@ (800214c <EventButton_Init+0x60>)
 80020fa:	2001      	movs	r0, #1
 80020fc:	f004 fa5a 	bl	80065b4 <Button_RegisterEventCallback>
 8002100:	4913      	ldr	r1, [pc, #76]	@ (8002150 <EventButton_Init+0x64>)
 8002102:	2002      	movs	r0, #2
 8002104:	f004 fa56 	bl	80065b4 <Button_RegisterEventCallback>
 8002108:	4912      	ldr	r1, [pc, #72]	@ (8002154 <EventButton_Init+0x68>)
 800210a:	2003      	movs	r0, #3
 800210c:	f004 fa52 	bl	80065b4 <Button_RegisterEventCallback>
 8002110:	2101      	movs	r1, #1
 8002112:	2000      	movs	r0, #0
 8002114:	f004 fa30 	bl	8006578 <Button_SetMode>
 8002118:	2101      	movs	r1, #1
 800211a:	2001      	movs	r0, #1
 800211c:	f004 fa2c 	bl	8006578 <Button_SetMode>
 8002120:	2101      	movs	r1, #1
 8002122:	2002      	movs	r0, #2
 8002124:	f004 fa28 	bl	8006578 <Button_SetMode>
 8002128:	2101      	movs	r1, #1
 800212a:	2003      	movs	r0, #3
 800212c:	f004 fa24 	bl	8006578 <Button_SetMode>
 8002130:	2101      	movs	r1, #1
 8002132:	2004      	movs	r0, #4
 8002134:	f004 fa20 	bl	8006578 <Button_SetMode>
 8002138:	2101      	movs	r1, #1
 800213a:	2005      	movs	r0, #5
 800213c:	f004 fa1c 	bl	8006578 <Button_SetMode>
 8002140:	f004 f9bc 	bl	80064bc <Button_Init>
 8002144:	bf00      	nop
 8002146:	bd80      	pop	{r7, pc}
 8002148:	08002159 	.word	0x08002159
 800214c:	0800218d 	.word	0x0800218d
 8002150:	080021d5 	.word	0x080021d5
 8002154:	08002233 	.word	0x08002233

08002158 <ButtonProcessEventEdge>:
 8002158:	b580      	push	{r7, lr}
 800215a:	b084      	sub	sp, #16
 800215c:	af00      	add	r7, sp, #0
 800215e:	4603      	mov	r3, r0
 8002160:	460a      	mov	r2, r1
 8002162:	71fb      	strb	r3, [r7, #7]
 8002164:	4613      	mov	r3, r2
 8002166:	80bb      	strh	r3, [r7, #4]
 8002168:	88bb      	ldrh	r3, [r7, #4]
 800216a:	2b00      	cmp	r3, #0
 800216c:	d103      	bne.n	8002176 <ButtonProcessEventEdge+0x1e>
 800216e:	79fb      	ldrb	r3, [r7, #7]
 8002170:	3306      	adds	r3, #6
 8002172:	73fb      	strb	r3, [r7, #15]
 8002174:	e002      	b.n	800217c <ButtonProcessEventEdge+0x24>
 8002176:	79fb      	ldrb	r3, [r7, #7]
 8002178:	330c      	adds	r3, #12
 800217a:	73fb      	strb	r3, [r7, #15]
 800217c:	7bfb      	ldrb	r3, [r7, #15]
 800217e:	4618      	mov	r0, r3
 8002180:	f000 fd3a 	bl	8002bf8 <EventSchedulerAdd>
 8002184:	bf00      	nop
 8002186:	3710      	adds	r7, #16
 8002188:	46bd      	mov	sp, r7
 800218a:	bd80      	pop	{r7, pc}

0800218c <ButtonProcessEventPress>:
 800218c:	b580      	push	{r7, lr}
 800218e:	b084      	sub	sp, #16
 8002190:	af00      	add	r7, sp, #0
 8002192:	4603      	mov	r3, r0
 8002194:	460a      	mov	r2, r1
 8002196:	71fb      	strb	r3, [r7, #7]
 8002198:	4613      	mov	r3, r2
 800219a:	80bb      	strh	r3, [r7, #4]
 800219c:	88bb      	ldrh	r3, [r7, #4]
 800219e:	2b01      	cmp	r3, #1
 80021a0:	d102      	bne.n	80021a8 <ButtonProcessEventPress+0x1c>
 80021a2:	79fb      	ldrb	r3, [r7, #7]
 80021a4:	73fb      	strb	r3, [r7, #15]
 80021a6:	e00c      	b.n	80021c2 <ButtonProcessEventPress+0x36>
 80021a8:	88bb      	ldrh	r3, [r7, #4]
 80021aa:	2b02      	cmp	r3, #2
 80021ac:	d103      	bne.n	80021b6 <ButtonProcessEventPress+0x2a>
 80021ae:	79fb      	ldrb	r3, [r7, #7]
 80021b0:	3312      	adds	r3, #18
 80021b2:	73fb      	strb	r3, [r7, #15]
 80021b4:	e005      	b.n	80021c2 <ButtonProcessEventPress+0x36>
 80021b6:	88bb      	ldrh	r3, [r7, #4]
 80021b8:	2b05      	cmp	r3, #5
 80021ba:	d107      	bne.n	80021cc <ButtonProcessEventPress+0x40>
 80021bc:	79fb      	ldrb	r3, [r7, #7]
 80021be:	3318      	adds	r3, #24
 80021c0:	73fb      	strb	r3, [r7, #15]
 80021c2:	7bfb      	ldrb	r3, [r7, #15]
 80021c4:	4618      	mov	r0, r3
 80021c6:	f000 fd17 	bl	8002bf8 <EventSchedulerAdd>
 80021ca:	e000      	b.n	80021ce <ButtonProcessEventPress+0x42>
 80021cc:	bf00      	nop
 80021ce:	3710      	adds	r7, #16
 80021d0:	46bd      	mov	sp, r7
 80021d2:	bd80      	pop	{r7, pc}

080021d4 <ButtonProcessEventHold>:
 80021d4:	b580      	push	{r7, lr}
 80021d6:	b084      	sub	sp, #16
 80021d8:	af00      	add	r7, sp, #0
 80021da:	4603      	mov	r3, r0
 80021dc:	460a      	mov	r2, r1
 80021de:	71fb      	strb	r3, [r7, #7]
 80021e0:	4613      	mov	r3, r2
 80021e2:	80bb      	strh	r3, [r7, #4]
 80021e4:	88bb      	ldrh	r3, [r7, #4]
 80021e6:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80021ea:	d103      	bne.n	80021f4 <ButtonProcessEventHold+0x20>
 80021ec:	79fb      	ldrb	r3, [r7, #7]
 80021ee:	3330      	adds	r3, #48	@ 0x30
 80021f0:	73fb      	strb	r3, [r7, #15]
 80021f2:	e015      	b.n	8002220 <ButtonProcessEventHold+0x4c>
 80021f4:	88bb      	ldrh	r3, [r7, #4]
 80021f6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80021fa:	d103      	bne.n	8002204 <ButtonProcessEventHold+0x30>
 80021fc:	79fb      	ldrb	r3, [r7, #7]
 80021fe:	332a      	adds	r3, #42	@ 0x2a
 8002200:	73fb      	strb	r3, [r7, #15]
 8002202:	e00d      	b.n	8002220 <ButtonProcessEventHold+0x4c>
 8002204:	88bb      	ldrh	r3, [r7, #4]
 8002206:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 800220a:	d103      	bne.n	8002214 <ButtonProcessEventHold+0x40>
 800220c:	79fb      	ldrb	r3, [r7, #7]
 800220e:	3324      	adds	r3, #36	@ 0x24
 8002210:	73fb      	strb	r3, [r7, #15]
 8002212:	e005      	b.n	8002220 <ButtonProcessEventHold+0x4c>
 8002214:	88bb      	ldrh	r3, [r7, #4]
 8002216:	2bc8      	cmp	r3, #200	@ 0xc8
 8002218:	d107      	bne.n	800222a <ButtonProcessEventHold+0x56>
 800221a:	79fb      	ldrb	r3, [r7, #7]
 800221c:	331e      	adds	r3, #30
 800221e:	73fb      	strb	r3, [r7, #15]
 8002220:	7bfb      	ldrb	r3, [r7, #15]
 8002222:	4618      	mov	r0, r3
 8002224:	f000 fce8 	bl	8002bf8 <EventSchedulerAdd>
 8002228:	e000      	b.n	800222c <ButtonProcessEventHold+0x58>
 800222a:	bf00      	nop
 800222c:	3710      	adds	r7, #16
 800222e:	46bd      	mov	sp, r7
 8002230:	bd80      	pop	{r7, pc}

08002232 <ButtonProcessEventRelease>:
 8002232:	b580      	push	{r7, lr}
 8002234:	b084      	sub	sp, #16
 8002236:	af00      	add	r7, sp, #0
 8002238:	4603      	mov	r3, r0
 800223a:	460a      	mov	r2, r1
 800223c:	71fb      	strb	r3, [r7, #7]
 800223e:	4613      	mov	r3, r2
 8002240:	80bb      	strh	r3, [r7, #4]
 8002242:	88bb      	ldrh	r3, [r7, #4]
 8002244:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 8002248:	d303      	bcc.n	8002252 <ButtonProcessEventRelease+0x20>
 800224a:	79fb      	ldrb	r3, [r7, #7]
 800224c:	3348      	adds	r3, #72	@ 0x48
 800224e:	73fb      	strb	r3, [r7, #15]
 8002250:	e015      	b.n	800227e <ButtonProcessEventRelease+0x4c>
 8002252:	88bb      	ldrh	r3, [r7, #4]
 8002254:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002258:	d303      	bcc.n	8002262 <ButtonProcessEventRelease+0x30>
 800225a:	79fb      	ldrb	r3, [r7, #7]
 800225c:	3342      	adds	r3, #66	@ 0x42
 800225e:	73fb      	strb	r3, [r7, #15]
 8002260:	e00d      	b.n	800227e <ButtonProcessEventRelease+0x4c>
 8002262:	88bb      	ldrh	r3, [r7, #4]
 8002264:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 8002268:	d303      	bcc.n	8002272 <ButtonProcessEventRelease+0x40>
 800226a:	79fb      	ldrb	r3, [r7, #7]
 800226c:	333c      	adds	r3, #60	@ 0x3c
 800226e:	73fb      	strb	r3, [r7, #15]
 8002270:	e005      	b.n	800227e <ButtonProcessEventRelease+0x4c>
 8002272:	88bb      	ldrh	r3, [r7, #4]
 8002274:	2bc7      	cmp	r3, #199	@ 0xc7
 8002276:	d907      	bls.n	8002288 <ButtonProcessEventRelease+0x56>
 8002278:	79fb      	ldrb	r3, [r7, #7]
 800227a:	3336      	adds	r3, #54	@ 0x36
 800227c:	73fb      	strb	r3, [r7, #15]
 800227e:	7bfb      	ldrb	r3, [r7, #15]
 8002280:	4618      	mov	r0, r3
 8002282:	f000 fcb9 	bl	8002bf8 <EventSchedulerAdd>
 8002286:	e000      	b.n	800228a <ButtonProcessEventRelease+0x58>
 8002288:	bf00      	nop
 800228a:	3710      	adds	r7, #16
 800228c:	46bd      	mov	sp, r7
 800228e:	bd80      	pop	{r7, pc}

08002290 <BuzzerControl_Init>:
 8002290:	b580      	push	{r7, lr}
 8002292:	af00      	add	r7, sp, #0
 8002294:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002298:	2120      	movs	r1, #32
 800229a:	2000      	movs	r0, #0
 800229c:	f000 f8ba 	bl	8002414 <BUZZTIM_InitTimer>
 80022a0:	4b04      	ldr	r3, [pc, #16]	@ (80022b4 <BuzzerControl_Init+0x24>)
 80022a2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80022a6:	f000 f8dd 	bl	8002464 <BUZZTIM_InitPWMChannel>
 80022aa:	4b03      	ldr	r3, [pc, #12]	@ (80022b8 <BuzzerControl_Init+0x28>)
 80022ac:	2201      	movs	r2, #1
 80022ae:	701a      	strb	r2, [r3, #0]
 80022b0:	bf00      	nop
 80022b2:	bd80      	pop	{r7, pc}
 80022b4:	08007da8 	.word	0x08007da8
 80022b8:	20000338 	.word	0x20000338

080022bc <BuzzOff>:
 80022bc:	b580      	push	{r7, lr}
 80022be:	b082      	sub	sp, #8
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	4b11      	ldr	r3, [pc, #68]	@ (800230c <BuzzOff+0x50>)
 80022c6:	22ff      	movs	r2, #255	@ 0xff
 80022c8:	701a      	strb	r2, [r3, #0]
 80022ca:	4b11      	ldr	r3, [pc, #68]	@ (8002310 <BuzzOff+0x54>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	3304      	adds	r3, #4
 80022d0:	4a0f      	ldr	r2, [pc, #60]	@ (8002310 <BuzzOff+0x54>)
 80022d2:	6013      	str	r3, [r2, #0]
 80022d4:	4b0e      	ldr	r3, [pc, #56]	@ (8002310 <BuzzOff+0x54>)
 80022d6:	681b      	ldr	r3, [r3, #0]
 80022d8:	881b      	ldrh	r3, [r3, #0]
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d108      	bne.n	80022f0 <BuzzOff+0x34>
 80022de:	4b0c      	ldr	r3, [pc, #48]	@ (8002310 <BuzzOff+0x54>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	885b      	ldrh	r3, [r3, #2]
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	d103      	bne.n	80022f0 <BuzzOff+0x34>
 80022e8:	2000      	movs	r0, #0
 80022ea:	f000 f903 	bl	80024f4 <BuzzerControl_SetDutyCycle>
 80022ee:	e009      	b.n	8002304 <BuzzOff+0x48>
 80022f0:	4b07      	ldr	r3, [pc, #28]	@ (8002310 <BuzzOff+0x54>)
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	881a      	ldrh	r2, [r3, #0]
 80022f6:	4b06      	ldr	r3, [pc, #24]	@ (8002310 <BuzzOff+0x54>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	885b      	ldrh	r3, [r3, #2]
 80022fc:	4619      	mov	r1, r3
 80022fe:	4610      	mov	r0, r2
 8002300:	f000 f808 	bl	8002314 <BuzzPlay>
 8002304:	bf00      	nop
 8002306:	3708      	adds	r7, #8
 8002308:	46bd      	mov	sp, r7
 800230a:	bd80      	pop	{r7, pc}
 800230c:	20000028 	.word	0x20000028
 8002310:	2000033c 	.word	0x2000033c

08002314 <BuzzPlay>:
 8002314:	b580      	push	{r7, lr}
 8002316:	b086      	sub	sp, #24
 8002318:	af02      	add	r7, sp, #8
 800231a:	4603      	mov	r3, r0
 800231c:	460a      	mov	r2, r1
 800231e:	80fb      	strh	r3, [r7, #6]
 8002320:	4613      	mov	r3, r2
 8002322:	80bb      	strh	r3, [r7, #4]
 8002324:	88fb      	ldrh	r3, [r7, #6]
 8002326:	2b00      	cmp	r3, #0
 8002328:	d103      	bne.n	8002332 <BuzzPlay+0x1e>
 800232a:	2000      	movs	r0, #0
 800232c:	f000 f8e2 	bl	80024f4 <BuzzerControl_SetDutyCycle>
 8002330:	e017      	b.n	8002362 <BuzzPlay+0x4e>
 8002332:	88fb      	ldrh	r3, [r7, #6]
 8002334:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002338:	4293      	cmp	r3, r2
 800233a:	d107      	bne.n	800234c <BuzzPlay+0x38>
 800233c:	f241 3088 	movw	r0, #5000	@ 0x1388
 8002340:	f000 f8f6 	bl	8002530 <BuzzerControl_SetPreriod>
 8002344:	2065      	movs	r0, #101	@ 0x65
 8002346:	f000 f8d5 	bl	80024f4 <BuzzerControl_SetDutyCycle>
 800234a:	e00a      	b.n	8002362 <BuzzPlay+0x4e>
 800234c:	88fb      	ldrh	r3, [r7, #6]
 800234e:	4a13      	ldr	r2, [pc, #76]	@ (800239c <BuzzPlay+0x88>)
 8002350:	fb92 f3f3 	sdiv	r3, r2, r3
 8002354:	60fb      	str	r3, [r7, #12]
 8002356:	68f8      	ldr	r0, [r7, #12]
 8002358:	f000 f8ea 	bl	8002530 <BuzzerControl_SetPreriod>
 800235c:	2005      	movs	r0, #5
 800235e:	f000 f8c9 	bl	80024f4 <BuzzerControl_SetDutyCycle>
 8002362:	4b0f      	ldr	r3, [pc, #60]	@ (80023a0 <BuzzPlay+0x8c>)
 8002364:	781b      	ldrb	r3, [r3, #0]
 8002366:	2bff      	cmp	r3, #255	@ 0xff
 8002368:	d007      	beq.n	800237a <BuzzPlay+0x66>
 800236a:	4b0d      	ldr	r3, [pc, #52]	@ (80023a0 <BuzzPlay+0x8c>)
 800236c:	781b      	ldrb	r3, [r3, #0]
 800236e:	4618      	mov	r0, r3
 8002370:	f000 fd60 	bl	8002e34 <TimerStop>
 8002374:	4b0a      	ldr	r3, [pc, #40]	@ (80023a0 <BuzzPlay+0x8c>)
 8002376:	22ff      	movs	r2, #255	@ 0xff
 8002378:	701a      	strb	r2, [r3, #0]
 800237a:	88b9      	ldrh	r1, [r7, #4]
 800237c:	2300      	movs	r3, #0
 800237e:	9300      	str	r3, [sp, #0]
 8002380:	4b08      	ldr	r3, [pc, #32]	@ (80023a4 <BuzzPlay+0x90>)
 8002382:	2200      	movs	r2, #0
 8002384:	4808      	ldr	r0, [pc, #32]	@ (80023a8 <BuzzPlay+0x94>)
 8002386:	f000 fcd7 	bl	8002d38 <TimerStart>
 800238a:	4603      	mov	r3, r0
 800238c:	461a      	mov	r2, r3
 800238e:	4b04      	ldr	r3, [pc, #16]	@ (80023a0 <BuzzPlay+0x8c>)
 8002390:	701a      	strb	r2, [r3, #0]
 8002392:	bf00      	nop
 8002394:	3710      	adds	r7, #16
 8002396:	46bd      	mov	sp, r7
 8002398:	bd80      	pop	{r7, pc}
 800239a:	bf00      	nop
 800239c:	000b71b0 	.word	0x000b71b0
 80023a0:	20000028 	.word	0x20000028
 80023a4:	080022bd 	.word	0x080022bd
 80023a8:	08007d68 	.word	0x08007d68

080023ac <BuzzerControl_SetMelody>:
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b082      	sub	sp, #8
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	6078      	str	r0, [r7, #4]
 80023b4:	4b0a      	ldr	r3, [pc, #40]	@ (80023e0 <BuzzerControl_SetMelody+0x34>)
 80023b6:	781b      	ldrb	r3, [r3, #0]
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	d00d      	beq.n	80023d8 <BuzzerControl_SetMelody+0x2c>
 80023bc:	4a09      	ldr	r2, [pc, #36]	@ (80023e4 <BuzzerControl_SetMelody+0x38>)
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	6013      	str	r3, [r2, #0]
 80023c2:	4b08      	ldr	r3, [pc, #32]	@ (80023e4 <BuzzerControl_SetMelody+0x38>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	881a      	ldrh	r2, [r3, #0]
 80023c8:	4b06      	ldr	r3, [pc, #24]	@ (80023e4 <BuzzerControl_SetMelody+0x38>)
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	885b      	ldrh	r3, [r3, #2]
 80023ce:	4619      	mov	r1, r3
 80023d0:	4610      	mov	r0, r2
 80023d2:	f7ff ff9f 	bl	8002314 <BuzzPlay>
 80023d6:	e000      	b.n	80023da <BuzzerControl_SetMelody+0x2e>
 80023d8:	bf00      	nop
 80023da:	3708      	adds	r7, #8
 80023dc:	46bd      	mov	sp, r7
 80023de:	bd80      	pop	{r7, pc}
 80023e0:	20000338 	.word	0x20000338
 80023e4:	2000033c 	.word	0x2000033c

080023e8 <BuzzerControl_SendPacketRespond>:
 80023e8:	b580      	push	{r7, lr}
 80023ea:	b086      	sub	sp, #24
 80023ec:	af02      	add	r7, sp, #8
 80023ee:	4603      	mov	r3, r0
 80023f0:	71fb      	strb	r3, [r7, #7]
 80023f2:	79fb      	ldrb	r3, [r7, #7]
 80023f4:	733b      	strb	r3, [r7, #12]
 80023f6:	f107 020c 	add.w	r2, r7, #12
 80023fa:	2301      	movs	r3, #1
 80023fc:	9300      	str	r3, [sp, #0]
 80023fe:	4613      	mov	r3, r2
 8002400:	2201      	movs	r2, #1
 8002402:	2104      	movs	r1, #4
 8002404:	2000      	movs	r0, #0
 8002406:	f001 f971 	bl	80036ec <Serial_SendPacket>
 800240a:	bf00      	nop
 800240c:	3710      	adds	r7, #16
 800240e:	46bd      	mov	sp, r7
 8002410:	bd80      	pop	{r7, pc}
	...

08002414 <BUZZTIM_InitTimer>:
 8002414:	b580      	push	{r7, lr}
 8002416:	b088      	sub	sp, #32
 8002418:	af00      	add	r7, sp, #0
 800241a:	4603      	mov	r3, r0
 800241c:	60b9      	str	r1, [r7, #8]
 800241e:	607a      	str	r2, [r7, #4]
 8002420:	73fb      	strb	r3, [r7, #15]
 8002422:	2101      	movs	r1, #1
 8002424:	2002      	movs	r0, #2
 8002426:	f7ff fc29 	bl	8001c7c <RCC_APB1PeriphClockCmd>
 800242a:	68bb      	ldr	r3, [r7, #8]
 800242c:	b29b      	uxth	r3, r3
 800242e:	3b01      	subs	r3, #1
 8002430:	b29b      	uxth	r3, r3
 8002432:	82bb      	strh	r3, [r7, #20]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	3b01      	subs	r3, #1
 8002438:	61bb      	str	r3, [r7, #24]
 800243a:	2300      	movs	r3, #0
 800243c:	83bb      	strh	r3, [r7, #28]
 800243e:	2300      	movs	r3, #0
 8002440:	82fb      	strh	r3, [r7, #22]
 8002442:	f107 0314 	add.w	r3, r7, #20
 8002446:	4619      	mov	r1, r3
 8002448:	4805      	ldr	r0, [pc, #20]	@ (8002460 <BUZZTIM_InitTimer+0x4c>)
 800244a:	f003 fd5d 	bl	8005f08 <TIM_TimeBaseInit>
 800244e:	2101      	movs	r1, #1
 8002450:	4803      	ldr	r0, [pc, #12]	@ (8002460 <BUZZTIM_InitTimer+0x4c>)
 8002452:	f003 fdc5 	bl	8005fe0 <TIM_Cmd>
 8002456:	bf00      	nop
 8002458:	3720      	adds	r7, #32
 800245a:	46bd      	mov	sp, r7
 800245c:	bd80      	pop	{r7, pc}
 800245e:	bf00      	nop
 8002460:	40000400 	.word	0x40000400

08002464 <BUZZTIM_InitPWMChannel>:
 8002464:	b580      	push	{r7, lr}
 8002466:	b08a      	sub	sp, #40	@ 0x28
 8002468:	af00      	add	r7, sp, #0
 800246a:	463b      	mov	r3, r7
 800246c:	e883 0003 	stmia.w	r3, {r0, r1}
 8002470:	2101      	movs	r1, #1
 8002472:	2004      	movs	r0, #4
 8002474:	f7ff fbe2 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 8002478:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800247c:	623b      	str	r3, [r7, #32]
 800247e:	2302      	movs	r3, #2
 8002480:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 8002484:	2302      	movs	r3, #2
 8002486:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
 800248a:	2300      	movs	r3, #0
 800248c:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8002490:	2301      	movs	r3, #1
 8002492:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002496:	f107 0320 	add.w	r3, r7, #32
 800249a:	4619      	mov	r1, r3
 800249c:	4813      	ldr	r0, [pc, #76]	@ (80024ec <BUZZTIM_InitPWMChannel+0x88>)
 800249e:	f7ff f9fd 	bl	800189c <GPIO_Init>
 80024a2:	2202      	movs	r2, #2
 80024a4:	2109      	movs	r1, #9
 80024a6:	4811      	ldr	r0, [pc, #68]	@ (80024ec <BUZZTIM_InitPWMChannel+0x88>)
 80024a8:	f7ff fad6 	bl	8001a58 <GPIO_PinAFConfig>
 80024ac:	2360      	movs	r3, #96	@ 0x60
 80024ae:	81bb      	strh	r3, [r7, #12]
 80024b0:	2301      	movs	r3, #1
 80024b2:	81fb      	strh	r3, [r7, #14]
 80024b4:	2304      	movs	r3, #4
 80024b6:	823b      	strh	r3, [r7, #16]
 80024b8:	2300      	movs	r3, #0
 80024ba:	833b      	strh	r3, [r7, #24]
 80024bc:	2308      	movs	r3, #8
 80024be:	837b      	strh	r3, [r7, #26]
 80024c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80024c4:	83bb      	strh	r3, [r7, #28]
 80024c6:	2300      	movs	r3, #0
 80024c8:	83fb      	strh	r3, [r7, #30]
 80024ca:	2300      	movs	r3, #0
 80024cc:	617b      	str	r3, [r7, #20]
 80024ce:	f107 030c 	add.w	r3, r7, #12
 80024d2:	4619      	mov	r1, r3
 80024d4:	4806      	ldr	r0, [pc, #24]	@ (80024f0 <BUZZTIM_InitPWMChannel+0x8c>)
 80024d6:	f003 ff2b 	bl	8006330 <TIM_OC4Init>
 80024da:	2101      	movs	r1, #1
 80024dc:	4804      	ldr	r0, [pc, #16]	@ (80024f0 <BUZZTIM_InitPWMChannel+0x8c>)
 80024de:	f003 ffc7 	bl	8006470 <TIM_CtrlPWMOutputs>
 80024e2:	bf00      	nop
 80024e4:	3728      	adds	r7, #40	@ 0x28
 80024e6:	46bd      	mov	sp, r7
 80024e8:	bd80      	pop	{r7, pc}
 80024ea:	bf00      	nop
 80024ec:	40020800 	.word	0x40020800
 80024f0:	40000400 	.word	0x40000400

080024f4 <BuzzerControl_SetDutyCycle>:
 80024f4:	b580      	push	{r7, lr}
 80024f6:	b084      	sub	sp, #16
 80024f8:	af00      	add	r7, sp, #0
 80024fa:	4603      	mov	r3, r0
 80024fc:	71fb      	strb	r3, [r7, #7]
 80024fe:	4b0a      	ldr	r3, [pc, #40]	@ (8002528 <BuzzerControl_SetDutyCycle+0x34>)
 8002500:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002502:	60fb      	str	r3, [r7, #12]
 8002504:	79fb      	ldrb	r3, [r7, #7]
 8002506:	68fa      	ldr	r2, [r7, #12]
 8002508:	fb02 f303 	mul.w	r3, r2, r3
 800250c:	4a07      	ldr	r2, [pc, #28]	@ (800252c <BuzzerControl_SetDutyCycle+0x38>)
 800250e:	fba2 2303 	umull	r2, r3, r2, r3
 8002512:	095b      	lsrs	r3, r3, #5
 8002514:	60bb      	str	r3, [r7, #8]
 8002516:	68b9      	ldr	r1, [r7, #8]
 8002518:	4803      	ldr	r0, [pc, #12]	@ (8002528 <BuzzerControl_SetDutyCycle+0x34>)
 800251a:	f003 ff9b 	bl	8006454 <TIM_SetCompare4>
 800251e:	bf00      	nop
 8002520:	3710      	adds	r7, #16
 8002522:	46bd      	mov	sp, r7
 8002524:	bd80      	pop	{r7, pc}
 8002526:	bf00      	nop
 8002528:	40000400 	.word	0x40000400
 800252c:	51eb851f 	.word	0x51eb851f

08002530 <BuzzerControl_SetPreriod>:
 8002530:	b480      	push	{r7}
 8002532:	b083      	sub	sp, #12
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
 8002538:	4a04      	ldr	r2, [pc, #16]	@ (800254c <BuzzerControl_SetPreriod+0x1c>)
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	3b01      	subs	r3, #1
 800253e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8002540:	bf00      	nop
 8002542:	370c      	adds	r7, #12
 8002544:	46bd      	mov	sp, r7
 8002546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800254a:	4770      	bx	lr
 800254c:	40000400 	.word	0x40000400

08002550 <LedControl_Init>:
 8002550:	b580      	push	{r7, lr}
 8002552:	af00      	add	r7, sp, #0
 8002554:	f000 fa74 	bl	8002a40 <LEDGPIO_Config>
 8002558:	f000 fabc 	bl	8002ad4 <LEDTIM_Config>
 800255c:	bf00      	nop
 800255e:	bd80      	pop	{r7, pc}

08002560 <LedControl_SetColorIndividual>:
 8002560:	b580      	push	{r7, lr}
 8002562:	b084      	sub	sp, #16
 8002564:	af00      	add	r7, sp, #0
 8002566:	4603      	mov	r3, r0
 8002568:	71fb      	strb	r3, [r7, #7]
 800256a:	460b      	mov	r3, r1
 800256c:	71bb      	strb	r3, [r7, #6]
 800256e:	4613      	mov	r3, r2
 8002570:	717b      	strb	r3, [r7, #5]
 8002572:	79fb      	ldrb	r3, [r7, #7]
 8002574:	2b02      	cmp	r3, #2
 8002576:	d85e      	bhi.n	8002636 <LedControl_SetColorIndividual+0xd6>
 8002578:	79bb      	ldrb	r3, [r7, #6]
 800257a:	2b00      	cmp	r3, #0
 800257c:	d005      	beq.n	800258a <LedControl_SetColorIndividual+0x2a>
 800257e:	79bb      	ldrb	r3, [r7, #6]
 8002580:	2b01      	cmp	r3, #1
 8002582:	d002      	beq.n	800258a <LedControl_SetColorIndividual+0x2a>
 8002584:	79bb      	ldrb	r3, [r7, #6]
 8002586:	2b02      	cmp	r3, #2
 8002588:	d155      	bne.n	8002636 <LedControl_SetColorIndividual+0xd6>
 800258a:	797b      	ldrb	r3, [r7, #5]
 800258c:	2b64      	cmp	r3, #100	@ 0x64
 800258e:	d852      	bhi.n	8002636 <LedControl_SetColorIndividual+0xd6>
 8002590:	797b      	ldrb	r3, [r7, #5]
 8002592:	2b00      	cmp	r3, #0
 8002594:	d103      	bne.n	800259e <LedControl_SetColorIndividual+0x3e>
 8002596:	4b2a      	ldr	r3, [pc, #168]	@ (8002640 <LedControl_SetColorIndividual+0xe0>)
 8002598:	2264      	movs	r2, #100	@ 0x64
 800259a:	701a      	strb	r2, [r3, #0]
 800259c:	e002      	b.n	80025a4 <LedControl_SetColorIndividual+0x44>
 800259e:	4a28      	ldr	r2, [pc, #160]	@ (8002640 <LedControl_SetColorIndividual+0xe0>)
 80025a0:	797b      	ldrb	r3, [r7, #5]
 80025a2:	7013      	strb	r3, [r2, #0]
 80025a4:	797b      	ldrb	r3, [r7, #5]
 80025a6:	4a27      	ldr	r2, [pc, #156]	@ (8002644 <LedControl_SetColorIndividual+0xe4>)
 80025a8:	6812      	ldr	r2, [r2, #0]
 80025aa:	4927      	ldr	r1, [pc, #156]	@ (8002648 <LedControl_SetColorIndividual+0xe8>)
 80025ac:	fba1 1202 	umull	r1, r2, r1, r2
 80025b0:	0b92      	lsrs	r2, r2, #14
 80025b2:	3a02      	subs	r2, #2
 80025b4:	fb02 f303 	mul.w	r3, r2, r3
 80025b8:	4a24      	ldr	r2, [pc, #144]	@ (800264c <LedControl_SetColorIndividual+0xec>)
 80025ba:	fba2 2303 	umull	r2, r3, r2, r3
 80025be:	095b      	lsrs	r3, r3, #5
 80025c0:	60fb      	str	r3, [r7, #12]
 80025c2:	79fb      	ldrb	r3, [r7, #7]
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d10c      	bne.n	80025e2 <LedControl_SetColorIndividual+0x82>
 80025c8:	797b      	ldrb	r3, [r7, #5]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d004      	beq.n	80025d8 <LedControl_SetColorIndividual+0x78>
 80025ce:	2120      	movs	r1, #32
 80025d0:	481f      	ldr	r0, [pc, #124]	@ (8002650 <LedControl_SetColorIndividual+0xf0>)
 80025d2:	f7ff fa0b 	bl	80019ec <GPIO_SetBits>
 80025d6:	e02f      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 80025d8:	2120      	movs	r1, #32
 80025da:	481d      	ldr	r0, [pc, #116]	@ (8002650 <LedControl_SetColorIndividual+0xf0>)
 80025dc:	f7ff fa15 	bl	8001a0a <GPIO_ResetBits>
 80025e0:	e02a      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 80025e2:	79fb      	ldrb	r3, [r7, #7]
 80025e4:	2b01      	cmp	r3, #1
 80025e6:	d114      	bne.n	8002612 <LedControl_SetColorIndividual+0xb2>
 80025e8:	79bb      	ldrb	r3, [r7, #6]
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d104      	bne.n	80025f8 <LedControl_SetColorIndividual+0x98>
 80025ee:	68f9      	ldr	r1, [r7, #12]
 80025f0:	4818      	ldr	r0, [pc, #96]	@ (8002654 <LedControl_SetColorIndividual+0xf4>)
 80025f2:	f003 ff05 	bl	8006400 <TIM_SetCompare1>
 80025f6:	e01f      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 80025f8:	79bb      	ldrb	r3, [r7, #6]
 80025fa:	2b01      	cmp	r3, #1
 80025fc:	d104      	bne.n	8002608 <LedControl_SetColorIndividual+0xa8>
 80025fe:	68f9      	ldr	r1, [r7, #12]
 8002600:	4814      	ldr	r0, [pc, #80]	@ (8002654 <LedControl_SetColorIndividual+0xf4>)
 8002602:	f003 ff27 	bl	8006454 <TIM_SetCompare4>
 8002606:	e017      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 8002608:	68f9      	ldr	r1, [r7, #12]
 800260a:	4812      	ldr	r0, [pc, #72]	@ (8002654 <LedControl_SetColorIndividual+0xf4>)
 800260c:	f003 ff14 	bl	8006438 <TIM_SetCompare3>
 8002610:	e012      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 8002612:	79bb      	ldrb	r3, [r7, #6]
 8002614:	2b00      	cmp	r3, #0
 8002616:	d105      	bne.n	8002624 <LedControl_SetColorIndividual+0xc4>
 8002618:	68f9      	ldr	r1, [r7, #12]
 800261a:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800261e:	f003 fefd 	bl	800641c <TIM_SetCompare2>
 8002622:	e009      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 8002624:	79bb      	ldrb	r3, [r7, #6]
 8002626:	2b01      	cmp	r3, #1
 8002628:	d106      	bne.n	8002638 <LedControl_SetColorIndividual+0xd8>
 800262a:	68f9      	ldr	r1, [r7, #12]
 800262c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002630:	f003 fee6 	bl	8006400 <TIM_SetCompare1>
 8002634:	e000      	b.n	8002638 <LedControl_SetColorIndividual+0xd8>
 8002636:	bf00      	nop
 8002638:	3710      	adds	r7, #16
 800263a:	46bd      	mov	sp, r7
 800263c:	bd80      	pop	{r7, pc}
 800263e:	bf00      	nop
 8002640:	20000348 	.word	0x20000348
 8002644:	20000004 	.word	0x20000004
 8002648:	eeb83a0d 	.word	0xeeb83a0d
 800264c:	51eb851f 	.word	0x51eb851f
 8002650:	40020000 	.word	0x40020000
 8002654:	40010000 	.word	0x40010000

08002658 <LedControl_SetColorGeneral>:
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
 800265e:	4603      	mov	r3, r0
 8002660:	71fb      	strb	r3, [r7, #7]
 8002662:	460b      	mov	r3, r1
 8002664:	71bb      	strb	r3, [r7, #6]
 8002666:	4613      	mov	r3, r2
 8002668:	717b      	strb	r3, [r7, #5]
 800266a:	79bb      	ldrb	r3, [r7, #6]
 800266c:	2b05      	cmp	r3, #5
 800266e:	f200 8081 	bhi.w	8002774 <LedControl_SetColorGeneral+0x11c>
 8002672:	a201      	add	r2, pc, #4	@ (adr r2, 8002678 <LedControl_SetColorGeneral+0x20>)
 8002674:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002678:	08002691 	.word	0x08002691
 800267c:	080026b7 	.word	0x080026b7
 8002680:	080026dd 	.word	0x080026dd
 8002684:	08002703 	.word	0x08002703
 8002688:	0800274f 	.word	0x0800274f
 800268c:	08002729 	.word	0x08002729
 8002690:	797a      	ldrb	r2, [r7, #5]
 8002692:	79fb      	ldrb	r3, [r7, #7]
 8002694:	2100      	movs	r1, #0
 8002696:	4618      	mov	r0, r3
 8002698:	f7ff ff62 	bl	8002560 <LedControl_SetColorIndividual>
 800269c:	79fb      	ldrb	r3, [r7, #7]
 800269e:	2200      	movs	r2, #0
 80026a0:	2102      	movs	r1, #2
 80026a2:	4618      	mov	r0, r3
 80026a4:	f7ff ff5c 	bl	8002560 <LedControl_SetColorIndividual>
 80026a8:	79fb      	ldrb	r3, [r7, #7]
 80026aa:	2200      	movs	r2, #0
 80026ac:	2101      	movs	r1, #1
 80026ae:	4618      	mov	r0, r3
 80026b0:	f7ff ff56 	bl	8002560 <LedControl_SetColorIndividual>
 80026b4:	e05f      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 80026b6:	797a      	ldrb	r2, [r7, #5]
 80026b8:	79fb      	ldrb	r3, [r7, #7]
 80026ba:	2101      	movs	r1, #1
 80026bc:	4618      	mov	r0, r3
 80026be:	f7ff ff4f 	bl	8002560 <LedControl_SetColorIndividual>
 80026c2:	79fb      	ldrb	r3, [r7, #7]
 80026c4:	2200      	movs	r2, #0
 80026c6:	2100      	movs	r1, #0
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7ff ff49 	bl	8002560 <LedControl_SetColorIndividual>
 80026ce:	79fb      	ldrb	r3, [r7, #7]
 80026d0:	2200      	movs	r2, #0
 80026d2:	2102      	movs	r1, #2
 80026d4:	4618      	mov	r0, r3
 80026d6:	f7ff ff43 	bl	8002560 <LedControl_SetColorIndividual>
 80026da:	e04c      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 80026dc:	797a      	ldrb	r2, [r7, #5]
 80026de:	79fb      	ldrb	r3, [r7, #7]
 80026e0:	2102      	movs	r1, #2
 80026e2:	4618      	mov	r0, r3
 80026e4:	f7ff ff3c 	bl	8002560 <LedControl_SetColorIndividual>
 80026e8:	79fb      	ldrb	r3, [r7, #7]
 80026ea:	2200      	movs	r2, #0
 80026ec:	2100      	movs	r1, #0
 80026ee:	4618      	mov	r0, r3
 80026f0:	f7ff ff36 	bl	8002560 <LedControl_SetColorIndividual>
 80026f4:	79fb      	ldrb	r3, [r7, #7]
 80026f6:	2200      	movs	r2, #0
 80026f8:	2101      	movs	r1, #1
 80026fa:	4618      	mov	r0, r3
 80026fc:	f7ff ff30 	bl	8002560 <LedControl_SetColorIndividual>
 8002700:	e039      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 8002702:	797a      	ldrb	r2, [r7, #5]
 8002704:	79fb      	ldrb	r3, [r7, #7]
 8002706:	2102      	movs	r1, #2
 8002708:	4618      	mov	r0, r3
 800270a:	f7ff ff29 	bl	8002560 <LedControl_SetColorIndividual>
 800270e:	797a      	ldrb	r2, [r7, #5]
 8002710:	79fb      	ldrb	r3, [r7, #7]
 8002712:	2100      	movs	r1, #0
 8002714:	4618      	mov	r0, r3
 8002716:	f7ff ff23 	bl	8002560 <LedControl_SetColorIndividual>
 800271a:	797a      	ldrb	r2, [r7, #5]
 800271c:	79fb      	ldrb	r3, [r7, #7]
 800271e:	2101      	movs	r1, #1
 8002720:	4618      	mov	r0, r3
 8002722:	f7ff ff1d 	bl	8002560 <LedControl_SetColorIndividual>
 8002726:	e026      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 8002728:	79fb      	ldrb	r3, [r7, #7]
 800272a:	2200      	movs	r2, #0
 800272c:	2102      	movs	r1, #2
 800272e:	4618      	mov	r0, r3
 8002730:	f7ff ff16 	bl	8002560 <LedControl_SetColorIndividual>
 8002734:	797a      	ldrb	r2, [r7, #5]
 8002736:	79fb      	ldrb	r3, [r7, #7]
 8002738:	2100      	movs	r1, #0
 800273a:	4618      	mov	r0, r3
 800273c:	f7ff ff10 	bl	8002560 <LedControl_SetColorIndividual>
 8002740:	797a      	ldrb	r2, [r7, #5]
 8002742:	79fb      	ldrb	r3, [r7, #7]
 8002744:	2101      	movs	r1, #1
 8002746:	4618      	mov	r0, r3
 8002748:	f7ff ff0a 	bl	8002560 <LedControl_SetColorIndividual>
 800274c:	e013      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 800274e:	79fb      	ldrb	r3, [r7, #7]
 8002750:	2200      	movs	r2, #0
 8002752:	2102      	movs	r1, #2
 8002754:	4618      	mov	r0, r3
 8002756:	f7ff ff03 	bl	8002560 <LedControl_SetColorIndividual>
 800275a:	79fb      	ldrb	r3, [r7, #7]
 800275c:	2200      	movs	r2, #0
 800275e:	2100      	movs	r1, #0
 8002760:	4618      	mov	r0, r3
 8002762:	f7ff fefd 	bl	8002560 <LedControl_SetColorIndividual>
 8002766:	79fb      	ldrb	r3, [r7, #7]
 8002768:	2200      	movs	r2, #0
 800276a:	2101      	movs	r1, #1
 800276c:	4618      	mov	r0, r3
 800276e:	f7ff fef7 	bl	8002560 <LedControl_SetColorIndividual>
 8002772:	e000      	b.n	8002776 <LedControl_SetColorGeneral+0x11e>
 8002774:	bf00      	nop
 8002776:	bf00      	nop
 8002778:	3708      	adds	r7, #8
 800277a:	46bd      	mov	sp, r7
 800277c:	bd80      	pop	{r7, pc}
 800277e:	bf00      	nop

08002780 <LedGetAllLastState>:
 8002780:	b480      	push	{r7}
 8002782:	af00      	add	r7, sp, #0
 8002784:	bf00      	nop
 8002786:	46bd      	mov	sp, r7
 8002788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278c:	4770      	bx	lr
	...

08002790 <LedToggle>:
 8002790:	b580      	push	{r7, lr}
 8002792:	b084      	sub	sp, #16
 8002794:	af00      	add	r7, sp, #0
 8002796:	4603      	mov	r3, r0
 8002798:	460a      	mov	r2, r1
 800279a:	71fb      	strb	r3, [r7, #7]
 800279c:	4613      	mov	r3, r2
 800279e:	71bb      	strb	r3, [r7, #6]
 80027a0:	79fb      	ldrb	r3, [r7, #7]
 80027a2:	2b03      	cmp	r3, #3
 80027a4:	d838      	bhi.n	8002818 <LedToggle+0x88>
 80027a6:	79fb      	ldrb	r3, [r7, #7]
 80027a8:	2b03      	cmp	r3, #3
 80027aa:	d11a      	bne.n	80027e2 <LedToggle+0x52>
 80027ac:	4b1c      	ldr	r3, [pc, #112]	@ (8002820 <LedToggle+0x90>)
 80027ae:	781b      	ldrb	r3, [r3, #0]
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	d103      	bne.n	80027bc <LedToggle+0x2c>
 80027b4:	4b1b      	ldr	r3, [pc, #108]	@ (8002824 <LedToggle+0x94>)
 80027b6:	781b      	ldrb	r3, [r3, #0]
 80027b8:	73fb      	strb	r3, [r7, #15]
 80027ba:	e001      	b.n	80027c0 <LedToggle+0x30>
 80027bc:	2300      	movs	r3, #0
 80027be:	73fb      	strb	r3, [r7, #15]
 80027c0:	4b17      	ldr	r3, [pc, #92]	@ (8002820 <LedToggle+0x90>)
 80027c2:	781b      	ldrb	r3, [r3, #0]
 80027c4:	2b00      	cmp	r3, #0
 80027c6:	bf0c      	ite	eq
 80027c8:	2301      	moveq	r3, #1
 80027ca:	2300      	movne	r3, #0
 80027cc:	b2db      	uxtb	r3, r3
 80027ce:	461a      	mov	r2, r3
 80027d0:	4b13      	ldr	r3, [pc, #76]	@ (8002820 <LedToggle+0x90>)
 80027d2:	701a      	strb	r2, [r3, #0]
 80027d4:	7bfa      	ldrb	r2, [r7, #15]
 80027d6:	79bb      	ldrb	r3, [r7, #6]
 80027d8:	4611      	mov	r1, r2
 80027da:	4618      	mov	r0, r3
 80027dc:	f000 f8f8 	bl	80029d0 <LedControl_SetAllColor>
 80027e0:	e01b      	b.n	800281a <LedToggle+0x8a>
 80027e2:	4b11      	ldr	r3, [pc, #68]	@ (8002828 <LedToggle+0x98>)
 80027e4:	781b      	ldrb	r3, [r3, #0]
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d103      	bne.n	80027f2 <LedToggle+0x62>
 80027ea:	4b0e      	ldr	r3, [pc, #56]	@ (8002824 <LedToggle+0x94>)
 80027ec:	781b      	ldrb	r3, [r3, #0]
 80027ee:	73fb      	strb	r3, [r7, #15]
 80027f0:	e001      	b.n	80027f6 <LedToggle+0x66>
 80027f2:	2300      	movs	r3, #0
 80027f4:	73fb      	strb	r3, [r7, #15]
 80027f6:	4b0c      	ldr	r3, [pc, #48]	@ (8002828 <LedToggle+0x98>)
 80027f8:	781b      	ldrb	r3, [r3, #0]
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	bf0c      	ite	eq
 80027fe:	2301      	moveq	r3, #1
 8002800:	2300      	movne	r3, #0
 8002802:	b2db      	uxtb	r3, r3
 8002804:	461a      	mov	r2, r3
 8002806:	4b08      	ldr	r3, [pc, #32]	@ (8002828 <LedToggle+0x98>)
 8002808:	701a      	strb	r2, [r3, #0]
 800280a:	7bfa      	ldrb	r2, [r7, #15]
 800280c:	79b9      	ldrb	r1, [r7, #6]
 800280e:	79fb      	ldrb	r3, [r7, #7]
 8002810:	4618      	mov	r0, r3
 8002812:	f7ff ff21 	bl	8002658 <LedControl_SetColorGeneral>
 8002816:	e000      	b.n	800281a <LedToggle+0x8a>
 8002818:	bf00      	nop
 800281a:	3710      	adds	r7, #16
 800281c:	46bd      	mov	sp, r7
 800281e:	bd80      	pop	{r7, pc}
 8002820:	20000349 	.word	0x20000349
 8002824:	20000348 	.word	0x20000348
 8002828:	2000034a 	.word	0x2000034a

0800282c <pFuncBlink>:
 800282c:	b580      	push	{r7, lr}
 800282e:	b084      	sub	sp, #16
 8002830:	af00      	add	r7, sp, #0
 8002832:	6078      	str	r0, [r7, #4]
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	60fb      	str	r3, [r7, #12]
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	791b      	ldrb	r3, [r3, #4]
 800283c:	2b00      	cmp	r3, #0
 800283e:	d103      	bne.n	8002848 <pFuncBlink+0x1c>
 8002840:	68f8      	ldr	r0, [r7, #12]
 8002842:	f000 f84b 	bl	80028dc <BlinkStop>
 8002846:	e043      	b.n	80028d0 <pFuncBlink+0xa4>
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	791b      	ldrb	r3, [r3, #4]
 800284c:	2bff      	cmp	r3, #255	@ 0xff
 800284e:	d009      	beq.n	8002864 <pFuncBlink+0x38>
 8002850:	68fb      	ldr	r3, [r7, #12]
 8002852:	791b      	ldrb	r3, [r3, #4]
 8002854:	2b00      	cmp	r3, #0
 8002856:	d005      	beq.n	8002864 <pFuncBlink+0x38>
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	791b      	ldrb	r3, [r3, #4]
 800285c:	3b01      	subs	r3, #1
 800285e:	b2da      	uxtb	r2, r3
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	711a      	strb	r2, [r3, #4]
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	78db      	ldrb	r3, [r3, #3]
 8002868:	2b03      	cmp	r3, #3
 800286a:	d830      	bhi.n	80028ce <pFuncBlink+0xa2>
 800286c:	a201      	add	r2, pc, #4	@ (adr r2, 8002874 <pFuncBlink+0x48>)
 800286e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002872:	bf00      	nop
 8002874:	08002885 	.word	0x08002885
 8002878:	080028a1 	.word	0x080028a1
 800287c:	08002893 	.word	0x08002893
 8002880:	080028af 	.word	0x080028af
 8002884:	68fb      	ldr	r3, [r7, #12]
 8002886:	789b      	ldrb	r3, [r3, #2]
 8002888:	2100      	movs	r1, #0
 800288a:	4618      	mov	r0, r3
 800288c:	f7ff ff80 	bl	8002790 <LedToggle>
 8002890:	e014      	b.n	80028bc <pFuncBlink+0x90>
 8002892:	68fb      	ldr	r3, [r7, #12]
 8002894:	789b      	ldrb	r3, [r3, #2]
 8002896:	2101      	movs	r1, #1
 8002898:	4618      	mov	r0, r3
 800289a:	f7ff ff79 	bl	8002790 <LedToggle>
 800289e:	e00d      	b.n	80028bc <pFuncBlink+0x90>
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	789b      	ldrb	r3, [r3, #2]
 80028a4:	2102      	movs	r1, #2
 80028a6:	4618      	mov	r0, r3
 80028a8:	f7ff ff72 	bl	8002790 <LedToggle>
 80028ac:	e006      	b.n	80028bc <pFuncBlink+0x90>
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	789b      	ldrb	r3, [r3, #2]
 80028b2:	2103      	movs	r1, #3
 80028b4:	4618      	mov	r0, r3
 80028b6:	f7ff ff6b 	bl	8002790 <LedToggle>
 80028ba:	bf00      	nop
 80028bc:	4b06      	ldr	r3, [pc, #24]	@ (80028d8 <pFuncBlink+0xac>)
 80028be:	781a      	ldrb	r2, [r3, #0]
 80028c0:	68fb      	ldr	r3, [r7, #12]
 80028c2:	795b      	ldrb	r3, [r3, #5]
 80028c4:	4619      	mov	r1, r3
 80028c6:	4610      	mov	r0, r2
 80028c8:	f000 fa98 	bl	8002dfc <TimerChangePeriod>
 80028cc:	e000      	b.n	80028d0 <pFuncBlink+0xa4>
 80028ce:	bf00      	nop
 80028d0:	3710      	adds	r7, #16
 80028d2:	46bd      	mov	sp, r7
 80028d4:	bd80      	pop	{r7, pc}
 80028d6:	bf00      	nop
 80028d8:	20000034 	.word	0x20000034

080028dc <BlinkStop>:
 80028dc:	b580      	push	{r7, lr}
 80028de:	b082      	sub	sp, #8
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
 80028e4:	4b19      	ldr	r3, [pc, #100]	@ (800294c <BlinkStop+0x70>)
 80028e6:	781b      	ldrb	r3, [r3, #0]
 80028e8:	2bff      	cmp	r3, #255	@ 0xff
 80028ea:	d007      	beq.n	80028fc <BlinkStop+0x20>
 80028ec:	4b17      	ldr	r3, [pc, #92]	@ (800294c <BlinkStop+0x70>)
 80028ee:	781b      	ldrb	r3, [r3, #0]
 80028f0:	4618      	mov	r0, r3
 80028f2:	f000 fa9f 	bl	8002e34 <TimerStop>
 80028f6:	4b15      	ldr	r3, [pc, #84]	@ (800294c <BlinkStop+0x70>)
 80028f8:	22ff      	movs	r2, #255	@ 0xff
 80028fa:	701a      	strb	r2, [r3, #0]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	789b      	ldrb	r3, [r3, #2]
 8002900:	2b03      	cmp	r3, #3
 8002902:	d106      	bne.n	8002912 <BlinkStop+0x36>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	799b      	ldrb	r3, [r3, #6]
 8002908:	2bff      	cmp	r3, #255	@ 0xff
 800290a:	d112      	bne.n	8002932 <BlinkStop+0x56>
 800290c:	f7ff ff38 	bl	8002780 <LedGetAllLastState>
 8002910:	e00f      	b.n	8002932 <BlinkStop+0x56>
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	799b      	ldrb	r3, [r3, #6]
 8002916:	2bff      	cmp	r3, #255	@ 0xff
 8002918:	d102      	bne.n	8002920 <BlinkStop+0x44>
 800291a:	f7ff ff31 	bl	8002780 <LedGetAllLastState>
 800291e:	e008      	b.n	8002932 <BlinkStop+0x56>
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	7898      	ldrb	r0, [r3, #2]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	7999      	ldrb	r1, [r3, #6]
 8002928:	4b09      	ldr	r3, [pc, #36]	@ (8002950 <BlinkStop+0x74>)
 800292a:	781b      	ldrb	r3, [r3, #0]
 800292c:	461a      	mov	r2, r3
 800292e:	f7ff fe93 	bl	8002658 <LedControl_SetColorGeneral>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	2200      	movs	r2, #0
 8002936:	711a      	strb	r2, [r3, #4]
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	2204      	movs	r2, #4
 800293c:	70da      	strb	r2, [r3, #3]
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	2200      	movs	r2, #0
 8002942:	715a      	strb	r2, [r3, #5]
 8002944:	bf00      	nop
 8002946:	3708      	adds	r7, #8
 8002948:	46bd      	mov	sp, r7
 800294a:	bd80      	pop	{r7, pc}
 800294c:	20000034 	.word	0x20000034
 8002950:	20000348 	.word	0x20000348

08002954 <LedControl_BlinkStart>:
 8002954:	b590      	push	{r4, r7, lr}
 8002956:	b085      	sub	sp, #20
 8002958:	af02      	add	r7, sp, #8
 800295a:	4604      	mov	r4, r0
 800295c:	4608      	mov	r0, r1
 800295e:	4611      	mov	r1, r2
 8002960:	461a      	mov	r2, r3
 8002962:	4623      	mov	r3, r4
 8002964:	71fb      	strb	r3, [r7, #7]
 8002966:	4603      	mov	r3, r0
 8002968:	71bb      	strb	r3, [r7, #6]
 800296a:	460b      	mov	r3, r1
 800296c:	717b      	strb	r3, [r7, #5]
 800296e:	4613      	mov	r3, r2
 8002970:	807b      	strh	r3, [r7, #2]
 8002972:	79fb      	ldrb	r3, [r7, #7]
 8002974:	2b03      	cmp	r3, #3
 8002976:	d81f      	bhi.n	80029b8 <LedControl_BlinkStart+0x64>
 8002978:	79bb      	ldrb	r3, [r7, #6]
 800297a:	2b03      	cmp	r3, #3
 800297c:	d81c      	bhi.n	80029b8 <LedControl_BlinkStart+0x64>
 800297e:	4a10      	ldr	r2, [pc, #64]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 8002980:	79fb      	ldrb	r3, [r7, #7]
 8002982:	7093      	strb	r3, [r2, #2]
 8002984:	4a0e      	ldr	r2, [pc, #56]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 8002986:	79bb      	ldrb	r3, [r7, #6]
 8002988:	70d3      	strb	r3, [r2, #3]
 800298a:	4a0d      	ldr	r2, [pc, #52]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 800298c:	797b      	ldrb	r3, [r7, #5]
 800298e:	7113      	strb	r3, [r2, #4]
 8002990:	887b      	ldrh	r3, [r7, #2]
 8002992:	b2da      	uxtb	r2, r3
 8002994:	4b0a      	ldr	r3, [pc, #40]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 8002996:	715a      	strb	r2, [r3, #5]
 8002998:	4a09      	ldr	r2, [pc, #36]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 800299a:	7e3b      	ldrb	r3, [r7, #24]
 800299c:	7193      	strb	r3, [r2, #6]
 800299e:	4b08      	ldr	r3, [pc, #32]	@ (80029c0 <LedControl_BlinkStart+0x6c>)
 80029a0:	9300      	str	r3, [sp, #0]
 80029a2:	4b08      	ldr	r3, [pc, #32]	@ (80029c4 <LedControl_BlinkStart+0x70>)
 80029a4:	22ff      	movs	r2, #255	@ 0xff
 80029a6:	2101      	movs	r1, #1
 80029a8:	4807      	ldr	r0, [pc, #28]	@ (80029c8 <LedControl_BlinkStart+0x74>)
 80029aa:	f000 f9c5 	bl	8002d38 <TimerStart>
 80029ae:	4603      	mov	r3, r0
 80029b0:	461a      	mov	r2, r3
 80029b2:	4b06      	ldr	r3, [pc, #24]	@ (80029cc <LedControl_BlinkStart+0x78>)
 80029b4:	701a      	strb	r2, [r3, #0]
 80029b6:	e000      	b.n	80029ba <LedControl_BlinkStart+0x66>
 80029b8:	bf00      	nop
 80029ba:	370c      	adds	r7, #12
 80029bc:	46bd      	mov	sp, r7
 80029be:	bd90      	pop	{r4, r7, pc}
 80029c0:	20000340 	.word	0x20000340
 80029c4:	0800282d 	.word	0x0800282d
 80029c8:	08007d70 	.word	0x08007d70
 80029cc:	20000034 	.word	0x20000034

080029d0 <LedControl_SetAllColor>:
 80029d0:	b580      	push	{r7, lr}
 80029d2:	b084      	sub	sp, #16
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	4603      	mov	r3, r0
 80029d8:	460a      	mov	r2, r1
 80029da:	71fb      	strb	r3, [r7, #7]
 80029dc:	4613      	mov	r3, r2
 80029de:	71bb      	strb	r3, [r7, #6]
 80029e0:	2300      	movs	r3, #0
 80029e2:	73fb      	strb	r3, [r7, #15]
 80029e4:	e008      	b.n	80029f8 <LedControl_SetAllColor+0x28>
 80029e6:	79ba      	ldrb	r2, [r7, #6]
 80029e8:	79f9      	ldrb	r1, [r7, #7]
 80029ea:	7bfb      	ldrb	r3, [r7, #15]
 80029ec:	4618      	mov	r0, r3
 80029ee:	f7ff fe33 	bl	8002658 <LedControl_SetColorGeneral>
 80029f2:	7bfb      	ldrb	r3, [r7, #15]
 80029f4:	3301      	adds	r3, #1
 80029f6:	73fb      	strb	r3, [r7, #15]
 80029f8:	7bfb      	ldrb	r3, [r7, #15]
 80029fa:	2b02      	cmp	r3, #2
 80029fc:	d9f3      	bls.n	80029e6 <LedControl_SetAllColor+0x16>
 80029fe:	bf00      	nop
 8002a00:	3710      	adds	r7, #16
 8002a02:	46bd      	mov	sp, r7
 8002a04:	bd80      	pop	{r7, pc}

08002a06 <LedControl_SendPacketRespond>:
 8002a06:	b580      	push	{r7, lr}
 8002a08:	b086      	sub	sp, #24
 8002a0a:	af02      	add	r7, sp, #8
 8002a0c:	4603      	mov	r3, r0
 8002a0e:	71fb      	strb	r3, [r7, #7]
 8002a10:	460b      	mov	r3, r1
 8002a12:	71bb      	strb	r3, [r7, #6]
 8002a14:	4613      	mov	r3, r2
 8002a16:	717b      	strb	r3, [r7, #5]
 8002a18:	79fb      	ldrb	r3, [r7, #7]
 8002a1a:	733b      	strb	r3, [r7, #12]
 8002a1c:	79bb      	ldrb	r3, [r7, #6]
 8002a1e:	737b      	strb	r3, [r7, #13]
 8002a20:	797b      	ldrb	r3, [r7, #5]
 8002a22:	73bb      	strb	r3, [r7, #14]
 8002a24:	f107 020c 	add.w	r2, r7, #12
 8002a28:	2303      	movs	r3, #3
 8002a2a:	9300      	str	r3, [sp, #0]
 8002a2c:	4613      	mov	r3, r2
 8002a2e:	2202      	movs	r2, #2
 8002a30:	2101      	movs	r1, #1
 8002a32:	2000      	movs	r0, #0
 8002a34:	f000 fe5a 	bl	80036ec <Serial_SendPacket>
 8002a38:	bf00      	nop
 8002a3a:	3710      	adds	r7, #16
 8002a3c:	46bd      	mov	sp, r7
 8002a3e:	bd80      	pop	{r7, pc}

08002a40 <LEDGPIO_Config>:
 8002a40:	b580      	push	{r7, lr}
 8002a42:	b082      	sub	sp, #8
 8002a44:	af00      	add	r7, sp, #0
 8002a46:	2101      	movs	r1, #1
 8002a48:	2003      	movs	r0, #3
 8002a4a:	f7ff f8f7 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 8002a4e:	f640 4303 	movw	r3, #3075	@ 0xc03
 8002a52:	603b      	str	r3, [r7, #0]
 8002a54:	2302      	movs	r3, #2
 8002a56:	713b      	strb	r3, [r7, #4]
 8002a58:	2303      	movs	r3, #3
 8002a5a:	717b      	strb	r3, [r7, #5]
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	71bb      	strb	r3, [r7, #6]
 8002a60:	2301      	movs	r3, #1
 8002a62:	71fb      	strb	r3, [r7, #7]
 8002a64:	463b      	mov	r3, r7
 8002a66:	4619      	mov	r1, r3
 8002a68:	4818      	ldr	r0, [pc, #96]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002a6a:	f7fe ff17 	bl	800189c <GPIO_Init>
 8002a6e:	2201      	movs	r2, #1
 8002a70:	2100      	movs	r1, #0
 8002a72:	4816      	ldr	r0, [pc, #88]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002a74:	f7fe fff0 	bl	8001a58 <GPIO_PinAFConfig>
 8002a78:	2201      	movs	r2, #1
 8002a7a:	2101      	movs	r1, #1
 8002a7c:	4813      	ldr	r0, [pc, #76]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002a7e:	f7fe ffeb 	bl	8001a58 <GPIO_PinAFConfig>
 8002a82:	2201      	movs	r2, #1
 8002a84:	210b      	movs	r1, #11
 8002a86:	4811      	ldr	r0, [pc, #68]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002a88:	f7fe ffe6 	bl	8001a58 <GPIO_PinAFConfig>
 8002a8c:	2201      	movs	r2, #1
 8002a8e:	210a      	movs	r1, #10
 8002a90:	480e      	ldr	r0, [pc, #56]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002a92:	f7fe ffe1 	bl	8001a58 <GPIO_PinAFConfig>
 8002a96:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002a9a:	603b      	str	r3, [r7, #0]
 8002a9c:	463b      	mov	r3, r7
 8002a9e:	4619      	mov	r1, r3
 8002aa0:	480b      	ldr	r0, [pc, #44]	@ (8002ad0 <LEDGPIO_Config+0x90>)
 8002aa2:	f7fe fefb 	bl	800189c <GPIO_Init>
 8002aa6:	2201      	movs	r2, #1
 8002aa8:	210d      	movs	r1, #13
 8002aaa:	4809      	ldr	r0, [pc, #36]	@ (8002ad0 <LEDGPIO_Config+0x90>)
 8002aac:	f7fe ffd4 	bl	8001a58 <GPIO_PinAFConfig>
 8002ab0:	2320      	movs	r3, #32
 8002ab2:	603b      	str	r3, [r7, #0]
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	713b      	strb	r3, [r7, #4]
 8002ab8:	463b      	mov	r3, r7
 8002aba:	4619      	mov	r1, r3
 8002abc:	4803      	ldr	r0, [pc, #12]	@ (8002acc <LEDGPIO_Config+0x8c>)
 8002abe:	f7fe feed 	bl	800189c <GPIO_Init>
 8002ac2:	bf00      	nop
 8002ac4:	3708      	adds	r7, #8
 8002ac6:	46bd      	mov	sp, r7
 8002ac8:	bd80      	pop	{r7, pc}
 8002aca:	bf00      	nop
 8002acc:	40020000 	.word	0x40020000
 8002ad0:	40020400 	.word	0x40020400

08002ad4 <LEDTIM_Config>:
 8002ad4:	b580      	push	{r7, lr}
 8002ad6:	b08a      	sub	sp, #40	@ 0x28
 8002ad8:	af00      	add	r7, sp, #0
 8002ada:	2300      	movs	r3, #0
 8002adc:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002ade:	2300      	movs	r3, #0
 8002ae0:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8002ae2:	2101      	movs	r1, #1
 8002ae4:	2001      	movs	r0, #1
 8002ae6:	f7ff f8e9 	bl	8001cbc <RCC_APB2PeriphClockCmd>
 8002aea:	2101      	movs	r1, #1
 8002aec:	2001      	movs	r0, #1
 8002aee:	f7ff f8c5 	bl	8001c7c <RCC_APB1PeriphClockCmd>
 8002af2:	2300      	movs	r3, #0
 8002af4:	833b      	strh	r3, [r7, #24]
 8002af6:	2300      	movs	r3, #0
 8002af8:	837b      	strh	r3, [r7, #26]
 8002afa:	4b2e      	ldr	r3, [pc, #184]	@ (8002bb4 <LEDTIM_Config+0xe0>)
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	4a2e      	ldr	r2, [pc, #184]	@ (8002bb8 <LEDTIM_Config+0xe4>)
 8002b00:	fba2 2303 	umull	r2, r3, r2, r3
 8002b04:	0b9b      	lsrs	r3, r3, #14
 8002b06:	3b01      	subs	r3, #1
 8002b08:	61fb      	str	r3, [r7, #28]
 8002b0a:	2300      	movs	r3, #0
 8002b0c:	843b      	strh	r3, [r7, #32]
 8002b0e:	2300      	movs	r3, #0
 8002b10:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8002b14:	f107 0318 	add.w	r3, r7, #24
 8002b18:	4619      	mov	r1, r3
 8002b1a:	4828      	ldr	r0, [pc, #160]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b1c:	f003 f9f4 	bl	8005f08 <TIM_TimeBaseInit>
 8002b20:	f107 0318 	add.w	r3, r7, #24
 8002b24:	4619      	mov	r1, r3
 8002b26:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002b2a:	f003 f9ed 	bl	8005f08 <TIM_TimeBaseInit>
 8002b2e:	2370      	movs	r3, #112	@ 0x70
 8002b30:	80bb      	strh	r3, [r7, #4]
 8002b32:	2301      	movs	r3, #1
 8002b34:	80fb      	strh	r3, [r7, #6]
 8002b36:	2304      	movs	r3, #4
 8002b38:	813b      	strh	r3, [r7, #8]
 8002b3a:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8002b3c:	60fb      	str	r3, [r7, #12]
 8002b3e:	2302      	movs	r3, #2
 8002b40:	823b      	strh	r3, [r7, #16]
 8002b42:	2300      	movs	r3, #0
 8002b44:	827b      	strh	r3, [r7, #18]
 8002b46:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002b4a:	82bb      	strh	r3, [r7, #20]
 8002b4c:	2300      	movs	r3, #0
 8002b4e:	82fb      	strh	r3, [r7, #22]
 8002b50:	1d3b      	adds	r3, r7, #4
 8002b52:	4619      	mov	r1, r3
 8002b54:	4819      	ldr	r0, [pc, #100]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b56:	f003 fa63 	bl	8006020 <TIM_OC1Init>
 8002b5a:	1d3b      	adds	r3, r7, #4
 8002b5c:	4619      	mov	r1, r3
 8002b5e:	4817      	ldr	r0, [pc, #92]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b60:	f003 fb60 	bl	8006224 <TIM_OC3Init>
 8002b64:	1d3b      	adds	r3, r7, #4
 8002b66:	4619      	mov	r1, r3
 8002b68:	4814      	ldr	r0, [pc, #80]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b6a:	f003 fbe1 	bl	8006330 <TIM_OC4Init>
 8002b6e:	1d3b      	adds	r3, r7, #4
 8002b70:	4619      	mov	r1, r3
 8002b72:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002b76:	f003 fa53 	bl	8006020 <TIM_OC1Init>
 8002b7a:	1d3b      	adds	r3, r7, #4
 8002b7c:	4619      	mov	r1, r3
 8002b7e:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002b82:	f003 fac7 	bl	8006114 <TIM_OC2Init>
 8002b86:	2101      	movs	r1, #1
 8002b88:	480c      	ldr	r0, [pc, #48]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b8a:	f003 fa29 	bl	8005fe0 <TIM_Cmd>
 8002b8e:	2101      	movs	r1, #1
 8002b90:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002b94:	f003 fa24 	bl	8005fe0 <TIM_Cmd>
 8002b98:	2101      	movs	r1, #1
 8002b9a:	4808      	ldr	r0, [pc, #32]	@ (8002bbc <LEDTIM_Config+0xe8>)
 8002b9c:	f003 fc68 	bl	8006470 <TIM_CtrlPWMOutputs>
 8002ba0:	2101      	movs	r1, #1
 8002ba2:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002ba6:	f003 fc63 	bl	8006470 <TIM_CtrlPWMOutputs>
 8002baa:	bf00      	nop
 8002bac:	3728      	adds	r7, #40	@ 0x28
 8002bae:	46bd      	mov	sp, r7
 8002bb0:	bd80      	pop	{r7, pc}
 8002bb2:	bf00      	nop
 8002bb4:	20000004 	.word	0x20000004
 8002bb8:	eeb83a0d 	.word	0xeeb83a0d
 8002bbc:	40010000 	.word	0x40010000

08002bc0 <EventSchedulerInit>:
 8002bc0:	b580      	push	{r7, lr}
 8002bc2:	b082      	sub	sp, #8
 8002bc4:	af00      	add	r7, sp, #0
 8002bc6:	6078      	str	r0, [r7, #4]
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	2b00      	cmp	r3, #0
 8002bcc:	d009      	beq.n	8002be2 <EventSchedulerInit+0x22>
 8002bce:	4a07      	ldr	r2, [pc, #28]	@ (8002bec <EventSchedulerInit+0x2c>)
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6013      	str	r3, [r2, #0]
 8002bd4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002bd8:	2201      	movs	r2, #1
 8002bda:	4905      	ldr	r1, [pc, #20]	@ (8002bf0 <EventSchedulerInit+0x30>)
 8002bdc:	4805      	ldr	r0, [pc, #20]	@ (8002bf4 <EventSchedulerInit+0x34>)
 8002bde:	f002 fb29 	bl	8005234 <bufInit>
 8002be2:	bf00      	nop
 8002be4:	3708      	adds	r7, #8
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bd80      	pop	{r7, pc}
 8002bea:	bf00      	nop
 8002bec:	2000034c 	.word	0x2000034c
 8002bf0:	20000450 	.word	0x20000450
 8002bf4:	20000350 	.word	0x20000350

08002bf8 <EventSchedulerAdd>:
 8002bf8:	b580      	push	{r7, lr}
 8002bfa:	b082      	sub	sp, #8
 8002bfc:	af00      	add	r7, sp, #0
 8002bfe:	4603      	mov	r3, r0
 8002c00:	71fb      	strb	r3, [r7, #7]
 8002c02:	1dfb      	adds	r3, r7, #7
 8002c04:	4619      	mov	r1, r3
 8002c06:	4806      	ldr	r0, [pc, #24]	@ (8002c20 <EventSchedulerAdd+0x28>)
 8002c08:	f002 fb7a 	bl	8005300 <bufEnDat>
 8002c0c:	4603      	mov	r3, r0
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d101      	bne.n	8002c16 <EventSchedulerAdd+0x1e>
 8002c12:	2301      	movs	r3, #1
 8002c14:	e000      	b.n	8002c18 <EventSchedulerAdd+0x20>
 8002c16:	2300      	movs	r3, #0
 8002c18:	4618      	mov	r0, r3
 8002c1a:	3708      	adds	r7, #8
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	bd80      	pop	{r7, pc}
 8002c20:	20000450 	.word	0x20000450

08002c24 <processEventScheduler>:
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b082      	sub	sp, #8
 8002c28:	af00      	add	r7, sp, #0
 8002c2a:	4b0a      	ldr	r3, [pc, #40]	@ (8002c54 <processEventScheduler+0x30>)
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d00c      	beq.n	8002c4c <processEventScheduler+0x28>
 8002c32:	1dfb      	adds	r3, r7, #7
 8002c34:	4619      	mov	r1, r3
 8002c36:	4808      	ldr	r0, [pc, #32]	@ (8002c58 <processEventScheduler+0x34>)
 8002c38:	f002 fbb0 	bl	800539c <bufDeDat>
 8002c3c:	4603      	mov	r3, r0
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d104      	bne.n	8002c4c <processEventScheduler+0x28>
 8002c42:	4b04      	ldr	r3, [pc, #16]	@ (8002c54 <processEventScheduler+0x30>)
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	79fa      	ldrb	r2, [r7, #7]
 8002c48:	4610      	mov	r0, r2
 8002c4a:	4798      	blx	r3
 8002c4c:	bf00      	nop
 8002c4e:	3708      	adds	r7, #8
 8002c50:	46bd      	mov	sp, r7
 8002c52:	bd80      	pop	{r7, pc}
 8002c54:	2000034c 	.word	0x2000034c
 8002c58:	20000450 	.word	0x20000450

08002c5c <NVIC_SetPriority>:
 8002c5c:	b480      	push	{r7}
 8002c5e:	b083      	sub	sp, #12
 8002c60:	af00      	add	r7, sp, #0
 8002c62:	4603      	mov	r3, r0
 8002c64:	6039      	str	r1, [r7, #0]
 8002c66:	71fb      	strb	r3, [r7, #7]
 8002c68:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	da0b      	bge.n	8002c88 <NVIC_SetPriority+0x2c>
 8002c70:	683b      	ldr	r3, [r7, #0]
 8002c72:	b2da      	uxtb	r2, r3
 8002c74:	490c      	ldr	r1, [pc, #48]	@ (8002ca8 <NVIC_SetPriority+0x4c>)
 8002c76:	79fb      	ldrb	r3, [r7, #7]
 8002c78:	f003 030f 	and.w	r3, r3, #15
 8002c7c:	3b04      	subs	r3, #4
 8002c7e:	0112      	lsls	r2, r2, #4
 8002c80:	b2d2      	uxtb	r2, r2
 8002c82:	440b      	add	r3, r1
 8002c84:	761a      	strb	r2, [r3, #24]
 8002c86:	e009      	b.n	8002c9c <NVIC_SetPriority+0x40>
 8002c88:	683b      	ldr	r3, [r7, #0]
 8002c8a:	b2da      	uxtb	r2, r3
 8002c8c:	4907      	ldr	r1, [pc, #28]	@ (8002cac <NVIC_SetPriority+0x50>)
 8002c8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c92:	0112      	lsls	r2, r2, #4
 8002c94:	b2d2      	uxtb	r2, r2
 8002c96:	440b      	add	r3, r1
 8002c98:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002c9c:	bf00      	nop
 8002c9e:	370c      	adds	r7, #12
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca6:	4770      	bx	lr
 8002ca8:	e000ed00 	.word	0xe000ed00
 8002cac:	e000e100 	.word	0xe000e100

08002cb0 <SysTick_Config>:
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b082      	sub	sp, #8
 8002cb4:	af00      	add	r7, sp, #0
 8002cb6:	6078      	str	r0, [r7, #4]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	3b01      	subs	r3, #1
 8002cbc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002cc0:	d301      	bcc.n	8002cc6 <SysTick_Config+0x16>
 8002cc2:	2301      	movs	r3, #1
 8002cc4:	e00f      	b.n	8002ce6 <SysTick_Config+0x36>
 8002cc6:	4a0a      	ldr	r2, [pc, #40]	@ (8002cf0 <SysTick_Config+0x40>)
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	3b01      	subs	r3, #1
 8002ccc:	6053      	str	r3, [r2, #4]
 8002cce:	210f      	movs	r1, #15
 8002cd0:	f04f 30ff 	mov.w	r0, #4294967295
 8002cd4:	f7ff ffc2 	bl	8002c5c <NVIC_SetPriority>
 8002cd8:	4b05      	ldr	r3, [pc, #20]	@ (8002cf0 <SysTick_Config+0x40>)
 8002cda:	2200      	movs	r2, #0
 8002cdc:	609a      	str	r2, [r3, #8]
 8002cde:	4b04      	ldr	r3, [pc, #16]	@ (8002cf0 <SysTick_Config+0x40>)
 8002ce0:	2207      	movs	r2, #7
 8002ce2:	601a      	str	r2, [r3, #0]
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	3708      	adds	r7, #8
 8002cea:	46bd      	mov	sp, r7
 8002cec:	bd80      	pop	{r7, pc}
 8002cee:	bf00      	nop
 8002cf0:	e000e010 	.word	0xe000e010

08002cf4 <TimerInit>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	463b      	mov	r3, r7
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	f7fe fef5 	bl	8001aec <RCC_GetClocksFreq>
 8002d02:	683b      	ldr	r3, [r7, #0]
 8002d04:	4a0a      	ldr	r2, [pc, #40]	@ (8002d30 <TimerInit+0x3c>)
 8002d06:	fba2 2303 	umull	r2, r3, r2, r3
 8002d0a:	099b      	lsrs	r3, r3, #6
 8002d0c:	4618      	mov	r0, r3
 8002d0e:	f7ff ffcf 	bl	8002cb0 <SysTick_Config>
 8002d12:	2101      	movs	r1, #1
 8002d14:	f04f 30ff 	mov.w	r0, #4294967295
 8002d18:	f7ff ffa0 	bl	8002c5c <NVIC_SetPriority>
 8002d1c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8002d20:	2100      	movs	r1, #0
 8002d22:	4804      	ldr	r0, [pc, #16]	@ (8002d34 <TimerInit+0x40>)
 8002d24:	f002 fb7c 	bl	8005420 <memsetl>
 8002d28:	bf00      	nop
 8002d2a:	3710      	adds	r7, #16
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	bd80      	pop	{r7, pc}
 8002d30:	10624dd3 	.word	0x10624dd3
 8002d34:	20000460 	.word	0x20000460

08002d38 <TimerStart>:
 8002d38:	b590      	push	{r4, r7, lr}
 8002d3a:	b087      	sub	sp, #28
 8002d3c:	af00      	add	r7, sp, #0
 8002d3e:	60f8      	str	r0, [r7, #12]
 8002d40:	60b9      	str	r1, [r7, #8]
 8002d42:	603b      	str	r3, [r7, #0]
 8002d44:	4613      	mov	r3, r2
 8002d46:	71fb      	strb	r3, [r7, #7]
 8002d48:	2300      	movs	r3, #0
 8002d4a:	75fb      	strb	r3, [r7, #23]
 8002d4c:	e04c      	b.n	8002de8 <TimerStart+0xb0>
 8002d4e:	7dfa      	ldrb	r2, [r7, #23]
 8002d50:	4929      	ldr	r1, [pc, #164]	@ (8002df8 <TimerStart+0xc0>)
 8002d52:	4613      	mov	r3, r2
 8002d54:	005b      	lsls	r3, r3, #1
 8002d56:	4413      	add	r3, r2
 8002d58:	00db      	lsls	r3, r3, #3
 8002d5a:	440b      	add	r3, r1
 8002d5c:	3310      	adds	r3, #16
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d13e      	bne.n	8002de2 <TimerStart+0xaa>
 8002d64:	7dfa      	ldrb	r2, [r7, #23]
 8002d66:	4924      	ldr	r1, [pc, #144]	@ (8002df8 <TimerStart+0xc0>)
 8002d68:	4613      	mov	r3, r2
 8002d6a:	005b      	lsls	r3, r3, #1
 8002d6c:	4413      	add	r3, r2
 8002d6e:	00db      	lsls	r3, r3, #3
 8002d70:	440b      	add	r3, r1
 8002d72:	68fa      	ldr	r2, [r7, #12]
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	7dfa      	ldrb	r2, [r7, #23]
 8002d78:	491f      	ldr	r1, [pc, #124]	@ (8002df8 <TimerStart+0xc0>)
 8002d7a:	4613      	mov	r3, r2
 8002d7c:	005b      	lsls	r3, r3, #1
 8002d7e:	4413      	add	r3, r2
 8002d80:	00db      	lsls	r3, r3, #3
 8002d82:	440b      	add	r3, r1
 8002d84:	3310      	adds	r3, #16
 8002d86:	683a      	ldr	r2, [r7, #0]
 8002d88:	601a      	str	r2, [r3, #0]
 8002d8a:	7dfa      	ldrb	r2, [r7, #23]
 8002d8c:	491a      	ldr	r1, [pc, #104]	@ (8002df8 <TimerStart+0xc0>)
 8002d8e:	4613      	mov	r3, r2
 8002d90:	005b      	lsls	r3, r3, #1
 8002d92:	4413      	add	r3, r2
 8002d94:	00db      	lsls	r3, r3, #3
 8002d96:	440b      	add	r3, r1
 8002d98:	330c      	adds	r3, #12
 8002d9a:	79fa      	ldrb	r2, [r7, #7]
 8002d9c:	701a      	strb	r2, [r3, #0]
 8002d9e:	7dfa      	ldrb	r2, [r7, #23]
 8002da0:	4915      	ldr	r1, [pc, #84]	@ (8002df8 <TimerStart+0xc0>)
 8002da2:	4613      	mov	r3, r2
 8002da4:	005b      	lsls	r3, r3, #1
 8002da6:	4413      	add	r3, r2
 8002da8:	00db      	lsls	r3, r3, #3
 8002daa:	440b      	add	r3, r1
 8002dac:	3314      	adds	r3, #20
 8002dae:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8002db0:	601a      	str	r2, [r3, #0]
 8002db2:	7dfc      	ldrb	r4, [r7, #23]
 8002db4:	f000 f88e 	bl	8002ed4 <GetMilSecTick>
 8002db8:	4601      	mov	r1, r0
 8002dba:	4a0f      	ldr	r2, [pc, #60]	@ (8002df8 <TimerStart+0xc0>)
 8002dbc:	4623      	mov	r3, r4
 8002dbe:	005b      	lsls	r3, r3, #1
 8002dc0:	4423      	add	r3, r4
 8002dc2:	00db      	lsls	r3, r3, #3
 8002dc4:	4413      	add	r3, r2
 8002dc6:	3304      	adds	r3, #4
 8002dc8:	6019      	str	r1, [r3, #0]
 8002dca:	7dfa      	ldrb	r2, [r7, #23]
 8002dcc:	490a      	ldr	r1, [pc, #40]	@ (8002df8 <TimerStart+0xc0>)
 8002dce:	4613      	mov	r3, r2
 8002dd0:	005b      	lsls	r3, r3, #1
 8002dd2:	4413      	add	r3, r2
 8002dd4:	00db      	lsls	r3, r3, #3
 8002dd6:	440b      	add	r3, r1
 8002dd8:	3308      	adds	r3, #8
 8002dda:	68ba      	ldr	r2, [r7, #8]
 8002ddc:	601a      	str	r2, [r3, #0]
 8002dde:	7dfb      	ldrb	r3, [r7, #23]
 8002de0:	e006      	b.n	8002df0 <TimerStart+0xb8>
 8002de2:	7dfb      	ldrb	r3, [r7, #23]
 8002de4:	3301      	adds	r3, #1
 8002de6:	75fb      	strb	r3, [r7, #23]
 8002de8:	7dfb      	ldrb	r3, [r7, #23]
 8002dea:	2b0f      	cmp	r3, #15
 8002dec:	d9af      	bls.n	8002d4e <TimerStart+0x16>
 8002dee:	23ff      	movs	r3, #255	@ 0xff
 8002df0:	4618      	mov	r0, r3
 8002df2:	371c      	adds	r7, #28
 8002df4:	46bd      	mov	sp, r7
 8002df6:	bd90      	pop	{r4, r7, pc}
 8002df8:	20000460 	.word	0x20000460

08002dfc <TimerChangePeriod>:
 8002dfc:	b480      	push	{r7}
 8002dfe:	b083      	sub	sp, #12
 8002e00:	af00      	add	r7, sp, #0
 8002e02:	4603      	mov	r3, r0
 8002e04:	6039      	str	r1, [r7, #0]
 8002e06:	71fb      	strb	r3, [r7, #7]
 8002e08:	79fb      	ldrb	r3, [r7, #7]
 8002e0a:	2bff      	cmp	r3, #255	@ 0xff
 8002e0c:	d00a      	beq.n	8002e24 <TimerChangePeriod+0x28>
 8002e0e:	79fa      	ldrb	r2, [r7, #7]
 8002e10:	4907      	ldr	r1, [pc, #28]	@ (8002e30 <TimerChangePeriod+0x34>)
 8002e12:	4613      	mov	r3, r2
 8002e14:	005b      	lsls	r3, r3, #1
 8002e16:	4413      	add	r3, r2
 8002e18:	00db      	lsls	r3, r3, #3
 8002e1a:	440b      	add	r3, r1
 8002e1c:	3308      	adds	r3, #8
 8002e1e:	683a      	ldr	r2, [r7, #0]
 8002e20:	601a      	str	r2, [r3, #0]
 8002e22:	e000      	b.n	8002e26 <TimerChangePeriod+0x2a>
 8002e24:	bf00      	nop
 8002e26:	370c      	adds	r7, #12
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e2e:	4770      	bx	lr
 8002e30:	20000460 	.word	0x20000460

08002e34 <TimerStop>:
 8002e34:	b480      	push	{r7}
 8002e36:	b083      	sub	sp, #12
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	4603      	mov	r3, r0
 8002e3c:	71fb      	strb	r3, [r7, #7]
 8002e3e:	79fb      	ldrb	r3, [r7, #7]
 8002e40:	2b0f      	cmp	r3, #15
 8002e42:	d80a      	bhi.n	8002e5a <TimerStop+0x26>
 8002e44:	79fa      	ldrb	r2, [r7, #7]
 8002e46:	4922      	ldr	r1, [pc, #136]	@ (8002ed0 <TimerStop+0x9c>)
 8002e48:	4613      	mov	r3, r2
 8002e4a:	005b      	lsls	r3, r3, #1
 8002e4c:	4413      	add	r3, r2
 8002e4e:	00db      	lsls	r3, r3, #3
 8002e50:	440b      	add	r3, r1
 8002e52:	3310      	adds	r3, #16
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d101      	bne.n	8002e5e <TimerStop+0x2a>
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	e031      	b.n	8002ec2 <TimerStop+0x8e>
 8002e5e:	79fa      	ldrb	r2, [r7, #7]
 8002e60:	491b      	ldr	r1, [pc, #108]	@ (8002ed0 <TimerStop+0x9c>)
 8002e62:	4613      	mov	r3, r2
 8002e64:	005b      	lsls	r3, r3, #1
 8002e66:	4413      	add	r3, r2
 8002e68:	00db      	lsls	r3, r3, #3
 8002e6a:	440b      	add	r3, r1
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	601a      	str	r2, [r3, #0]
 8002e70:	79fa      	ldrb	r2, [r7, #7]
 8002e72:	4917      	ldr	r1, [pc, #92]	@ (8002ed0 <TimerStop+0x9c>)
 8002e74:	4613      	mov	r3, r2
 8002e76:	005b      	lsls	r3, r3, #1
 8002e78:	4413      	add	r3, r2
 8002e7a:	00db      	lsls	r3, r3, #3
 8002e7c:	440b      	add	r3, r1
 8002e7e:	3310      	adds	r3, #16
 8002e80:	2200      	movs	r2, #0
 8002e82:	601a      	str	r2, [r3, #0]
 8002e84:	79fa      	ldrb	r2, [r7, #7]
 8002e86:	4912      	ldr	r1, [pc, #72]	@ (8002ed0 <TimerStop+0x9c>)
 8002e88:	4613      	mov	r3, r2
 8002e8a:	005b      	lsls	r3, r3, #1
 8002e8c:	4413      	add	r3, r2
 8002e8e:	00db      	lsls	r3, r3, #3
 8002e90:	440b      	add	r3, r1
 8002e92:	330c      	adds	r3, #12
 8002e94:	2200      	movs	r2, #0
 8002e96:	701a      	strb	r2, [r3, #0]
 8002e98:	79fa      	ldrb	r2, [r7, #7]
 8002e9a:	490d      	ldr	r1, [pc, #52]	@ (8002ed0 <TimerStop+0x9c>)
 8002e9c:	4613      	mov	r3, r2
 8002e9e:	005b      	lsls	r3, r3, #1
 8002ea0:	4413      	add	r3, r2
 8002ea2:	00db      	lsls	r3, r3, #3
 8002ea4:	440b      	add	r3, r1
 8002ea6:	3308      	adds	r3, #8
 8002ea8:	2200      	movs	r2, #0
 8002eaa:	601a      	str	r2, [r3, #0]
 8002eac:	79fa      	ldrb	r2, [r7, #7]
 8002eae:	4908      	ldr	r1, [pc, #32]	@ (8002ed0 <TimerStop+0x9c>)
 8002eb0:	4613      	mov	r3, r2
 8002eb2:	005b      	lsls	r3, r3, #1
 8002eb4:	4413      	add	r3, r2
 8002eb6:	00db      	lsls	r3, r3, #3
 8002eb8:	440b      	add	r3, r1
 8002eba:	3304      	adds	r3, #4
 8002ebc:	2200      	movs	r2, #0
 8002ebe:	601a      	str	r2, [r3, #0]
 8002ec0:	2301      	movs	r3, #1
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	370c      	adds	r7, #12
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ecc:	4770      	bx	lr
 8002ece:	bf00      	nop
 8002ed0:	20000460 	.word	0x20000460

08002ed4 <GetMilSecTick>:
 8002ed4:	b480      	push	{r7}
 8002ed6:	af00      	add	r7, sp, #0
 8002ed8:	4b03      	ldr	r3, [pc, #12]	@ (8002ee8 <GetMilSecTick+0x14>)
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	4618      	mov	r0, r3
 8002ede:	46bd      	mov	sp, r7
 8002ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ee4:	4770      	bx	lr
 8002ee6:	bf00      	nop
 8002ee8:	200005e0 	.word	0x200005e0

08002eec <processTimerScheduler>:
 8002eec:	b580      	push	{r7, lr}
 8002eee:	b084      	sub	sp, #16
 8002ef0:	af00      	add	r7, sp, #0
 8002ef2:	2300      	movs	r3, #0
 8002ef4:	73fb      	strb	r3, [r7, #15]
 8002ef6:	e068      	b.n	8002fca <processTimerScheduler+0xde>
 8002ef8:	7bfa      	ldrb	r2, [r7, #15]
 8002efa:	4937      	ldr	r1, [pc, #220]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002efc:	4613      	mov	r3, r2
 8002efe:	005b      	lsls	r3, r3, #1
 8002f00:	4413      	add	r3, r2
 8002f02:	00db      	lsls	r3, r3, #3
 8002f04:	440b      	add	r3, r1
 8002f06:	3310      	adds	r3, #16
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d05a      	beq.n	8002fc4 <processTimerScheduler+0xd8>
 8002f0e:	7bfb      	ldrb	r3, [r7, #15]
 8002f10:	4618      	mov	r0, r3
 8002f12:	f000 f863 	bl	8002fdc <TimeExpired>
 8002f16:	4603      	mov	r3, r0
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d053      	beq.n	8002fc4 <processTimerScheduler+0xd8>
 8002f1c:	7bfa      	ldrb	r2, [r7, #15]
 8002f1e:	492e      	ldr	r1, [pc, #184]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f20:	4613      	mov	r3, r2
 8002f22:	005b      	lsls	r3, r3, #1
 8002f24:	4413      	add	r3, r2
 8002f26:	00db      	lsls	r3, r3, #3
 8002f28:	440b      	add	r3, r1
 8002f2a:	3310      	adds	r3, #16
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	60bb      	str	r3, [r7, #8]
 8002f30:	7bfa      	ldrb	r2, [r7, #15]
 8002f32:	4929      	ldr	r1, [pc, #164]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f34:	4613      	mov	r3, r2
 8002f36:	005b      	lsls	r3, r3, #1
 8002f38:	4413      	add	r3, r2
 8002f3a:	00db      	lsls	r3, r3, #3
 8002f3c:	440b      	add	r3, r1
 8002f3e:	3314      	adds	r3, #20
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	607b      	str	r3, [r7, #4]
 8002f44:	7bfa      	ldrb	r2, [r7, #15]
 8002f46:	4924      	ldr	r1, [pc, #144]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f48:	4613      	mov	r3, r2
 8002f4a:	005b      	lsls	r3, r3, #1
 8002f4c:	4413      	add	r3, r2
 8002f4e:	00db      	lsls	r3, r3, #3
 8002f50:	440b      	add	r3, r1
 8002f52:	330c      	adds	r3, #12
 8002f54:	781b      	ldrb	r3, [r3, #0]
 8002f56:	b2db      	uxtb	r3, r3
 8002f58:	2bff      	cmp	r3, #255	@ 0xff
 8002f5a:	d020      	beq.n	8002f9e <processTimerScheduler+0xb2>
 8002f5c:	7bfa      	ldrb	r2, [r7, #15]
 8002f5e:	491e      	ldr	r1, [pc, #120]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f60:	4613      	mov	r3, r2
 8002f62:	005b      	lsls	r3, r3, #1
 8002f64:	4413      	add	r3, r2
 8002f66:	00db      	lsls	r3, r3, #3
 8002f68:	440b      	add	r3, r1
 8002f6a:	330c      	adds	r3, #12
 8002f6c:	781b      	ldrb	r3, [r3, #0]
 8002f6e:	b2db      	uxtb	r3, r3
 8002f70:	2b00      	cmp	r3, #0
 8002f72:	d014      	beq.n	8002f9e <processTimerScheduler+0xb2>
 8002f74:	7bfa      	ldrb	r2, [r7, #15]
 8002f76:	4918      	ldr	r1, [pc, #96]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f78:	4613      	mov	r3, r2
 8002f7a:	005b      	lsls	r3, r3, #1
 8002f7c:	4413      	add	r3, r2
 8002f7e:	00db      	lsls	r3, r3, #3
 8002f80:	440b      	add	r3, r1
 8002f82:	330c      	adds	r3, #12
 8002f84:	781b      	ldrb	r3, [r3, #0]
 8002f86:	b2db      	uxtb	r3, r3
 8002f88:	3b01      	subs	r3, #1
 8002f8a:	b2d8      	uxtb	r0, r3
 8002f8c:	4912      	ldr	r1, [pc, #72]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002f8e:	4613      	mov	r3, r2
 8002f90:	005b      	lsls	r3, r3, #1
 8002f92:	4413      	add	r3, r2
 8002f94:	00db      	lsls	r3, r3, #3
 8002f96:	440b      	add	r3, r1
 8002f98:	330c      	adds	r3, #12
 8002f9a:	4602      	mov	r2, r0
 8002f9c:	701a      	strb	r2, [r3, #0]
 8002f9e:	7bfa      	ldrb	r2, [r7, #15]
 8002fa0:	490d      	ldr	r1, [pc, #52]	@ (8002fd8 <processTimerScheduler+0xec>)
 8002fa2:	4613      	mov	r3, r2
 8002fa4:	005b      	lsls	r3, r3, #1
 8002fa6:	4413      	add	r3, r2
 8002fa8:	00db      	lsls	r3, r3, #3
 8002faa:	440b      	add	r3, r1
 8002fac:	330c      	adds	r3, #12
 8002fae:	781b      	ldrb	r3, [r3, #0]
 8002fb0:	b2db      	uxtb	r3, r3
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d103      	bne.n	8002fbe <processTimerScheduler+0xd2>
 8002fb6:	7bfb      	ldrb	r3, [r7, #15]
 8002fb8:	4618      	mov	r0, r3
 8002fba:	f7ff ff3b 	bl	8002e34 <TimerStop>
 8002fbe:	68bb      	ldr	r3, [r7, #8]
 8002fc0:	6878      	ldr	r0, [r7, #4]
 8002fc2:	4798      	blx	r3
 8002fc4:	7bfb      	ldrb	r3, [r7, #15]
 8002fc6:	3301      	adds	r3, #1
 8002fc8:	73fb      	strb	r3, [r7, #15]
 8002fca:	7bfb      	ldrb	r3, [r7, #15]
 8002fcc:	2b0f      	cmp	r3, #15
 8002fce:	d993      	bls.n	8002ef8 <processTimerScheduler+0xc>
 8002fd0:	bf00      	nop
 8002fd2:	3710      	adds	r7, #16
 8002fd4:	46bd      	mov	sp, r7
 8002fd6:	bd80      	pop	{r7, pc}
 8002fd8:	20000460 	.word	0x20000460

08002fdc <TimeExpired>:
 8002fdc:	b580      	push	{r7, lr}
 8002fde:	b084      	sub	sp, #16
 8002fe0:	af00      	add	r7, sp, #0
 8002fe2:	4603      	mov	r3, r0
 8002fe4:	71fb      	strb	r3, [r7, #7]
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	60fb      	str	r3, [r7, #12]
 8002fea:	b672      	cpsid	i
 8002fec:	f7ff ff72 	bl	8002ed4 <GetMilSecTick>
 8002ff0:	60b8      	str	r0, [r7, #8]
 8002ff2:	79fb      	ldrb	r3, [r7, #7]
 8002ff4:	2b0f      	cmp	r3, #15
 8002ff6:	d80a      	bhi.n	800300e <TimeExpired+0x32>
 8002ff8:	79fa      	ldrb	r2, [r7, #7]
 8002ffa:	492a      	ldr	r1, [pc, #168]	@ (80030a4 <TimeExpired+0xc8>)
 8002ffc:	4613      	mov	r3, r2
 8002ffe:	005b      	lsls	r3, r3, #1
 8003000:	4413      	add	r3, r2
 8003002:	00db      	lsls	r3, r3, #3
 8003004:	440b      	add	r3, r1
 8003006:	3310      	adds	r3, #16
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	2b00      	cmp	r3, #0
 800300c:	d102      	bne.n	8003014 <TimeExpired+0x38>
 800300e:	b662      	cpsie	i
 8003010:	2300      	movs	r3, #0
 8003012:	e042      	b.n	800309a <TimeExpired+0xbe>
 8003014:	79fa      	ldrb	r2, [r7, #7]
 8003016:	4923      	ldr	r1, [pc, #140]	@ (80030a4 <TimeExpired+0xc8>)
 8003018:	4613      	mov	r3, r2
 800301a:	005b      	lsls	r3, r3, #1
 800301c:	4413      	add	r3, r2
 800301e:	00db      	lsls	r3, r3, #3
 8003020:	440b      	add	r3, r1
 8003022:	3304      	adds	r3, #4
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	68ba      	ldr	r2, [r7, #8]
 8003028:	429a      	cmp	r2, r3
 800302a:	d30c      	bcc.n	8003046 <TimeExpired+0x6a>
 800302c:	79fa      	ldrb	r2, [r7, #7]
 800302e:	491d      	ldr	r1, [pc, #116]	@ (80030a4 <TimeExpired+0xc8>)
 8003030:	4613      	mov	r3, r2
 8003032:	005b      	lsls	r3, r3, #1
 8003034:	4413      	add	r3, r2
 8003036:	00db      	lsls	r3, r3, #3
 8003038:	440b      	add	r3, r1
 800303a:	3304      	adds	r3, #4
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	68ba      	ldr	r2, [r7, #8]
 8003040:	1ad3      	subs	r3, r2, r3
 8003042:	60fb      	str	r3, [r7, #12]
 8003044:	e00e      	b.n	8003064 <TimeExpired+0x88>
 8003046:	79fa      	ldrb	r2, [r7, #7]
 8003048:	4916      	ldr	r1, [pc, #88]	@ (80030a4 <TimeExpired+0xc8>)
 800304a:	4613      	mov	r3, r2
 800304c:	005b      	lsls	r3, r3, #1
 800304e:	4413      	add	r3, r2
 8003050:	00db      	lsls	r3, r3, #3
 8003052:	440b      	add	r3, r1
 8003054:	3304      	adds	r3, #4
 8003056:	681a      	ldr	r2, [r3, #0]
 8003058:	68bb      	ldr	r3, [r7, #8]
 800305a:	1ad3      	subs	r3, r2, r3
 800305c:	60fb      	str	r3, [r7, #12]
 800305e:	68fb      	ldr	r3, [r7, #12]
 8003060:	43db      	mvns	r3, r3
 8003062:	60fb      	str	r3, [r7, #12]
 8003064:	79fa      	ldrb	r2, [r7, #7]
 8003066:	490f      	ldr	r1, [pc, #60]	@ (80030a4 <TimeExpired+0xc8>)
 8003068:	4613      	mov	r3, r2
 800306a:	005b      	lsls	r3, r3, #1
 800306c:	4413      	add	r3, r2
 800306e:	00db      	lsls	r3, r3, #3
 8003070:	440b      	add	r3, r1
 8003072:	3308      	adds	r3, #8
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	68fa      	ldr	r2, [r7, #12]
 8003078:	429a      	cmp	r2, r3
 800307a:	d202      	bcs.n	8003082 <TimeExpired+0xa6>
 800307c:	b662      	cpsie	i
 800307e:	2300      	movs	r3, #0
 8003080:	e00b      	b.n	800309a <TimeExpired+0xbe>
 8003082:	79fa      	ldrb	r2, [r7, #7]
 8003084:	4907      	ldr	r1, [pc, #28]	@ (80030a4 <TimeExpired+0xc8>)
 8003086:	4613      	mov	r3, r2
 8003088:	005b      	lsls	r3, r3, #1
 800308a:	4413      	add	r3, r2
 800308c:	00db      	lsls	r3, r3, #3
 800308e:	440b      	add	r3, r1
 8003090:	3304      	adds	r3, #4
 8003092:	68ba      	ldr	r2, [r7, #8]
 8003094:	601a      	str	r2, [r3, #0]
 8003096:	b662      	cpsie	i
 8003098:	2301      	movs	r3, #1
 800309a:	4618      	mov	r0, r3
 800309c:	3710      	adds	r7, #16
 800309e:	46bd      	mov	sp, r7
 80030a0:	bd80      	pop	{r7, pc}
 80030a2:	bf00      	nop
 80030a4:	20000460 	.word	0x20000460

080030a8 <SysTick_Handler>:
 80030a8:	b480      	push	{r7}
 80030aa:	af00      	add	r7, sp, #0
 80030ac:	4b04      	ldr	r3, [pc, #16]	@ (80030c0 <SysTick_Handler+0x18>)
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	3301      	adds	r3, #1
 80030b2:	4a03      	ldr	r2, [pc, #12]	@ (80030c0 <SysTick_Handler+0x18>)
 80030b4:	6013      	str	r3, [r2, #0]
 80030b6:	bf00      	nop
 80030b8:	46bd      	mov	sp, r7
 80030ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030be:	4770      	bx	lr
 80030c0:	200005e0 	.word	0x200005e0

080030c4 <LightSensor_Init>:
 80030c4:	b580      	push	{r7, lr}
 80030c6:	b09e      	sub	sp, #120	@ 0x78
 80030c8:	af00      	add	r7, sp, #0
 80030ca:	4603      	mov	r3, r0
 80030cc:	71fb      	strb	r3, [r7, #7]
 80030ce:	2101      	movs	r1, #1
 80030d0:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80030d4:	f7fe fdf2 	bl	8001cbc <RCC_APB2PeriphClockCmd>
 80030d8:	2101      	movs	r1, #1
 80030da:	2004      	movs	r0, #4
 80030dc:	f7fe fdae 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 80030e0:	2101      	movs	r1, #1
 80030e2:	f44f 0080 	mov.w	r0, #4194304	@ 0x400000
 80030e6:	f7fe fda9 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 80030ea:	2320      	movs	r3, #32
 80030ec:	64bb      	str	r3, [r7, #72]	@ 0x48
 80030ee:	2303      	movs	r3, #3
 80030f0:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 80030f4:	2300      	movs	r3, #0
 80030f6:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80030fa:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80030fe:	4619      	mov	r1, r3
 8003100:	4843      	ldr	r0, [pc, #268]	@ (8003210 <LightSensor_Init+0x14c>)
 8003102:	f7fe fbcb 	bl	800189c <GPIO_Init>
 8003106:	f002 f9a4 	bl	8005452 <ADC_DeInit>
 800310a:	2300      	movs	r3, #0
 800310c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800310e:	2300      	movs	r3, #0
 8003110:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003112:	2300      	movs	r3, #0
 8003114:	673b      	str	r3, [r7, #112]	@ 0x70
 8003116:	2300      	movs	r3, #0
 8003118:	677b      	str	r3, [r7, #116]	@ 0x74
 800311a:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800311e:	4618      	mov	r0, r3
 8003120:	f002 f9fc 	bl	800551c <ADC_CommonInit>
 8003124:	2300      	movs	r3, #0
 8003126:	653b      	str	r3, [r7, #80]	@ 0x50
 8003128:	2300      	movs	r3, #0
 800312a:	f887 3054 	strb.w	r3, [r7, #84]	@ 0x54
 800312e:	2301      	movs	r3, #1
 8003130:	f887 3055 	strb.w	r3, [r7, #85]	@ 0x55
 8003134:	2300      	movs	r3, #0
 8003136:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003138:	2300      	movs	r3, #0
 800313a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800313c:	2300      	movs	r3, #0
 800313e:	663b      	str	r3, [r7, #96]	@ 0x60
 8003140:	2301      	movs	r3, #1
 8003142:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 8003146:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800314a:	4619      	mov	r1, r3
 800314c:	4831      	ldr	r0, [pc, #196]	@ (8003214 <LightSensor_Init+0x150>)
 800314e:	f002 f98f 	bl	8005470 <ADC_Init>
 8003152:	79fb      	ldrb	r3, [r7, #7]
 8003154:	2b01      	cmp	r3, #1
 8003156:	d110      	bne.n	800317a <LightSensor_Init+0xb6>
 8003158:	2101      	movs	r1, #1
 800315a:	482e      	ldr	r0, [pc, #184]	@ (8003214 <LightSensor_Init+0x150>)
 800315c:	f002 fafc 	bl	8005758 <ADC_EOCOnEachRegularChannelCmd>
 8003160:	2100      	movs	r1, #0
 8003162:	482c      	ldr	r0, [pc, #176]	@ (8003214 <LightSensor_Init+0x150>)
 8003164:	f002 fb14 	bl	8005790 <ADC_ContinuousModeCmd>
 8003168:	2101      	movs	r1, #1
 800316a:	482a      	ldr	r0, [pc, #168]	@ (8003214 <LightSensor_Init+0x150>)
 800316c:	f002 fb2c 	bl	80057c8 <ADC_DiscModeChannelCountConfig>
 8003170:	2101      	movs	r1, #1
 8003172:	4828      	ldr	r0, [pc, #160]	@ (8003214 <LightSensor_Init+0x150>)
 8003174:	f002 fb4a 	bl	800580c <ADC_DiscModeCmd>
 8003178:	e036      	b.n	80031e8 <LightSensor_Init+0x124>
 800317a:	4827      	ldr	r0, [pc, #156]	@ (8003218 <LightSensor_Init+0x154>)
 800317c:	f002 fb9a 	bl	80058b4 <DMA_DeInit>
 8003180:	2300      	movs	r3, #0
 8003182:	60fb      	str	r3, [r7, #12]
 8003184:	4b25      	ldr	r3, [pc, #148]	@ (800321c <LightSensor_Init+0x158>)
 8003186:	613b      	str	r3, [r7, #16]
 8003188:	4b25      	ldr	r3, [pc, #148]	@ (8003220 <LightSensor_Init+0x15c>)
 800318a:	617b      	str	r3, [r7, #20]
 800318c:	2300      	movs	r3, #0
 800318e:	61bb      	str	r3, [r7, #24]
 8003190:	2301      	movs	r3, #1
 8003192:	61fb      	str	r3, [r7, #28]
 8003194:	2300      	movs	r3, #0
 8003196:	623b      	str	r3, [r7, #32]
 8003198:	2300      	movs	r3, #0
 800319a:	627b      	str	r3, [r7, #36]	@ 0x24
 800319c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80031a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80031a2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80031a6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80031a8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80031ac:	633b      	str	r3, [r7, #48]	@ 0x30
 80031ae:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 80031b2:	637b      	str	r3, [r7, #52]	@ 0x34
 80031b4:	2300      	movs	r3, #0
 80031b6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80031b8:	2301      	movs	r3, #1
 80031ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80031bc:	2300      	movs	r3, #0
 80031be:	643b      	str	r3, [r7, #64]	@ 0x40
 80031c0:	2300      	movs	r3, #0
 80031c2:	647b      	str	r3, [r7, #68]	@ 0x44
 80031c4:	f107 030c 	add.w	r3, r7, #12
 80031c8:	4619      	mov	r1, r3
 80031ca:	4813      	ldr	r0, [pc, #76]	@ (8003218 <LightSensor_Init+0x154>)
 80031cc:	f002 fc46 	bl	8005a5c <DMA_Init>
 80031d0:	2101      	movs	r1, #1
 80031d2:	4811      	ldr	r0, [pc, #68]	@ (8003218 <LightSensor_Init+0x154>)
 80031d4:	f002 fc9a 	bl	8005b0c <DMA_Cmd>
 80031d8:	2101      	movs	r1, #1
 80031da:	480e      	ldr	r0, [pc, #56]	@ (8003214 <LightSensor_Init+0x150>)
 80031dc:	f002 fb4e 	bl	800587c <ADC_DMARequestAfterLastTransferCmd>
 80031e0:	2101      	movs	r1, #1
 80031e2:	480c      	ldr	r0, [pc, #48]	@ (8003214 <LightSensor_Init+0x150>)
 80031e4:	f002 fb2e 	bl	8005844 <ADC_DMACmd>
 80031e8:	2301      	movs	r3, #1
 80031ea:	2201      	movs	r2, #1
 80031ec:	210f      	movs	r1, #15
 80031ee:	4809      	ldr	r0, [pc, #36]	@ (8003214 <LightSensor_Init+0x150>)
 80031f0:	f002 f9d8 	bl	80055a4 <ADC_RegularChannelConfig>
 80031f4:	2101      	movs	r1, #1
 80031f6:	4807      	ldr	r0, [pc, #28]	@ (8003214 <LightSensor_Init+0x150>)
 80031f8:	f002 f9b8 	bl	800556c <ADC_Cmd>
 80031fc:	79fb      	ldrb	r3, [r7, #7]
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d102      	bne.n	8003208 <LightSensor_Init+0x144>
 8003202:	4804      	ldr	r0, [pc, #16]	@ (8003214 <LightSensor_Init+0x150>)
 8003204:	f002 fa98 	bl	8005738 <ADC_SoftwareStartConv>
 8003208:	bf00      	nop
 800320a:	3778      	adds	r7, #120	@ 0x78
 800320c:	46bd      	mov	sp, r7
 800320e:	bd80      	pop	{r7, pc}
 8003210:	40020800 	.word	0x40020800
 8003214:	40012000 	.word	0x40012000
 8003218:	40026410 	.word	0x40026410
 800321c:	4001204c 	.word	0x4001204c
 8003220:	200005e4 	.word	0x200005e4

08003224 <LightSensor_MeasureUseDMAMode>:
 8003224:	b480      	push	{r7}
 8003226:	af00      	add	r7, sp, #0
 8003228:	4b03      	ldr	r3, [pc, #12]	@ (8003238 <LightSensor_MeasureUseDMAMode+0x14>)
 800322a:	881b      	ldrh	r3, [r3, #0]
 800322c:	b29b      	uxth	r3, r3
 800322e:	4618      	mov	r0, r3
 8003230:	46bd      	mov	sp, r7
 8003232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003236:	4770      	bx	lr
 8003238:	200005e4 	.word	0x200005e4

0800323c <LightSensor_SendPacketRespond>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b086      	sub	sp, #24
 8003240:	af02      	add	r7, sp, #8
 8003242:	4603      	mov	r3, r0
 8003244:	80fb      	strh	r3, [r7, #6]
 8003246:	88fb      	ldrh	r3, [r7, #6]
 8003248:	0a1b      	lsrs	r3, r3, #8
 800324a:	b29b      	uxth	r3, r3
 800324c:	b2db      	uxtb	r3, r3
 800324e:	733b      	strb	r3, [r7, #12]
 8003250:	88fb      	ldrh	r3, [r7, #6]
 8003252:	b2db      	uxtb	r3, r3
 8003254:	737b      	strb	r3, [r7, #13]
 8003256:	f107 020c 	add.w	r2, r7, #12
 800325a:	2302      	movs	r3, #2
 800325c:	9300      	str	r3, [sp, #0]
 800325e:	4613      	mov	r3, r2
 8003260:	2201      	movs	r2, #1
 8003262:	2186      	movs	r1, #134	@ 0x86
 8003264:	2000      	movs	r0, #0
 8003266:	f000 fa41 	bl	80036ec <Serial_SendPacket>
 800326a:	bf00      	nop
 800326c:	3710      	adds	r7, #16
 800326e:	46bd      	mov	sp, r7
 8003270:	bd80      	pop	{r7, pc}

08003272 <TemHumSensor_Init>:
 8003272:	b580      	push	{r7, lr}
 8003274:	af00      	add	r7, sp, #0
 8003276:	f000 f8f7 	bl	8003468 <i2c_config>
 800327a:	bf00      	nop
 800327c:	bd80      	pop	{r7, pc}

0800327e <TempSensor_SendPacketRespond>:
 800327e:	b580      	push	{r7, lr}
 8003280:	b086      	sub	sp, #24
 8003282:	af02      	add	r7, sp, #8
 8003284:	4603      	mov	r3, r0
 8003286:	80fb      	strh	r3, [r7, #6]
 8003288:	88fb      	ldrh	r3, [r7, #6]
 800328a:	0a1b      	lsrs	r3, r3, #8
 800328c:	b29b      	uxth	r3, r3
 800328e:	b2db      	uxtb	r3, r3
 8003290:	733b      	strb	r3, [r7, #12]
 8003292:	88fb      	ldrh	r3, [r7, #6]
 8003294:	b2db      	uxtb	r3, r3
 8003296:	737b      	strb	r3, [r7, #13]
 8003298:	f107 020c 	add.w	r2, r7, #12
 800329c:	2302      	movs	r3, #2
 800329e:	9300      	str	r3, [sp, #0]
 80032a0:	4613      	mov	r3, r2
 80032a2:	2201      	movs	r2, #1
 80032a4:	2184      	movs	r1, #132	@ 0x84
 80032a6:	2000      	movs	r0, #0
 80032a8:	f000 fa20 	bl	80036ec <Serial_SendPacket>
 80032ac:	bf00      	nop
 80032ae:	3710      	adds	r7, #16
 80032b0:	46bd      	mov	sp, r7
 80032b2:	bd80      	pop	{r7, pc}

080032b4 <HumiSensor_SendPacketRespond>:
 80032b4:	b580      	push	{r7, lr}
 80032b6:	b086      	sub	sp, #24
 80032b8:	af02      	add	r7, sp, #8
 80032ba:	4603      	mov	r3, r0
 80032bc:	80fb      	strh	r3, [r7, #6]
 80032be:	88fb      	ldrh	r3, [r7, #6]
 80032c0:	0a1b      	lsrs	r3, r3, #8
 80032c2:	b29b      	uxth	r3, r3
 80032c4:	b2db      	uxtb	r3, r3
 80032c6:	733b      	strb	r3, [r7, #12]
 80032c8:	88fb      	ldrh	r3, [r7, #6]
 80032ca:	b2db      	uxtb	r3, r3
 80032cc:	737b      	strb	r3, [r7, #13]
 80032ce:	f107 020c 	add.w	r2, r7, #12
 80032d2:	2302      	movs	r3, #2
 80032d4:	9300      	str	r3, [sp, #0]
 80032d6:	4613      	mov	r3, r2
 80032d8:	2201      	movs	r2, #1
 80032da:	2185      	movs	r1, #133	@ 0x85
 80032dc:	2000      	movs	r0, #0
 80032de:	f000 fa05 	bl	80036ec <Serial_SendPacket>
 80032e2:	bf00      	nop
 80032e4:	3710      	adds	r7, #16
 80032e6:	46bd      	mov	sp, r7
 80032e8:	bd80      	pop	{r7, pc}
	...

080032ec <TemHumSensor_GetTemp>:
 80032ec:	b580      	push	{r7, lr}
 80032ee:	b086      	sub	sp, #24
 80032f0:	af02      	add	r7, sp, #8
 80032f2:	1d3b      	adds	r3, r7, #4
 80032f4:	2100      	movs	r1, #0
 80032f6:	460a      	mov	r2, r1
 80032f8:	801a      	strh	r2, [r3, #0]
 80032fa:	460a      	mov	r2, r1
 80032fc:	709a      	strb	r2, [r3, #2]
 80032fe:	2300      	movs	r3, #0
 8003300:	73fb      	strb	r3, [r7, #15]
 8003302:	4b17      	ldr	r3, [pc, #92]	@ (8003360 <TemHumSensor_GetTemp+0x74>)
 8003304:	881b      	ldrh	r3, [r3, #0]
 8003306:	803b      	strh	r3, [r7, #0]
 8003308:	4b16      	ldr	r3, [pc, #88]	@ (8003364 <TemHumSensor_GetTemp+0x78>)
 800330a:	781b      	ldrb	r3, [r3, #0]
 800330c:	b29b      	uxth	r3, r3
 800330e:	1d3a      	adds	r2, r7, #4
 8003310:	4639      	mov	r1, r7
 8003312:	9300      	str	r3, [sp, #0]
 8003314:	2303      	movs	r3, #3
 8003316:	2040      	movs	r0, #64	@ 0x40
 8003318:	f000 f8f0 	bl	80034fc <i2c_read_reg_expand>
 800331c:	1d3b      	adds	r3, r7, #4
 800331e:	2102      	movs	r1, #2
 8003320:	4618      	mov	r0, r3
 8003322:	f000 f85d 	bl	80033e0 <CalculateCRC8>
 8003326:	4603      	mov	r3, r0
 8003328:	73fb      	strb	r3, [r7, #15]
 800332a:	79bb      	ldrb	r3, [r7, #6]
 800332c:	7bfa      	ldrb	r2, [r7, #15]
 800332e:	429a      	cmp	r2, r3
 8003330:	d001      	beq.n	8003336 <TemHumSensor_GetTemp+0x4a>
 8003332:	2300      	movs	r3, #0
 8003334:	e00f      	b.n	8003356 <TemHumSensor_GetTemp+0x6a>
 8003336:	793b      	ldrb	r3, [r7, #4]
 8003338:	021b      	lsls	r3, r3, #8
 800333a:	797a      	ldrb	r2, [r7, #5]
 800333c:	4413      	add	r3, r2
 800333e:	60bb      	str	r3, [r7, #8]
 8003340:	68bb      	ldr	r3, [r7, #8]
 8003342:	f244 42a4 	movw	r2, #17572	@ 0x44a4
 8003346:	fb02 f303 	mul.w	r3, r2, r3
 800334a:	0c1b      	lsrs	r3, r3, #16
 800334c:	f5a3 5392 	sub.w	r3, r3, #4672	@ 0x1240
 8003350:	3b0d      	subs	r3, #13
 8003352:	60bb      	str	r3, [r7, #8]
 8003354:	68bb      	ldr	r3, [r7, #8]
 8003356:	4618      	mov	r0, r3
 8003358:	3710      	adds	r7, #16
 800335a:	46bd      	mov	sp, r7
 800335c:	bd80      	pop	{r7, pc}
 800335e:	bf00      	nop
 8003360:	08007d8c 	.word	0x08007d8c
 8003364:	20000035 	.word	0x20000035

08003368 <TemHumSensor_GetHumi>:
 8003368:	b580      	push	{r7, lr}
 800336a:	b086      	sub	sp, #24
 800336c:	af02      	add	r7, sp, #8
 800336e:	1d3b      	adds	r3, r7, #4
 8003370:	2100      	movs	r1, #0
 8003372:	460a      	mov	r2, r1
 8003374:	801a      	strh	r2, [r3, #0]
 8003376:	460a      	mov	r2, r1
 8003378:	709a      	strb	r2, [r3, #2]
 800337a:	2300      	movs	r3, #0
 800337c:	73fb      	strb	r3, [r7, #15]
 800337e:	4b16      	ldr	r3, [pc, #88]	@ (80033d8 <TemHumSensor_GetHumi+0x70>)
 8003380:	881b      	ldrh	r3, [r3, #0]
 8003382:	803b      	strh	r3, [r7, #0]
 8003384:	4b15      	ldr	r3, [pc, #84]	@ (80033dc <TemHumSensor_GetHumi+0x74>)
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	b29b      	uxth	r3, r3
 800338a:	1d3a      	adds	r2, r7, #4
 800338c:	4639      	mov	r1, r7
 800338e:	9300      	str	r3, [sp, #0]
 8003390:	2303      	movs	r3, #3
 8003392:	2040      	movs	r0, #64	@ 0x40
 8003394:	f000 f8b2 	bl	80034fc <i2c_read_reg_expand>
 8003398:	1d3b      	adds	r3, r7, #4
 800339a:	2102      	movs	r1, #2
 800339c:	4618      	mov	r0, r3
 800339e:	f000 f81f 	bl	80033e0 <CalculateCRC8>
 80033a2:	4603      	mov	r3, r0
 80033a4:	73fb      	strb	r3, [r7, #15]
 80033a6:	79bb      	ldrb	r3, [r7, #6]
 80033a8:	7bfa      	ldrb	r2, [r7, #15]
 80033aa:	429a      	cmp	r2, r3
 80033ac:	d001      	beq.n	80033b2 <TemHumSensor_GetHumi+0x4a>
 80033ae:	2300      	movs	r3, #0
 80033b0:	e00e      	b.n	80033d0 <TemHumSensor_GetHumi+0x68>
 80033b2:	793b      	ldrb	r3, [r7, #4]
 80033b4:	021b      	lsls	r3, r3, #8
 80033b6:	797a      	ldrb	r2, [r7, #5]
 80033b8:	4413      	add	r3, r2
 80033ba:	60bb      	str	r3, [r7, #8]
 80033bc:	68bb      	ldr	r3, [r7, #8]
 80033be:	f243 02d4 	movw	r2, #12500	@ 0x30d4
 80033c2:	fb02 f303 	mul.w	r3, r2, r3
 80033c6:	0c1b      	lsrs	r3, r3, #16
 80033c8:	f5a3 7316 	sub.w	r3, r3, #600	@ 0x258
 80033cc:	60bb      	str	r3, [r7, #8]
 80033ce:	68bb      	ldr	r3, [r7, #8]
 80033d0:	4618      	mov	r0, r3
 80033d2:	3710      	adds	r7, #16
 80033d4:	46bd      	mov	sp, r7
 80033d6:	bd80      	pop	{r7, pc}
 80033d8:	08007d90 	.word	0x08007d90
 80033dc:	20000036 	.word	0x20000036

080033e0 <CalculateCRC8>:
 80033e0:	b480      	push	{r7}
 80033e2:	b085      	sub	sp, #20
 80033e4:	af00      	add	r7, sp, #0
 80033e6:	6078      	str	r0, [r7, #4]
 80033e8:	460b      	mov	r3, r1
 80033ea:	70fb      	strb	r3, [r7, #3]
 80033ec:	2300      	movs	r3, #0
 80033ee:	73bb      	strb	r3, [r7, #14]
 80033f0:	2300      	movs	r3, #0
 80033f2:	81bb      	strh	r3, [r7, #12]
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	60bb      	str	r3, [r7, #8]
 80033f8:	2300      	movs	r3, #0
 80033fa:	73bb      	strb	r3, [r7, #14]
 80033fc:	e025      	b.n	800344a <CalculateCRC8+0x6a>
 80033fe:	68bb      	ldr	r3, [r7, #8]
 8003400:	781b      	ldrb	r3, [r3, #0]
 8003402:	021b      	lsls	r3, r3, #8
 8003404:	b21a      	sxth	r2, r3
 8003406:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800340a:	4053      	eors	r3, r2
 800340c:	b21b      	sxth	r3, r3
 800340e:	81bb      	strh	r3, [r7, #12]
 8003410:	2300      	movs	r3, #0
 8003412:	73fb      	strb	r3, [r7, #15]
 8003414:	e010      	b.n	8003438 <CalculateCRC8+0x58>
 8003416:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800341a:	2b00      	cmp	r3, #0
 800341c:	da06      	bge.n	800342c <CalculateCRC8+0x4c>
 800341e:	89bb      	ldrh	r3, [r7, #12]
 8003420:	f483 43ce 	eor.w	r3, r3, #26368	@ 0x6700
 8003424:	f083 037f 	eor.w	r3, r3, #127	@ 0x7f
 8003428:	43db      	mvns	r3, r3
 800342a:	81bb      	strh	r3, [r7, #12]
 800342c:	89bb      	ldrh	r3, [r7, #12]
 800342e:	005b      	lsls	r3, r3, #1
 8003430:	81bb      	strh	r3, [r7, #12]
 8003432:	7bfb      	ldrb	r3, [r7, #15]
 8003434:	3301      	adds	r3, #1
 8003436:	73fb      	strb	r3, [r7, #15]
 8003438:	7bfb      	ldrb	r3, [r7, #15]
 800343a:	2b07      	cmp	r3, #7
 800343c:	d9eb      	bls.n	8003416 <CalculateCRC8+0x36>
 800343e:	7bbb      	ldrb	r3, [r7, #14]
 8003440:	3301      	adds	r3, #1
 8003442:	73bb      	strb	r3, [r7, #14]
 8003444:	68bb      	ldr	r3, [r7, #8]
 8003446:	3301      	adds	r3, #1
 8003448:	60bb      	str	r3, [r7, #8]
 800344a:	7bba      	ldrb	r2, [r7, #14]
 800344c:	78fb      	ldrb	r3, [r7, #3]
 800344e:	429a      	cmp	r2, r3
 8003450:	d3d5      	bcc.n	80033fe <CalculateCRC8+0x1e>
 8003452:	89bb      	ldrh	r3, [r7, #12]
 8003454:	0a1b      	lsrs	r3, r3, #8
 8003456:	b29b      	uxth	r3, r3
 8003458:	b2db      	uxtb	r3, r3
 800345a:	4618      	mov	r0, r3
 800345c:	3714      	adds	r7, #20
 800345e:	46bd      	mov	sp, r7
 8003460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003464:	4770      	bx	lr
	...

08003468 <i2c_config>:
 8003468:	b580      	push	{r7, lr}
 800346a:	b086      	sub	sp, #24
 800346c:	af00      	add	r7, sp, #0
 800346e:	2101      	movs	r1, #1
 8003470:	f44f 1000 	mov.w	r0, #2097152	@ 0x200000
 8003474:	f7fe fc02 	bl	8001c7c <RCC_APB1PeriphClockCmd>
 8003478:	4b1d      	ldr	r3, [pc, #116]	@ (80034f0 <i2c_config+0x88>)
 800347a:	60bb      	str	r3, [r7, #8]
 800347c:	2300      	movs	r3, #0
 800347e:	81bb      	strh	r3, [r7, #12]
 8003480:	f64b 73ff 	movw	r3, #49151	@ 0xbfff
 8003484:	81fb      	strh	r3, [r7, #14]
 8003486:	2300      	movs	r3, #0
 8003488:	823b      	strh	r3, [r7, #16]
 800348a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800348e:	827b      	strh	r3, [r7, #18]
 8003490:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8003494:	82bb      	strh	r3, [r7, #20]
 8003496:	f107 0308 	add.w	r3, r7, #8
 800349a:	4619      	mov	r1, r3
 800349c:	4815      	ldr	r0, [pc, #84]	@ (80034f4 <i2c_config+0x8c>)
 800349e:	f002 fb51 	bl	8005b44 <I2C_Init>
 80034a2:	2101      	movs	r1, #1
 80034a4:	4813      	ldr	r0, [pc, #76]	@ (80034f4 <i2c_config+0x8c>)
 80034a6:	f002 fc0f 	bl	8005cc8 <I2C_Cmd>
 80034aa:	2101      	movs	r1, #1
 80034ac:	2002      	movs	r0, #2
 80034ae:	f7fe fbc5 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 80034b2:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80034b6:	603b      	str	r3, [r7, #0]
 80034b8:	2302      	movs	r3, #2
 80034ba:	713b      	strb	r3, [r7, #4]
 80034bc:	2302      	movs	r3, #2
 80034be:	717b      	strb	r3, [r7, #5]
 80034c0:	2301      	movs	r3, #1
 80034c2:	71bb      	strb	r3, [r7, #6]
 80034c4:	2300      	movs	r3, #0
 80034c6:	71fb      	strb	r3, [r7, #7]
 80034c8:	463b      	mov	r3, r7
 80034ca:	4619      	mov	r1, r3
 80034cc:	480a      	ldr	r0, [pc, #40]	@ (80034f8 <i2c_config+0x90>)
 80034ce:	f7fe f9e5 	bl	800189c <GPIO_Init>
 80034d2:	2204      	movs	r2, #4
 80034d4:	2108      	movs	r1, #8
 80034d6:	4808      	ldr	r0, [pc, #32]	@ (80034f8 <i2c_config+0x90>)
 80034d8:	f7fe fabe 	bl	8001a58 <GPIO_PinAFConfig>
 80034dc:	2204      	movs	r2, #4
 80034de:	2109      	movs	r1, #9
 80034e0:	4805      	ldr	r0, [pc, #20]	@ (80034f8 <i2c_config+0x90>)
 80034e2:	f7fe fab9 	bl	8001a58 <GPIO_PinAFConfig>
 80034e6:	bf00      	nop
 80034e8:	3718      	adds	r7, #24
 80034ea:	46bd      	mov	sp, r7
 80034ec:	bd80      	pop	{r7, pc}
 80034ee:	bf00      	nop
 80034f0:	00061a80 	.word	0x00061a80
 80034f4:	40005400 	.word	0x40005400
 80034f8:	40020400 	.word	0x40020400

080034fc <i2c_read_reg_expand>:
 80034fc:	b590      	push	{r4, r7, lr}
 80034fe:	b087      	sub	sp, #28
 8003500:	af00      	add	r7, sp, #0
 8003502:	60b9      	str	r1, [r7, #8]
 8003504:	607a      	str	r2, [r7, #4]
 8003506:	461a      	mov	r2, r3
 8003508:	4603      	mov	r3, r0
 800350a:	73fb      	strb	r3, [r7, #15]
 800350c:	4613      	mov	r3, r2
 800350e:	73bb      	strb	r3, [r7, #14]
 8003510:	68bb      	ldr	r3, [r7, #8]
 8003512:	781b      	ldrb	r3, [r3, #0]
 8003514:	757b      	strb	r3, [r7, #21]
 8003516:	f000 f847 	bl	80035a8 <i2c_start>
 800351a:	7bfb      	ldrb	r3, [r7, #15]
 800351c:	005b      	lsls	r3, r3, #1
 800351e:	b2db      	uxtb	r3, r3
 8003520:	2100      	movs	r1, #0
 8003522:	4618      	mov	r0, r3
 8003524:	f000 f868 	bl	80035f8 <i2c_address_direction>
 8003528:	2301      	movs	r3, #1
 800352a:	75fb      	strb	r3, [r7, #23]
 800352c:	e009      	b.n	8003542 <i2c_read_reg_expand+0x46>
 800352e:	7dfb      	ldrb	r3, [r7, #23]
 8003530:	68ba      	ldr	r2, [r7, #8]
 8003532:	4413      	add	r3, r2
 8003534:	781b      	ldrb	r3, [r3, #0]
 8003536:	4618      	mov	r0, r3
 8003538:	f000 f88e 	bl	8003658 <i2c_transmit>
 800353c:	7dfb      	ldrb	r3, [r7, #23]
 800353e:	3301      	adds	r3, #1
 8003540:	75fb      	strb	r3, [r7, #23]
 8003542:	7dfa      	ldrb	r2, [r7, #23]
 8003544:	7d7b      	ldrb	r3, [r7, #21]
 8003546:	429a      	cmp	r2, r3
 8003548:	d3f1      	bcc.n	800352e <i2c_read_reg_expand+0x32>
 800354a:	f000 f84b 	bl	80035e4 <i2c_stop>
 800354e:	f000 f82b 	bl	80035a8 <i2c_start>
 8003552:	7bfb      	ldrb	r3, [r7, #15]
 8003554:	005b      	lsls	r3, r3, #1
 8003556:	b2db      	uxtb	r3, r3
 8003558:	2101      	movs	r1, #1
 800355a:	4618      	mov	r0, r3
 800355c:	f000 f84c 	bl	80035f8 <i2c_address_direction>
 8003560:	2300      	movs	r3, #0
 8003562:	75bb      	strb	r3, [r7, #22]
 8003564:	e016      	b.n	8003594 <i2c_read_reg_expand+0x98>
 8003566:	7dba      	ldrb	r2, [r7, #22]
 8003568:	7bbb      	ldrb	r3, [r7, #14]
 800356a:	3b01      	subs	r3, #1
 800356c:	429a      	cmp	r2, r3
 800356e:	d107      	bne.n	8003580 <i2c_read_reg_expand+0x84>
 8003570:	7dbb      	ldrb	r3, [r7, #22]
 8003572:	687a      	ldr	r2, [r7, #4]
 8003574:	18d4      	adds	r4, r2, r3
 8003576:	f000 f8a1 	bl	80036bc <i2c_receive_nack>
 800357a:	4603      	mov	r3, r0
 800357c:	7023      	strb	r3, [r4, #0]
 800357e:	e006      	b.n	800358e <i2c_read_reg_expand+0x92>
 8003580:	7dbb      	ldrb	r3, [r7, #22]
 8003582:	687a      	ldr	r2, [r7, #4]
 8003584:	18d4      	adds	r4, r2, r3
 8003586:	f000 f881 	bl	800368c <i2c_receive_ack>
 800358a:	4603      	mov	r3, r0
 800358c:	7023      	strb	r3, [r4, #0]
 800358e:	7dbb      	ldrb	r3, [r7, #22]
 8003590:	3301      	adds	r3, #1
 8003592:	75bb      	strb	r3, [r7, #22]
 8003594:	7dba      	ldrb	r2, [r7, #22]
 8003596:	7bbb      	ldrb	r3, [r7, #14]
 8003598:	429a      	cmp	r2, r3
 800359a:	d3e4      	bcc.n	8003566 <i2c_read_reg_expand+0x6a>
 800359c:	f000 f822 	bl	80035e4 <i2c_stop>
 80035a0:	bf00      	nop
 80035a2:	371c      	adds	r7, #28
 80035a4:	46bd      	mov	sp, r7
 80035a6:	bd90      	pop	{r4, r7, pc}

080035a8 <i2c_start>:
 80035a8:	b580      	push	{r7, lr}
 80035aa:	af00      	add	r7, sp, #0
 80035ac:	bf00      	nop
 80035ae:	f44f 3100 	mov.w	r1, #131072	@ 0x20000
 80035b2:	480a      	ldr	r0, [pc, #40]	@ (80035dc <i2c_start+0x34>)
 80035b4:	f002 fc74 	bl	8005ea0 <I2C_GetFlagStatus>
 80035b8:	4603      	mov	r3, r0
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	d1f7      	bne.n	80035ae <i2c_start+0x6>
 80035be:	2101      	movs	r1, #1
 80035c0:	4806      	ldr	r0, [pc, #24]	@ (80035dc <i2c_start+0x34>)
 80035c2:	f002 fba1 	bl	8005d08 <I2C_GenerateSTART>
 80035c6:	bf00      	nop
 80035c8:	4905      	ldr	r1, [pc, #20]	@ (80035e0 <i2c_start+0x38>)
 80035ca:	4804      	ldr	r0, [pc, #16]	@ (80035dc <i2c_start+0x34>)
 80035cc:	f002 fc38 	bl	8005e40 <I2C_CheckEvent>
 80035d0:	4603      	mov	r3, r0
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	d0f8      	beq.n	80035c8 <i2c_start+0x20>
 80035d6:	bf00      	nop
 80035d8:	bd80      	pop	{r7, pc}
 80035da:	bf00      	nop
 80035dc:	40005400 	.word	0x40005400
 80035e0:	00030001 	.word	0x00030001

080035e4 <i2c_stop>:
 80035e4:	b580      	push	{r7, lr}
 80035e6:	af00      	add	r7, sp, #0
 80035e8:	2101      	movs	r1, #1
 80035ea:	4802      	ldr	r0, [pc, #8]	@ (80035f4 <i2c_stop+0x10>)
 80035ec:	f002 fbac 	bl	8005d48 <I2C_GenerateSTOP>
 80035f0:	bf00      	nop
 80035f2:	bd80      	pop	{r7, pc}
 80035f4:	40005400 	.word	0x40005400

080035f8 <i2c_address_direction>:
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b082      	sub	sp, #8
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	4603      	mov	r3, r0
 8003600:	460a      	mov	r2, r1
 8003602:	71fb      	strb	r3, [r7, #7]
 8003604:	4613      	mov	r3, r2
 8003606:	71bb      	strb	r3, [r7, #6]
 8003608:	79ba      	ldrb	r2, [r7, #6]
 800360a:	79fb      	ldrb	r3, [r7, #7]
 800360c:	4619      	mov	r1, r3
 800360e:	480f      	ldr	r0, [pc, #60]	@ (800364c <i2c_address_direction+0x54>)
 8003610:	f002 fbba 	bl	8005d88 <I2C_Send7bitAddress>
 8003614:	79bb      	ldrb	r3, [r7, #6]
 8003616:	2b00      	cmp	r3, #0
 8003618:	d108      	bne.n	800362c <i2c_address_direction+0x34>
 800361a:	bf00      	nop
 800361c:	490c      	ldr	r1, [pc, #48]	@ (8003650 <i2c_address_direction+0x58>)
 800361e:	480b      	ldr	r0, [pc, #44]	@ (800364c <i2c_address_direction+0x54>)
 8003620:	f002 fc0e 	bl	8005e40 <I2C_CheckEvent>
 8003624:	4603      	mov	r3, r0
 8003626:	2b00      	cmp	r3, #0
 8003628:	d0f8      	beq.n	800361c <i2c_address_direction+0x24>
 800362a:	e00a      	b.n	8003642 <i2c_address_direction+0x4a>
 800362c:	79bb      	ldrb	r3, [r7, #6]
 800362e:	2b01      	cmp	r3, #1
 8003630:	d107      	bne.n	8003642 <i2c_address_direction+0x4a>
 8003632:	bf00      	nop
 8003634:	4907      	ldr	r1, [pc, #28]	@ (8003654 <i2c_address_direction+0x5c>)
 8003636:	4805      	ldr	r0, [pc, #20]	@ (800364c <i2c_address_direction+0x54>)
 8003638:	f002 fc02 	bl	8005e40 <I2C_CheckEvent>
 800363c:	4603      	mov	r3, r0
 800363e:	2b00      	cmp	r3, #0
 8003640:	d0f8      	beq.n	8003634 <i2c_address_direction+0x3c>
 8003642:	bf00      	nop
 8003644:	3708      	adds	r7, #8
 8003646:	46bd      	mov	sp, r7
 8003648:	bd80      	pop	{r7, pc}
 800364a:	bf00      	nop
 800364c:	40005400 	.word	0x40005400
 8003650:	00070082 	.word	0x00070082
 8003654:	00030002 	.word	0x00030002

08003658 <i2c_transmit>:
 8003658:	b580      	push	{r7, lr}
 800365a:	b082      	sub	sp, #8
 800365c:	af00      	add	r7, sp, #0
 800365e:	4603      	mov	r3, r0
 8003660:	71fb      	strb	r3, [r7, #7]
 8003662:	79fb      	ldrb	r3, [r7, #7]
 8003664:	4619      	mov	r1, r3
 8003666:	4807      	ldr	r0, [pc, #28]	@ (8003684 <i2c_transmit+0x2c>)
 8003668:	f002 fbcc 	bl	8005e04 <I2C_SendData>
 800366c:	bf00      	nop
 800366e:	4906      	ldr	r1, [pc, #24]	@ (8003688 <i2c_transmit+0x30>)
 8003670:	4804      	ldr	r0, [pc, #16]	@ (8003684 <i2c_transmit+0x2c>)
 8003672:	f002 fbe5 	bl	8005e40 <I2C_CheckEvent>
 8003676:	4603      	mov	r3, r0
 8003678:	2b00      	cmp	r3, #0
 800367a:	d0f8      	beq.n	800366e <i2c_transmit+0x16>
 800367c:	bf00      	nop
 800367e:	3708      	adds	r7, #8
 8003680:	46bd      	mov	sp, r7
 8003682:	bd80      	pop	{r7, pc}
 8003684:	40005400 	.word	0x40005400
 8003688:	00070084 	.word	0x00070084

0800368c <i2c_receive_ack>:
 800368c:	b580      	push	{r7, lr}
 800368e:	af00      	add	r7, sp, #0
 8003690:	2101      	movs	r1, #1
 8003692:	4808      	ldr	r0, [pc, #32]	@ (80036b4 <i2c_receive_ack+0x28>)
 8003694:	f002 fb96 	bl	8005dc4 <I2C_AcknowledgeConfig>
 8003698:	bf00      	nop
 800369a:	4907      	ldr	r1, [pc, #28]	@ (80036b8 <i2c_receive_ack+0x2c>)
 800369c:	4805      	ldr	r0, [pc, #20]	@ (80036b4 <i2c_receive_ack+0x28>)
 800369e:	f002 fbcf 	bl	8005e40 <I2C_CheckEvent>
 80036a2:	4603      	mov	r3, r0
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d0f8      	beq.n	800369a <i2c_receive_ack+0xe>
 80036a8:	4802      	ldr	r0, [pc, #8]	@ (80036b4 <i2c_receive_ack+0x28>)
 80036aa:	f002 fbbb 	bl	8005e24 <I2C_ReceiveData>
 80036ae:	4603      	mov	r3, r0
 80036b0:	4618      	mov	r0, r3
 80036b2:	bd80      	pop	{r7, pc}
 80036b4:	40005400 	.word	0x40005400
 80036b8:	00030040 	.word	0x00030040

080036bc <i2c_receive_nack>:
 80036bc:	b580      	push	{r7, lr}
 80036be:	af00      	add	r7, sp, #0
 80036c0:	2100      	movs	r1, #0
 80036c2:	4808      	ldr	r0, [pc, #32]	@ (80036e4 <i2c_receive_nack+0x28>)
 80036c4:	f002 fb7e 	bl	8005dc4 <I2C_AcknowledgeConfig>
 80036c8:	bf00      	nop
 80036ca:	4907      	ldr	r1, [pc, #28]	@ (80036e8 <i2c_receive_nack+0x2c>)
 80036cc:	4805      	ldr	r0, [pc, #20]	@ (80036e4 <i2c_receive_nack+0x28>)
 80036ce:	f002 fbb7 	bl	8005e40 <I2C_CheckEvent>
 80036d2:	4603      	mov	r3, r0
 80036d4:	2b00      	cmp	r3, #0
 80036d6:	d0f8      	beq.n	80036ca <i2c_receive_nack+0xe>
 80036d8:	4802      	ldr	r0, [pc, #8]	@ (80036e4 <i2c_receive_nack+0x28>)
 80036da:	f002 fba3 	bl	8005e24 <I2C_ReceiveData>
 80036de:	4603      	mov	r3, r0
 80036e0:	4618      	mov	r0, r3
 80036e2:	bd80      	pop	{r7, pc}
 80036e4:	40005400 	.word	0x40005400
 80036e8:	00030040 	.word	0x00030040

080036ec <Serial_SendPacket>:
 80036ec:	b580      	push	{r7, lr}
 80036ee:	b090      	sub	sp, #64	@ 0x40
 80036f0:	af00      	add	r7, sp, #0
 80036f2:	603b      	str	r3, [r7, #0]
 80036f4:	4603      	mov	r3, r0
 80036f6:	71fb      	strb	r3, [r7, #7]
 80036f8:	460b      	mov	r3, r1
 80036fa:	71bb      	strb	r3, [r7, #6]
 80036fc:	4613      	mov	r3, r2
 80036fe:	717b      	strb	r3, [r7, #5]
 8003700:	2300      	movs	r3, #0
 8003702:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f
 8003706:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800370a:	1c5a      	adds	r2, r3, #1
 800370c:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 8003710:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8003714:	4413      	add	r3, r2
 8003716:	22b1      	movs	r2, #177	@ 0xb1
 8003718:	f803 2c38 	strb.w	r2, [r3, #-56]
 800371c:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 8003720:	1c5a      	adds	r2, r3, #1
 8003722:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 8003726:	4619      	mov	r1, r3
 8003728:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 800372c:	3305      	adds	r3, #5
 800372e:	b2da      	uxtb	r2, r3
 8003730:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8003734:	440b      	add	r3, r1
 8003736:	f803 2c38 	strb.w	r2, [r3, #-56]
 800373a:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800373e:	1c5a      	adds	r2, r3, #1
 8003740:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 8003744:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8003748:	4413      	add	r3, r2
 800374a:	79fa      	ldrb	r2, [r7, #7]
 800374c:	f803 2c38 	strb.w	r2, [r3, #-56]
 8003750:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 8003754:	1c5a      	adds	r2, r3, #1
 8003756:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 800375a:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800375e:	4413      	add	r3, r2
 8003760:	79ba      	ldrb	r2, [r7, #6]
 8003762:	f803 2c38 	strb.w	r2, [r3, #-56]
 8003766:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800376a:	1c5a      	adds	r2, r3, #1
 800376c:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 8003770:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8003774:	4413      	add	r3, r2
 8003776:	797a      	ldrb	r2, [r7, #5]
 8003778:	f803 2c38 	strb.w	r2, [r3, #-56]
 800377c:	2300      	movs	r3, #0
 800377e:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 8003782:	e013      	b.n	80037ac <Serial_SendPacket+0xc0>
 8003784:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 8003788:	683a      	ldr	r2, [r7, #0]
 800378a:	441a      	add	r2, r3
 800378c:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 8003790:	1c59      	adds	r1, r3, #1
 8003792:	f887 103f 	strb.w	r1, [r7, #63]	@ 0x3f
 8003796:	7812      	ldrb	r2, [r2, #0]
 8003798:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 800379c:	440b      	add	r3, r1
 800379e:	f803 2c38 	strb.w	r2, [r3, #-56]
 80037a2:	f897 303e 	ldrb.w	r3, [r7, #62]	@ 0x3e
 80037a6:	3301      	adds	r3, #1
 80037a8:	f887 303e 	strb.w	r3, [r7, #62]	@ 0x3e
 80037ac:	f897 203e 	ldrb.w	r2, [r7, #62]	@ 0x3e
 80037b0:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 80037b4:	429a      	cmp	r2, r3
 80037b6:	d3e5      	bcc.n	8003784 <Serial_SendPacket+0x98>
 80037b8:	4b2c      	ldr	r3, [pc, #176]	@ (800386c <Serial_SendPacket+0x180>)
 80037ba:	781b      	ldrb	r3, [r3, #0]
 80037bc:	1c5a      	adds	r2, r3, #1
 80037be:	b2d1      	uxtb	r1, r2
 80037c0:	4a2a      	ldr	r2, [pc, #168]	@ (800386c <Serial_SendPacket+0x180>)
 80037c2:	7011      	strb	r1, [r2, #0]
 80037c4:	f897 203f 	ldrb.w	r2, [r7, #63]	@ 0x3f
 80037c8:	1c51      	adds	r1, r2, #1
 80037ca:	f887 103f 	strb.w	r1, [r7, #63]	@ 0x3f
 80037ce:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 80037d2:	440a      	add	r2, r1
 80037d4:	f802 3c38 	strb.w	r3, [r2, #-56]
 80037d8:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 80037dc:	3b02      	subs	r3, #2
 80037de:	b2da      	uxtb	r2, r3
 80037e0:	f107 0308 	add.w	r3, r7, #8
 80037e4:	3302      	adds	r3, #2
 80037e6:	4611      	mov	r1, r2
 80037e8:	4618      	mov	r0, r3
 80037ea:	f000 f843 	bl	8003874 <CalculateCheckXOR>
 80037ee:	4603      	mov	r3, r0
 80037f0:	f887 303c 	strb.w	r3, [r7, #60]	@ 0x3c
 80037f4:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 80037f8:	1c5a      	adds	r2, r3, #1
 80037fa:	f887 203f 	strb.w	r2, [r7, #63]	@ 0x3f
 80037fe:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 8003802:	4413      	add	r3, r2
 8003804:	f897 203c 	ldrb.w	r2, [r7, #60]	@ 0x3c
 8003808:	f803 2c38 	strb.w	r2, [r3, #-56]
 800380c:	2300      	movs	r3, #0
 800380e:	f887 303d 	strb.w	r3, [r7, #61]	@ 0x3d
 8003812:	e020      	b.n	8003856 <Serial_SendPacket+0x16a>
 8003814:	bf00      	nop
 8003816:	2180      	movs	r1, #128	@ 0x80
 8003818:	4815      	ldr	r0, [pc, #84]	@ (8003870 <Serial_SendPacket+0x184>)
 800381a:	f7fe fbd3 	bl	8001fc4 <USART_GetFlagStatus>
 800381e:	4603      	mov	r3, r0
 8003820:	2b00      	cmp	r3, #0
 8003822:	d0f8      	beq.n	8003816 <Serial_SendPacket+0x12a>
 8003824:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
 8003828:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800382c:	4413      	add	r3, r2
 800382e:	f813 3c38 	ldrb.w	r3, [r3, #-56]
 8003832:	b29b      	uxth	r3, r3
 8003834:	4619      	mov	r1, r3
 8003836:	480e      	ldr	r0, [pc, #56]	@ (8003870 <Serial_SendPacket+0x184>)
 8003838:	f7fe fb5a 	bl	8001ef0 <USART_SendData>
 800383c:	bf00      	nop
 800383e:	2140      	movs	r1, #64	@ 0x40
 8003840:	480b      	ldr	r0, [pc, #44]	@ (8003870 <Serial_SendPacket+0x184>)
 8003842:	f7fe fbbf 	bl	8001fc4 <USART_GetFlagStatus>
 8003846:	4603      	mov	r3, r0
 8003848:	2b00      	cmp	r3, #0
 800384a:	d0f8      	beq.n	800383e <Serial_SendPacket+0x152>
 800384c:	f897 303d 	ldrb.w	r3, [r7, #61]	@ 0x3d
 8003850:	3301      	adds	r3, #1
 8003852:	f887 303d 	strb.w	r3, [r7, #61]	@ 0x3d
 8003856:	f897 203d 	ldrb.w	r2, [r7, #61]	@ 0x3d
 800385a:	f897 303f 	ldrb.w	r3, [r7, #63]	@ 0x3f
 800385e:	429a      	cmp	r2, r3
 8003860:	d3d8      	bcc.n	8003814 <Serial_SendPacket+0x128>
 8003862:	bf00      	nop
 8003864:	3740      	adds	r7, #64	@ 0x40
 8003866:	46bd      	mov	sp, r7
 8003868:	bd80      	pop	{r7, pc}
 800386a:	bf00      	nop
 800386c:	200005e6 	.word	0x200005e6
 8003870:	40004400 	.word	0x40004400

08003874 <CalculateCheckXOR>:
 8003874:	b480      	push	{r7}
 8003876:	b085      	sub	sp, #20
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	460b      	mov	r3, r1
 800387e:	70fb      	strb	r3, [r7, #3]
 8003880:	23ff      	movs	r3, #255	@ 0xff
 8003882:	73fb      	strb	r3, [r7, #15]
 8003884:	2300      	movs	r3, #0
 8003886:	73bb      	strb	r3, [r7, #14]
 8003888:	e00a      	b.n	80038a0 <CalculateCheckXOR+0x2c>
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	781a      	ldrb	r2, [r3, #0]
 800388e:	7bfb      	ldrb	r3, [r7, #15]
 8003890:	4053      	eors	r3, r2
 8003892:	73fb      	strb	r3, [r7, #15]
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	3301      	adds	r3, #1
 8003898:	607b      	str	r3, [r7, #4]
 800389a:	7bbb      	ldrb	r3, [r7, #14]
 800389c:	3301      	adds	r3, #1
 800389e:	73bb      	strb	r3, [r7, #14]
 80038a0:	7bba      	ldrb	r2, [r7, #14]
 80038a2:	78fb      	ldrb	r3, [r7, #3]
 80038a4:	429a      	cmp	r2, r3
 80038a6:	d3f0      	bcc.n	800388a <CalculateCheckXOR+0x16>
 80038a8:	7bfb      	ldrb	r3, [r7, #15]
 80038aa:	4618      	mov	r0, r3
 80038ac:	3714      	adds	r7, #20
 80038ae:	46bd      	mov	sp, r7
 80038b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b4:	4770      	bx	lr

080038b6 <delayMicroseconds>:
 80038b6:	b480      	push	{r7}
 80038b8:	b083      	sub	sp, #12
 80038ba:	af00      	add	r7, sp, #0
 80038bc:	6078      	str	r0, [r7, #4]
 80038be:	bf00      	nop
 80038c0:	370c      	adds	r7, #12
 80038c2:	46bd      	mov	sp, r7
 80038c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038c8:	4770      	bx	lr
	...

080038cc <ucg_gpio_init>:
 80038cc:	b580      	push	{r7, lr}
 80038ce:	b082      	sub	sp, #8
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	2101      	movs	r1, #1
 80038d4:	2007      	movs	r0, #7
 80038d6:	f7fe f9b1 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 80038da:	2301      	movs	r3, #1
 80038dc:	713b      	strb	r3, [r7, #4]
 80038de:	2303      	movs	r3, #3
 80038e0:	717b      	strb	r3, [r7, #5]
 80038e2:	2300      	movs	r3, #0
 80038e4:	71bb      	strb	r3, [r7, #6]
 80038e6:	2300      	movs	r3, #0
 80038e8:	71fb      	strb	r3, [r7, #7]
 80038ea:	f44f 7368 	mov.w	r3, #928	@ 0x3a0
 80038ee:	603b      	str	r3, [r7, #0]
 80038f0:	463b      	mov	r3, r7
 80038f2:	4619      	mov	r1, r3
 80038f4:	480a      	ldr	r0, [pc, #40]	@ (8003920 <ucg_gpio_init+0x54>)
 80038f6:	f7fd ffd1 	bl	800189c <GPIO_Init>
 80038fa:	f44f 6388 	mov.w	r3, #1088	@ 0x440
 80038fe:	603b      	str	r3, [r7, #0]
 8003900:	463b      	mov	r3, r7
 8003902:	4619      	mov	r1, r3
 8003904:	4807      	ldr	r0, [pc, #28]	@ (8003924 <ucg_gpio_init+0x58>)
 8003906:	f7fd ffc9 	bl	800189c <GPIO_Init>
 800390a:	2380      	movs	r3, #128	@ 0x80
 800390c:	603b      	str	r3, [r7, #0]
 800390e:	463b      	mov	r3, r7
 8003910:	4619      	mov	r1, r3
 8003912:	4805      	ldr	r0, [pc, #20]	@ (8003928 <ucg_gpio_init+0x5c>)
 8003914:	f7fd ffc2 	bl	800189c <GPIO_Init>
 8003918:	bf00      	nop
 800391a:	3708      	adds	r7, #8
 800391c:	46bd      	mov	sp, r7
 800391e:	bd80      	pop	{r7, pc}
 8003920:	40020000 	.word	0x40020000
 8003924:	40020400 	.word	0x40020400
 8003928:	40020800 	.word	0x40020800

0800392c <ucg_com_arduino_send_generic_SW_SPI>:
 800392c:	b580      	push	{r7, lr}
 800392e:	b084      	sub	sp, #16
 8003930:	af00      	add	r7, sp, #0
 8003932:	6078      	str	r0, [r7, #4]
 8003934:	460b      	mov	r3, r1
 8003936:	70fb      	strb	r3, [r7, #3]
 8003938:	2308      	movs	r3, #8
 800393a:	73fb      	strb	r3, [r7, #15]
 800393c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8003940:	2b00      	cmp	r3, #0
 8003942:	da05      	bge.n	8003950 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8003944:	2201      	movs	r2, #1
 8003946:	2180      	movs	r1, #128	@ 0x80
 8003948:	4814      	ldr	r0, [pc, #80]	@ (800399c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800394a:	f7fe f86d 	bl	8001a28 <GPIO_WriteBit>
 800394e:	e004      	b.n	800395a <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8003950:	2200      	movs	r2, #0
 8003952:	2180      	movs	r1, #128	@ 0x80
 8003954:	4811      	ldr	r0, [pc, #68]	@ (800399c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8003956:	f7fe f867 	bl	8001a28 <GPIO_WriteBit>
 800395a:	2001      	movs	r0, #1
 800395c:	f7ff ffab 	bl	80038b6 <delayMicroseconds>
 8003960:	2201      	movs	r2, #1
 8003962:	2120      	movs	r1, #32
 8003964:	480d      	ldr	r0, [pc, #52]	@ (800399c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8003966:	f7fe f85f 	bl	8001a28 <GPIO_WriteBit>
 800396a:	2001      	movs	r0, #1
 800396c:	f7ff ffa3 	bl	80038b6 <delayMicroseconds>
 8003970:	7bfb      	ldrb	r3, [r7, #15]
 8003972:	3b01      	subs	r3, #1
 8003974:	73fb      	strb	r3, [r7, #15]
 8003976:	2200      	movs	r2, #0
 8003978:	2120      	movs	r1, #32
 800397a:	4808      	ldr	r0, [pc, #32]	@ (800399c <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 800397c:	f7fe f854 	bl	8001a28 <GPIO_WriteBit>
 8003980:	2001      	movs	r0, #1
 8003982:	f7ff ff98 	bl	80038b6 <delayMicroseconds>
 8003986:	78fb      	ldrb	r3, [r7, #3]
 8003988:	005b      	lsls	r3, r3, #1
 800398a:	70fb      	strb	r3, [r7, #3]
 800398c:	7bfb      	ldrb	r3, [r7, #15]
 800398e:	2b00      	cmp	r3, #0
 8003990:	d1d4      	bne.n	800393c <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8003992:	bf00      	nop
 8003994:	3710      	adds	r7, #16
 8003996:	46bd      	mov	sp, r7
 8003998:	bd80      	pop	{r7, pc}
 800399a:	bf00      	nop
 800399c:	40020000 	.word	0x40020000

080039a0 <ucg_com_arduino_generic_SW_SPI>:
 80039a0:	b580      	push	{r7, lr}
 80039a2:	b084      	sub	sp, #16
 80039a4:	af00      	add	r7, sp, #0
 80039a6:	60f8      	str	r0, [r7, #12]
 80039a8:	607b      	str	r3, [r7, #4]
 80039aa:	460b      	mov	r3, r1
 80039ac:	817b      	strh	r3, [r7, #10]
 80039ae:	4613      	mov	r3, r2
 80039b0:	813b      	strh	r3, [r7, #8]
 80039b2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80039b6:	3b0a      	subs	r3, #10
 80039b8:	2b0b      	cmp	r3, #11
 80039ba:	f200 80dc 	bhi.w	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 80039be:	a201      	add	r2, pc, #4	@ (adr r2, 80039c4 <ucg_com_arduino_generic_SW_SPI+0x24>)
 80039c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039c4:	080039f5 	.word	0x080039f5
 80039c8:	08003b77 	.word	0x08003b77
 80039cc:	08003a47 	.word	0x08003a47
 80039d0:	08003a51 	.word	0x08003a51
 80039d4:	08003a61 	.word	0x08003a61
 80039d8:	08003a71 	.word	0x08003a71
 80039dc:	08003a83 	.word	0x08003a83
 80039e0:	08003aa3 	.word	0x08003aa3
 80039e4:	08003acb 	.word	0x08003acb
 80039e8:	08003b01 	.word	0x08003b01
 80039ec:	08003b1f 	.word	0x08003b1f
 80039f0:	08003b6f 	.word	0x08003b6f
 80039f4:	f7ff ff6a 	bl	80038cc <ucg_gpio_init>
 80039f8:	2201      	movs	r2, #1
 80039fa:	2180      	movs	r1, #128	@ 0x80
 80039fc:	4860      	ldr	r0, [pc, #384]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 80039fe:	f7fe f813 	bl	8001a28 <GPIO_WriteBit>
 8003a02:	2201      	movs	r2, #1
 8003a04:	2140      	movs	r1, #64	@ 0x40
 8003a06:	485f      	ldr	r0, [pc, #380]	@ (8003b84 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8003a08:	f7fe f80e 	bl	8001a28 <GPIO_WriteBit>
 8003a0c:	2201      	movs	r2, #1
 8003a0e:	2180      	movs	r1, #128	@ 0x80
 8003a10:	485d      	ldr	r0, [pc, #372]	@ (8003b88 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8003a12:	f7fe f809 	bl	8001a28 <GPIO_WriteBit>
 8003a16:	2201      	movs	r2, #1
 8003a18:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003a1c:	4858      	ldr	r0, [pc, #352]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003a1e:	f7fe f803 	bl	8001a28 <GPIO_WriteBit>
 8003a22:	2200      	movs	r2, #0
 8003a24:	2120      	movs	r1, #32
 8003a26:	4856      	ldr	r0, [pc, #344]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003a28:	f7fd fffe 	bl	8001a28 <GPIO_WriteBit>
 8003a2c:	2201      	movs	r2, #1
 8003a2e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8003a32:	4854      	ldr	r0, [pc, #336]	@ (8003b84 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8003a34:	f7fd fff8 	bl	8001a28 <GPIO_WriteBit>
 8003a38:	2201      	movs	r2, #1
 8003a3a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003a3e:	4850      	ldr	r0, [pc, #320]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003a40:	f7fd fff2 	bl	8001a28 <GPIO_WriteBit>
 8003a44:	e097      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a46:	893b      	ldrh	r3, [r7, #8]
 8003a48:	4618      	mov	r0, r3
 8003a4a:	f7ff ff34 	bl	80038b6 <delayMicroseconds>
 8003a4e:	e092      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a50:	893b      	ldrh	r3, [r7, #8]
 8003a52:	b2db      	uxtb	r3, r3
 8003a54:	461a      	mov	r2, r3
 8003a56:	2180      	movs	r1, #128	@ 0x80
 8003a58:	484b      	ldr	r0, [pc, #300]	@ (8003b88 <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8003a5a:	f7fd ffe5 	bl	8001a28 <GPIO_WriteBit>
 8003a5e:	e08a      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a60:	893b      	ldrh	r3, [r7, #8]
 8003a62:	b2db      	uxtb	r3, r3
 8003a64:	461a      	mov	r2, r3
 8003a66:	2140      	movs	r1, #64	@ 0x40
 8003a68:	4846      	ldr	r0, [pc, #280]	@ (8003b84 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8003a6a:	f7fd ffdd 	bl	8001a28 <GPIO_WriteBit>
 8003a6e:	e082      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a70:	893b      	ldrh	r3, [r7, #8]
 8003a72:	b2db      	uxtb	r3, r3
 8003a74:	461a      	mov	r2, r3
 8003a76:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003a7a:	4841      	ldr	r0, [pc, #260]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003a7c:	f7fd ffd4 	bl	8001a28 <GPIO_WriteBit>
 8003a80:	e079      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a82:	893b      	ldrh	r3, [r7, #8]
 8003a84:	b2db      	uxtb	r3, r3
 8003a86:	4619      	mov	r1, r3
 8003a88:	68f8      	ldr	r0, [r7, #12]
 8003a8a:	f7ff ff4f 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003a8e:	e072      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	781b      	ldrb	r3, [r3, #0]
 8003a94:	4619      	mov	r1, r3
 8003a96:	68f8      	ldr	r0, [r7, #12]
 8003a98:	f7ff ff48 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003a9c:	893b      	ldrh	r3, [r7, #8]
 8003a9e:	3b01      	subs	r3, #1
 8003aa0:	813b      	strh	r3, [r7, #8]
 8003aa2:	893b      	ldrh	r3, [r7, #8]
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d1f3      	bne.n	8003a90 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8003aa8:	e065      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	781b      	ldrb	r3, [r3, #0]
 8003aae:	4619      	mov	r1, r3
 8003ab0:	68f8      	ldr	r0, [r7, #12]
 8003ab2:	f7ff ff3b 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	3301      	adds	r3, #1
 8003aba:	781b      	ldrb	r3, [r3, #0]
 8003abc:	4619      	mov	r1, r3
 8003abe:	68f8      	ldr	r0, [r7, #12]
 8003ac0:	f7ff ff34 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003ac4:	893b      	ldrh	r3, [r7, #8]
 8003ac6:	3b01      	subs	r3, #1
 8003ac8:	813b      	strh	r3, [r7, #8]
 8003aca:	893b      	ldrh	r3, [r7, #8]
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d1ec      	bne.n	8003aaa <ucg_com_arduino_generic_SW_SPI+0x10a>
 8003ad0:	e051      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	781b      	ldrb	r3, [r3, #0]
 8003ad6:	4619      	mov	r1, r3
 8003ad8:	68f8      	ldr	r0, [r7, #12]
 8003ada:	f7ff ff27 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	3301      	adds	r3, #1
 8003ae2:	781b      	ldrb	r3, [r3, #0]
 8003ae4:	4619      	mov	r1, r3
 8003ae6:	68f8      	ldr	r0, [r7, #12]
 8003ae8:	f7ff ff20 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	3302      	adds	r3, #2
 8003af0:	781b      	ldrb	r3, [r3, #0]
 8003af2:	4619      	mov	r1, r3
 8003af4:	68f8      	ldr	r0, [r7, #12]
 8003af6:	f7ff ff19 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003afa:	893b      	ldrh	r3, [r7, #8]
 8003afc:	3b01      	subs	r3, #1
 8003afe:	813b      	strh	r3, [r7, #8]
 8003b00:	893b      	ldrh	r3, [r7, #8]
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d1e5      	bne.n	8003ad2 <ucg_com_arduino_generic_SW_SPI+0x132>
 8003b06:	e036      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	1c5a      	adds	r2, r3, #1
 8003b0c:	607a      	str	r2, [r7, #4]
 8003b0e:	781b      	ldrb	r3, [r3, #0]
 8003b10:	4619      	mov	r1, r3
 8003b12:	68f8      	ldr	r0, [r7, #12]
 8003b14:	f7ff ff0a 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003b18:	893b      	ldrh	r3, [r7, #8]
 8003b1a:	3b01      	subs	r3, #1
 8003b1c:	813b      	strh	r3, [r7, #8]
 8003b1e:	893b      	ldrh	r3, [r7, #8]
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	d1f1      	bne.n	8003b08 <ucg_com_arduino_generic_SW_SPI+0x168>
 8003b24:	e027      	b.n	8003b76 <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	781b      	ldrb	r3, [r3, #0]
 8003b2a:	2b00      	cmp	r3, #0
 8003b2c:	d010      	beq.n	8003b50 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	781b      	ldrb	r3, [r3, #0]
 8003b32:	2b01      	cmp	r3, #1
 8003b34:	d106      	bne.n	8003b44 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8003b36:	2200      	movs	r2, #0
 8003b38:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003b3c:	4810      	ldr	r0, [pc, #64]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003b3e:	f7fd ff73 	bl	8001a28 <GPIO_WriteBit>
 8003b42:	e005      	b.n	8003b50 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8003b44:	2201      	movs	r2, #1
 8003b46:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8003b4a:	480d      	ldr	r0, [pc, #52]	@ (8003b80 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8003b4c:	f7fd ff6c 	bl	8001a28 <GPIO_WriteBit>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	3301      	adds	r3, #1
 8003b54:	607b      	str	r3, [r7, #4]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	781b      	ldrb	r3, [r3, #0]
 8003b5a:	4619      	mov	r1, r3
 8003b5c:	68f8      	ldr	r0, [r7, #12]
 8003b5e:	f7ff fee5 	bl	800392c <ucg_com_arduino_send_generic_SW_SPI>
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	3301      	adds	r3, #1
 8003b66:	607b      	str	r3, [r7, #4]
 8003b68:	893b      	ldrh	r3, [r7, #8]
 8003b6a:	3b01      	subs	r3, #1
 8003b6c:	813b      	strh	r3, [r7, #8]
 8003b6e:	893b      	ldrh	r3, [r7, #8]
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d1d8      	bne.n	8003b26 <ucg_com_arduino_generic_SW_SPI+0x186>
 8003b74:	bf00      	nop
 8003b76:	2301      	movs	r3, #1
 8003b78:	4618      	mov	r0, r3
 8003b7a:	3710      	adds	r7, #16
 8003b7c:	46bd      	mov	sp, r7
 8003b7e:	bd80      	pop	{r7, pc}
 8003b80:	40020000 	.word	0x40020000
 8003b84:	40020400 	.word	0x40020400
 8003b88:	40020800 	.word	0x40020800

08003b8c <Ucglib4WireSWSPI_begin>:
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b082      	sub	sp, #8
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
 8003b94:	460b      	mov	r3, r1
 8003b96:	70fb      	strb	r3, [r7, #3]
 8003b98:	4b07      	ldr	r3, [pc, #28]	@ (8003bb8 <Ucglib4WireSWSPI_begin+0x2c>)
 8003b9a:	4a08      	ldr	r2, [pc, #32]	@ (8003bbc <Ucglib4WireSWSPI_begin+0x30>)
 8003b9c:	4908      	ldr	r1, [pc, #32]	@ (8003bc0 <Ucglib4WireSWSPI_begin+0x34>)
 8003b9e:	6878      	ldr	r0, [r7, #4]
 8003ba0:	f001 f9a2 	bl	8004ee8 <ucg_Init>
 8003ba4:	78fb      	ldrb	r3, [r7, #3]
 8003ba6:	4619      	mov	r1, r3
 8003ba8:	6878      	ldr	r0, [r7, #4]
 8003baa:	f000 ff86 	bl	8004aba <ucg_SetFontMode>
 8003bae:	bf00      	nop
 8003bb0:	3708      	adds	r7, #8
 8003bb2:	46bd      	mov	sp, r7
 8003bb4:	bd80      	pop	{r7, pc}
 8003bb6:	bf00      	nop
 8003bb8:	080039a1 	.word	0x080039a1
 8003bbc:	080041f9 	.word	0x080041f9
 8003bc0:	08004321 	.word	0x08004321

08003bc4 <ucg_DrawBox>:
 8003bc4:	b580      	push	{r7, lr}
 8003bc6:	b084      	sub	sp, #16
 8003bc8:	af00      	add	r7, sp, #0
 8003bca:	60f8      	str	r0, [r7, #12]
 8003bcc:	4608      	mov	r0, r1
 8003bce:	4611      	mov	r1, r2
 8003bd0:	461a      	mov	r2, r3
 8003bd2:	4603      	mov	r3, r0
 8003bd4:	817b      	strh	r3, [r7, #10]
 8003bd6:	460b      	mov	r3, r1
 8003bd8:	813b      	strh	r3, [r7, #8]
 8003bda:	4613      	mov	r3, r2
 8003bdc:	80fb      	strh	r3, [r7, #6]
 8003bde:	e014      	b.n	8003c0a <ucg_DrawBox+0x46>
 8003be0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003be4:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003be8:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003bec:	68f8      	ldr	r0, [r7, #12]
 8003bee:	f001 f9ed 	bl	8004fcc <ucg_DrawHLine>
 8003bf2:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8003bf6:	b29b      	uxth	r3, r3
 8003bf8:	3b01      	subs	r3, #1
 8003bfa:	b29b      	uxth	r3, r3
 8003bfc:	833b      	strh	r3, [r7, #24]
 8003bfe:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8003c02:	b29b      	uxth	r3, r3
 8003c04:	3301      	adds	r3, #1
 8003c06:	b29b      	uxth	r3, r3
 8003c08:	813b      	strh	r3, [r7, #8]
 8003c0a:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	dce6      	bgt.n	8003be0 <ucg_DrawBox+0x1c>
 8003c12:	bf00      	nop
 8003c14:	3710      	adds	r7, #16
 8003c16:	46bd      	mov	sp, r7
 8003c18:	bd80      	pop	{r7, pc}

08003c1a <ucg_ClearScreen>:
 8003c1a:	b580      	push	{r7, lr}
 8003c1c:	b084      	sub	sp, #16
 8003c1e:	af02      	add	r7, sp, #8
 8003c20:	6078      	str	r0, [r7, #4]
 8003c22:	2300      	movs	r3, #0
 8003c24:	9300      	str	r3, [sp, #0]
 8003c26:	2300      	movs	r3, #0
 8003c28:	2200      	movs	r2, #0
 8003c2a:	2100      	movs	r1, #0
 8003c2c:	6878      	ldr	r0, [r7, #4]
 8003c2e:	f001 f9ec 	bl	800500a <ucg_SetColor>
 8003c32:	6878      	ldr	r0, [r7, #4]
 8003c34:	f000 fb3b 	bl	80042ae <ucg_SetMaxClipRange>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003c44:	9300      	str	r3, [sp, #0]
 8003c46:	4613      	mov	r3, r2
 8003c48:	2200      	movs	r2, #0
 8003c4a:	2100      	movs	r1, #0
 8003c4c:	6878      	ldr	r0, [r7, #4]
 8003c4e:	f7ff ffb9 	bl	8003bc4 <ucg_DrawBox>
 8003c52:	23ff      	movs	r3, #255	@ 0xff
 8003c54:	9300      	str	r3, [sp, #0]
 8003c56:	23ff      	movs	r3, #255	@ 0xff
 8003c58:	22ff      	movs	r2, #255	@ 0xff
 8003c5a:	2100      	movs	r1, #0
 8003c5c:	6878      	ldr	r0, [r7, #4]
 8003c5e:	f001 f9d4 	bl	800500a <ucg_SetColor>
 8003c62:	bf00      	nop
 8003c64:	3708      	adds	r7, #8
 8003c66:	46bd      	mov	sp, r7
 8003c68:	bd80      	pop	{r7, pc}

08003c6a <ucg_ccs_init>:
 8003c6a:	b480      	push	{r7}
 8003c6c:	b083      	sub	sp, #12
 8003c6e:	af00      	add	r7, sp, #0
 8003c70:	6078      	str	r0, [r7, #4]
 8003c72:	4608      	mov	r0, r1
 8003c74:	4611      	mov	r1, r2
 8003c76:	461a      	mov	r2, r3
 8003c78:	4603      	mov	r3, r0
 8003c7a:	70fb      	strb	r3, [r7, #3]
 8003c7c:	460b      	mov	r3, r1
 8003c7e:	70bb      	strb	r3, [r7, #2]
 8003c80:	4613      	mov	r3, r2
 8003c82:	803b      	strh	r3, [r7, #0]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	78fa      	ldrb	r2, [r7, #3]
 8003c88:	705a      	strb	r2, [r3, #1]
 8003c8a:	78bb      	ldrb	r3, [r7, #2]
 8003c8c:	b29a      	uxth	r2, r3
 8003c8e:	78fb      	ldrb	r3, [r7, #3]
 8003c90:	b29b      	uxth	r3, r3
 8003c92:	1ad3      	subs	r3, r2, r3
 8003c94:	b29b      	uxth	r3, r3
 8003c96:	b21a      	sxth	r2, r3
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	809a      	strh	r2, [r3, #4]
 8003c9c:	883b      	ldrh	r3, [r7, #0]
 8003c9e:	3b01      	subs	r3, #1
 8003ca0:	b29b      	uxth	r3, r3
 8003ca2:	b21a      	sxth	r2, r3
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	811a      	strh	r2, [r3, #8]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	2201      	movs	r2, #1
 8003cac:	805a      	strh	r2, [r3, #2]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003cb4:	461a      	mov	r2, r3
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003cbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8003cc0:	b21a      	sxth	r2, r3
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	80da      	strh	r2, [r3, #6]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	da0c      	bge.n	8003cea <ucg_ccs_init+0x80>
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003cd6:	b29b      	uxth	r3, r3
 8003cd8:	425b      	negs	r3, r3
 8003cda:	b29b      	uxth	r3, r3
 8003cdc:	b21a      	sxth	r2, r3
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	809a      	strh	r2, [r3, #4]
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003ce8:	805a      	strh	r2, [r3, #2]
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003cf0:	687a      	ldr	r2, [r7, #4]
 8003cf2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8003cf6:	fb93 f1f2 	sdiv	r1, r3, r2
 8003cfa:	fb02 f201 	mul.w	r2, r2, r1
 8003cfe:	1a9b      	subs	r3, r3, r2
 8003d00:	b21a      	sxth	r2, r3
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	815a      	strh	r2, [r3, #10]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003d0c:	0fda      	lsrs	r2, r3, #31
 8003d0e:	4413      	add	r3, r2
 8003d10:	105b      	asrs	r3, r3, #1
 8003d12:	b21a      	sxth	r2, r3
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	819a      	strh	r2, [r3, #12]
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	78fa      	ldrb	r2, [r7, #3]
 8003d1c:	701a      	strb	r2, [r3, #0]
 8003d1e:	bf00      	nop
 8003d20:	370c      	adds	r7, #12
 8003d22:	46bd      	mov	sp, r7
 8003d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d28:	4770      	bx	lr

08003d2a <ucg_ccs_step>:
 8003d2a:	b480      	push	{r7}
 8003d2c:	b083      	sub	sp, #12
 8003d2e:	af00      	add	r7, sp, #0
 8003d30:	6078      	str	r0, [r7, #4]
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	781a      	ldrb	r2, [r3, #0]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003d3c:	b2db      	uxtb	r3, r3
 8003d3e:	4413      	add	r3, r2
 8003d40:	b2da      	uxtb	r2, r3
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	701a      	strb	r2, [r3, #0]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003d4c:	b29a      	uxth	r2, r3
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8003d54:	b29b      	uxth	r3, r3
 8003d56:	4413      	add	r3, r2
 8003d58:	b29b      	uxth	r3, r3
 8003d5a:	b21a      	sxth	r2, r3
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	819a      	strh	r2, [r3, #12]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003d6c:	429a      	cmp	r2, r3
 8003d6e:	db16      	blt.n	8003d9e <ucg_ccs_step+0x74>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	781a      	ldrb	r2, [r3, #0]
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003d7a:	b2db      	uxtb	r3, r3
 8003d7c:	4413      	add	r3, r2
 8003d7e:	b2da      	uxtb	r2, r3
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	701a      	strb	r2, [r3, #0]
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8003d8a:	b29a      	uxth	r2, r3
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003d92:	b29b      	uxth	r3, r3
 8003d94:	1ad3      	subs	r3, r2, r3
 8003d96:	b29b      	uxth	r3, r3
 8003d98:	b21a      	sxth	r2, r3
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	819a      	strh	r2, [r3, #12]
 8003d9e:	bf00      	nop
 8003da0:	370c      	adds	r7, #12
 8003da2:	46bd      	mov	sp, r7
 8003da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da8:	4770      	bx	lr

08003daa <ucg_ccs_seek>:
 8003daa:	b480      	push	{r7}
 8003dac:	b085      	sub	sp, #20
 8003dae:	af00      	add	r7, sp, #0
 8003db0:	6078      	str	r0, [r7, #4]
 8003db2:	460b      	mov	r3, r1
 8003db4:	807b      	strh	r3, [r7, #2]
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003dbc:	b2da      	uxtb	r2, r3
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	701a      	strb	r2, [r3, #0]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	781a      	ldrb	r2, [r3, #0]
 8003dc6:	887b      	ldrh	r3, [r7, #2]
 8003dc8:	b2db      	uxtb	r3, r3
 8003dca:	fb12 f303 	smulbb	r3, r2, r3
 8003dce:	b2da      	uxtb	r2, r3
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	701a      	strb	r2, [r3, #0]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8003dda:	b29a      	uxth	r2, r3
 8003ddc:	887b      	ldrh	r3, [r7, #2]
 8003dde:	fb12 f303 	smulbb	r3, r2, r3
 8003de2:	b29a      	uxth	r2, r3
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003dea:	0fd9      	lsrs	r1, r3, #31
 8003dec:	440b      	add	r3, r1
 8003dee:	105b      	asrs	r3, r3, #1
 8003df0:	b21b      	sxth	r3, r3
 8003df2:	b29b      	uxth	r3, r3
 8003df4:	4413      	add	r3, r2
 8003df6:	b29b      	uxth	r3, r3
 8003df8:	81fb      	strh	r3, [r7, #14]
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	db0e      	blt.n	8003e22 <ucg_ccs_seek+0x78>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	781a      	ldrb	r2, [r3, #0]
 8003e08:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e0c:	6879      	ldr	r1, [r7, #4]
 8003e0e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8003e12:	fb93 f3f1 	sdiv	r3, r3, r1
 8003e16:	b2db      	uxtb	r3, r3
 8003e18:	4413      	add	r3, r2
 8003e1a:	b2da      	uxtb	r2, r3
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	701a      	strb	r2, [r3, #0]
 8003e20:	e00d      	b.n	8003e3e <ucg_ccs_seek+0x94>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	781a      	ldrb	r2, [r3, #0]
 8003e26:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e2a:	6879      	ldr	r1, [r7, #4]
 8003e2c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8003e30:	fb93 f3f1 	sdiv	r3, r3, r1
 8003e34:	b2db      	uxtb	r3, r3
 8003e36:	1ad3      	subs	r3, r2, r3
 8003e38:	b2da      	uxtb	r2, r3
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	701a      	strb	r2, [r3, #0]
 8003e3e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003e42:	687a      	ldr	r2, [r7, #4]
 8003e44:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8003e48:	fb93 f1f2 	sdiv	r1, r3, r2
 8003e4c:	fb02 f201 	mul.w	r2, r2, r1
 8003e50:	1a9b      	subs	r3, r3, r2
 8003e52:	b21a      	sxth	r2, r3
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	819a      	strh	r2, [r3, #12]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	781a      	ldrb	r2, [r3, #0]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	785b      	ldrb	r3, [r3, #1]
 8003e60:	4413      	add	r3, r2
 8003e62:	b2da      	uxtb	r2, r3
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	701a      	strb	r2, [r3, #0]
 8003e68:	bf00      	nop
 8003e6a:	3714      	adds	r7, #20
 8003e6c:	46bd      	mov	sp, r7
 8003e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e72:	4770      	bx	lr

08003e74 <ucg_dev_default_cb>:
 8003e74:	b580      	push	{r7, lr}
 8003e76:	b084      	sub	sp, #16
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	60f8      	str	r0, [r7, #12]
 8003e7c:	460b      	mov	r3, r1
 8003e7e:	607a      	str	r2, [r7, #4]
 8003e80:	817b      	strh	r3, [r7, #10]
 8003e82:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003e86:	2b0c      	cmp	r3, #12
 8003e88:	d00a      	beq.n	8003ea0 <ucg_dev_default_cb+0x2c>
 8003e8a:	2b17      	cmp	r3, #23
 8003e8c:	d10f      	bne.n	8003eae <ucg_dev_default_cb+0x3a>
 8003e8e:	68fb      	ldr	r3, [r7, #12]
 8003e90:	68db      	ldr	r3, [r3, #12]
 8003e92:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003e96:	687a      	ldr	r2, [r7, #4]
 8003e98:	68f8      	ldr	r0, [r7, #12]
 8003e9a:	4798      	blx	r3
 8003e9c:	4603      	mov	r3, r0
 8003e9e:	e007      	b.n	8003eb0 <ucg_dev_default_cb+0x3c>
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	687a      	ldr	r2, [r7, #4]
 8003ea4:	3370      	adds	r3, #112	@ 0x70
 8003ea6:	6810      	ldr	r0, [r2, #0]
 8003ea8:	6851      	ldr	r1, [r2, #4]
 8003eaa:	c303      	stmia	r3!, {r0, r1}
 8003eac:	bf00      	nop
 8003eae:	2301      	movs	r3, #1
 8003eb0:	4618      	mov	r0, r3
 8003eb2:	3710      	adds	r7, #16
 8003eb4:	46bd      	mov	sp, r7
 8003eb6:	bd80      	pop	{r7, pc}

08003eb8 <ucg_ext_none>:
 8003eb8:	b480      	push	{r7}
 8003eba:	b085      	sub	sp, #20
 8003ebc:	af00      	add	r7, sp, #0
 8003ebe:	60f8      	str	r0, [r7, #12]
 8003ec0:	460b      	mov	r3, r1
 8003ec2:	607a      	str	r2, [r7, #4]
 8003ec4:	817b      	strh	r3, [r7, #10]
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	4618      	mov	r0, r3
 8003eca:	3714      	adds	r7, #20
 8003ecc:	46bd      	mov	sp, r7
 8003ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ed2:	4770      	bx	lr

08003ed4 <ucg_handle_st7735_l90fx>:
 8003ed4:	b590      	push	{r4, r7, lr}
 8003ed6:	b085      	sub	sp, #20
 8003ed8:	af00      	add	r7, sp, #0
 8003eda:	6078      	str	r0, [r7, #4]
 8003edc:	6878      	ldr	r0, [r7, #4]
 8003ede:	f002 fd75 	bl	80069cc <ucg_clip_l90fx>
 8003ee2:	4603      	mov	r3, r0
 8003ee4:	2b00      	cmp	r3, #0
 8003ee6:	d053      	beq.n	8003f90 <ucg_handle_st7735_l90fx+0xbc>
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8003eee:	2b01      	cmp	r3, #1
 8003ef0:	d008      	beq.n	8003f04 <ucg_handle_st7735_l90fx+0x30>
 8003ef2:	2b02      	cmp	r3, #2
 8003ef4:	d00b      	beq.n	8003f0e <ucg_handle_st7735_l90fx+0x3a>
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d11b      	bne.n	8003f32 <ucg_handle_st7735_l90fx+0x5e>
 8003efa:	4928      	ldr	r1, [pc, #160]	@ (8003f9c <ucg_handle_st7735_l90fx+0xc8>)
 8003efc:	6878      	ldr	r0, [r7, #4]
 8003efe:	f003 f893 	bl	8007028 <ucg_com_SendCmdSeq>
 8003f02:	e028      	b.n	8003f56 <ucg_handle_st7735_l90fx+0x82>
 8003f04:	4926      	ldr	r1, [pc, #152]	@ (8003fa0 <ucg_handle_st7735_l90fx+0xcc>)
 8003f06:	6878      	ldr	r0, [r7, #4]
 8003f08:	f003 f88e 	bl	8007028 <ucg_com_SendCmdSeq>
 8003f0c:	e023      	b.n	8003f56 <ucg_handle_st7735_l90fx+0x82>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8003f12:	81fb      	strh	r3, [r7, #14]
 8003f14:	89fb      	ldrh	r3, [r7, #14]
 8003f16:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8003f1a:	b29b      	uxth	r3, r3
 8003f1c:	b21a      	sxth	r2, r3
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003f22:	4920      	ldr	r1, [pc, #128]	@ (8003fa4 <ucg_handle_st7735_l90fx+0xd0>)
 8003f24:	6878      	ldr	r0, [r7, #4]
 8003f26:	f003 f87f 	bl	8007028 <ucg_com_SendCmdSeq>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	89fa      	ldrh	r2, [r7, #14]
 8003f2e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003f30:	e011      	b.n	8003f56 <ucg_handle_st7735_l90fx+0x82>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003f36:	81fb      	strh	r3, [r7, #14]
 8003f38:	89fb      	ldrh	r3, [r7, #14]
 8003f3a:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8003f3e:	b29b      	uxth	r3, r3
 8003f40:	b21a      	sxth	r2, r3
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003f46:	4918      	ldr	r1, [pc, #96]	@ (8003fa8 <ucg_handle_st7735_l90fx+0xd4>)
 8003f48:	6878      	ldr	r0, [r7, #4]
 8003f4a:	f003 f86d 	bl	8007028 <ucg_com_SendCmdSeq>
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	89fa      	ldrh	r2, [r7, #14]
 8003f52:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003f54:	bf00      	nop
 8003f56:	687b      	ldr	r3, [r7, #4]
 8003f58:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8003f5c:	723b      	strb	r3, [r7, #8]
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8003f64:	727b      	strb	r3, [r7, #9]
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 8003f6c:	72bb      	strb	r3, [r7, #10]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	69dc      	ldr	r4, [r3, #28]
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8003f78:	b29a      	uxth	r2, r3
 8003f7a:	f107 0308 	add.w	r3, r7, #8
 8003f7e:	2113      	movs	r1, #19
 8003f80:	6878      	ldr	r0, [r7, #4]
 8003f82:	47a0      	blx	r4
 8003f84:	2101      	movs	r1, #1
 8003f86:	6878      	ldr	r0, [r7, #4]
 8003f88:	f002 ff9a 	bl	8006ec0 <ucg_com_SetCSLineStatus>
 8003f8c:	2301      	movs	r3, #1
 8003f8e:	e000      	b.n	8003f92 <ucg_handle_st7735_l90fx+0xbe>
 8003f90:	2300      	movs	r3, #0
 8003f92:	4618      	mov	r0, r3
 8003f94:	3714      	adds	r7, #20
 8003f96:	46bd      	mov	sp, r7
 8003f98:	bd90      	pop	{r4, r7, pc}
 8003f9a:	bf00      	nop
 8003f9c:	08007dd0 	.word	0x08007dd0
 8003fa0:	08007df0 	.word	0x08007df0
 8003fa4:	08007e14 	.word	0x08007e14
 8003fa8:	08007e38 	.word	0x08007e38

08003fac <ucg_handle_st7735_l90se>:
 8003fac:	b590      	push	{r4, r7, lr}
 8003fae:	b087      	sub	sp, #28
 8003fb0:	af00      	add	r7, sp, #0
 8003fb2:	6078      	str	r0, [r7, #4]
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	75fb      	strb	r3, [r7, #23]
 8003fb8:	e01a      	b.n	8003ff0 <ucg_handle_st7735_l90se+0x44>
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8003fc0:	7dfa      	ldrb	r2, [r7, #23]
 8003fc2:	4613      	mov	r3, r2
 8003fc4:	00db      	lsls	r3, r3, #3
 8003fc6:	1a9b      	subs	r3, r3, r2
 8003fc8:	005b      	lsls	r3, r3, #1
 8003fca:	18c8      	adds	r0, r1, r3
 8003fcc:	7dfb      	ldrb	r3, [r7, #23]
 8003fce:	687a      	ldr	r2, [r7, #4]
 8003fd0:	4413      	add	r3, r2
 8003fd2:	f893 103a 	ldrb.w	r1, [r3, #58]	@ 0x3a
 8003fd6:	7dfb      	ldrb	r3, [r7, #23]
 8003fd8:	687a      	ldr	r2, [r7, #4]
 8003fda:	4413      	add	r3, r2
 8003fdc:	f893 203d 	ldrb.w	r2, [r3, #61]	@ 0x3d
 8003fe0:	687b      	ldr	r3, [r7, #4]
 8003fe2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8003fe6:	f7ff fe40 	bl	8003c6a <ucg_ccs_init>
 8003fea:	7dfb      	ldrb	r3, [r7, #23]
 8003fec:	3301      	adds	r3, #1
 8003fee:	75fb      	strb	r3, [r7, #23]
 8003ff0:	7dfb      	ldrb	r3, [r7, #23]
 8003ff2:	2b02      	cmp	r3, #2
 8003ff4:	d9e1      	bls.n	8003fba <ucg_handle_st7735_l90se+0xe>
 8003ff6:	6878      	ldr	r0, [r7, #4]
 8003ff8:	f002 fe68 	bl	8006ccc <ucg_clip_l90se>
 8003ffc:	4603      	mov	r3, r0
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d071      	beq.n	80040e6 <ucg_handle_st7735_l90se+0x13a>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004008:	2b01      	cmp	r3, #1
 800400a:	d008      	beq.n	800401e <ucg_handle_st7735_l90se+0x72>
 800400c:	2b02      	cmp	r3, #2
 800400e:	d00b      	beq.n	8004028 <ucg_handle_st7735_l90se+0x7c>
 8004010:	2b00      	cmp	r3, #0
 8004012:	d11b      	bne.n	800404c <ucg_handle_st7735_l90se+0xa0>
 8004014:	4936      	ldr	r1, [pc, #216]	@ (80040f0 <ucg_handle_st7735_l90se+0x144>)
 8004016:	6878      	ldr	r0, [r7, #4]
 8004018:	f003 f806 	bl	8007028 <ucg_com_SendCmdSeq>
 800401c:	e028      	b.n	8004070 <ucg_handle_st7735_l90se+0xc4>
 800401e:	4935      	ldr	r1, [pc, #212]	@ (80040f4 <ucg_handle_st7735_l90se+0x148>)
 8004020:	6878      	ldr	r0, [r7, #4]
 8004022:	f003 f801 	bl	8007028 <ucg_com_SendCmdSeq>
 8004026:	e023      	b.n	8004070 <ucg_handle_st7735_l90se+0xc4>
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800402c:	827b      	strh	r3, [r7, #18]
 800402e:	8a7b      	ldrh	r3, [r7, #18]
 8004030:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8004034:	b29b      	uxth	r3, r3
 8004036:	b21a      	sxth	r2, r3
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	849a      	strh	r2, [r3, #36]	@ 0x24
 800403c:	492e      	ldr	r1, [pc, #184]	@ (80040f8 <ucg_handle_st7735_l90se+0x14c>)
 800403e:	6878      	ldr	r0, [r7, #4]
 8004040:	f002 fff2 	bl	8007028 <ucg_com_SendCmdSeq>
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	8a7a      	ldrh	r2, [r7, #18]
 8004048:	849a      	strh	r2, [r3, #36]	@ 0x24
 800404a:	e011      	b.n	8004070 <ucg_handle_st7735_l90se+0xc4>
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8004050:	827b      	strh	r3, [r7, #18]
 8004052:	8a7b      	ldrh	r3, [r7, #18]
 8004054:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 8004058:	b29b      	uxth	r3, r3
 800405a:	b21a      	sxth	r2, r3
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004060:	4926      	ldr	r1, [pc, #152]	@ (80040fc <ucg_handle_st7735_l90se+0x150>)
 8004062:	6878      	ldr	r0, [r7, #4]
 8004064:	f002 ffe0 	bl	8007028 <ucg_com_SendCmdSeq>
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	8a7a      	ldrh	r2, [r7, #18]
 800406c:	84da      	strh	r2, [r3, #38]	@ 0x26
 800406e:	bf00      	nop
 8004070:	2300      	movs	r3, #0
 8004072:	82bb      	strh	r3, [r7, #20]
 8004074:	e02a      	b.n	80040cc <ucg_handle_st7735_l90se+0x120>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 800407c:	733b      	strb	r3, [r7, #12]
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8004084:	737b      	strb	r3, [r7, #13]
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	f893 3062 	ldrb.w	r3, [r3, #98]	@ 0x62
 800408c:	73bb      	strb	r3, [r7, #14]
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	69dc      	ldr	r4, [r3, #28]
 8004092:	f107 030c 	add.w	r3, r7, #12
 8004096:	2201      	movs	r2, #1
 8004098:	2113      	movs	r1, #19
 800409a:	6878      	ldr	r0, [r7, #4]
 800409c:	47a0      	blx	r4
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	3346      	adds	r3, #70	@ 0x46
 80040a2:	4618      	mov	r0, r3
 80040a4:	f7ff fe41 	bl	8003d2a <ucg_ccs_step>
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	3346      	adds	r3, #70	@ 0x46
 80040ac:	330e      	adds	r3, #14
 80040ae:	4618      	mov	r0, r3
 80040b0:	f7ff fe3b 	bl	8003d2a <ucg_ccs_step>
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	3346      	adds	r3, #70	@ 0x46
 80040b8:	331c      	adds	r3, #28
 80040ba:	4618      	mov	r0, r3
 80040bc:	f7ff fe35 	bl	8003d2a <ucg_ccs_step>
 80040c0:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80040c4:	b29b      	uxth	r3, r3
 80040c6:	3301      	adds	r3, #1
 80040c8:	b29b      	uxth	r3, r3
 80040ca:	82bb      	strh	r3, [r7, #20]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 80040d2:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80040d6:	429a      	cmp	r2, r3
 80040d8:	dbcd      	blt.n	8004076 <ucg_handle_st7735_l90se+0xca>
 80040da:	2101      	movs	r1, #1
 80040dc:	6878      	ldr	r0, [r7, #4]
 80040de:	f002 feef 	bl	8006ec0 <ucg_com_SetCSLineStatus>
 80040e2:	2301      	movs	r3, #1
 80040e4:	e000      	b.n	80040e8 <ucg_handle_st7735_l90se+0x13c>
 80040e6:	2300      	movs	r3, #0
 80040e8:	4618      	mov	r0, r3
 80040ea:	371c      	adds	r7, #28
 80040ec:	46bd      	mov	sp, r7
 80040ee:	bd90      	pop	{r4, r7, pc}
 80040f0:	08007dd0 	.word	0x08007dd0
 80040f4:	08007df0 	.word	0x08007df0
 80040f8:	08007e14 	.word	0x08007e14
 80040fc:	08007e38 	.word	0x08007e38

08004100 <ucg_dev_ic_st7735_18>:
 8004100:	b590      	push	{r4, r7, lr}
 8004102:	b087      	sub	sp, #28
 8004104:	af00      	add	r7, sp, #0
 8004106:	60f8      	str	r0, [r7, #12]
 8004108:	460b      	mov	r3, r1
 800410a:	607a      	str	r2, [r7, #4]
 800410c:	817b      	strh	r3, [r7, #10]
 800410e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004112:	3b0a      	subs	r3, #10
 8004114:	2b0b      	cmp	r3, #11
 8004116:	d85f      	bhi.n	80041d8 <ucg_dev_ic_st7735_18+0xd8>
 8004118:	a201      	add	r2, pc, #4	@ (adr r2, 8004120 <ucg_dev_ic_st7735_18+0x20>)
 800411a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800411e:	bf00      	nop
 8004120:	08004151 	.word	0x08004151
 8004124:	0800416b 	.word	0x0800416b
 8004128:	080041d9 	.word	0x080041d9
 800412c:	080041d9 	.word	0x080041d9
 8004130:	080041d9 	.word	0x080041d9
 8004134:	08004177 	.word	0x08004177
 8004138:	080041d9 	.word	0x080041d9
 800413c:	080041d9 	.word	0x080041d9
 8004140:	080041d9 	.word	0x080041d9
 8004144:	080041d9 	.word	0x080041d9
 8004148:	08004187 	.word	0x08004187
 800414c:	080041cf 	.word	0x080041cf
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	2202      	movs	r2, #2
 8004154:	841a      	strh	r2, [r3, #32]
 8004156:	68fb      	ldr	r3, [r7, #12]
 8004158:	2201      	movs	r2, #1
 800415a:	845a      	strh	r2, [r3, #34]	@ 0x22
 800415c:	2242      	movs	r2, #66	@ 0x42
 800415e:	2164      	movs	r1, #100	@ 0x64
 8004160:	68f8      	ldr	r0, [r7, #12]
 8004162:	f002 fdfc 	bl	8006d5e <ucg_com_PowerUp>
 8004166:	4603      	mov	r3, r0
 8004168:	e03e      	b.n	80041e8 <ucg_dev_ic_st7735_18+0xe8>
 800416a:	4921      	ldr	r1, [pc, #132]	@ (80041f0 <ucg_dev_ic_st7735_18+0xf0>)
 800416c:	68f8      	ldr	r0, [r7, #12]
 800416e:	f002 ff5b 	bl	8007028 <ucg_com_SendCmdSeq>
 8004172:	2301      	movs	r3, #1
 8004174:	e038      	b.n	80041e8 <ucg_dev_ic_st7735_18+0xe8>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	2280      	movs	r2, #128	@ 0x80
 800417a:	801a      	strh	r2, [r3, #0]
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	2280      	movs	r2, #128	@ 0x80
 8004180:	805a      	strh	r2, [r3, #2]
 8004182:	2301      	movs	r3, #1
 8004184:	e030      	b.n	80041e8 <ucg_dev_ic_st7735_18+0xe8>
 8004186:	68f8      	ldr	r0, [r7, #12]
 8004188:	f002 fc06 	bl	8006998 <ucg_clip_is_pixel_visible>
 800418c:	4603      	mov	r3, r0
 800418e:	2b00      	cmp	r3, #0
 8004190:	d01b      	beq.n	80041ca <ucg_dev_ic_st7735_18+0xca>
 8004192:	4918      	ldr	r1, [pc, #96]	@ (80041f4 <ucg_dev_ic_st7735_18+0xf4>)
 8004194:	68f8      	ldr	r0, [r7, #12]
 8004196:	f002 ff47 	bl	8007028 <ucg_com_SendCmdSeq>
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80041a0:	753b      	strb	r3, [r7, #20]
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 80041a8:	757b      	strb	r3, [r7, #21]
 80041aa:	68fb      	ldr	r3, [r7, #12]
 80041ac:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 80041b0:	75bb      	strb	r3, [r7, #22]
 80041b2:	68fb      	ldr	r3, [r7, #12]
 80041b4:	69dc      	ldr	r4, [r3, #28]
 80041b6:	f107 0314 	add.w	r3, r7, #20
 80041ba:	2201      	movs	r2, #1
 80041bc:	2113      	movs	r1, #19
 80041be:	68f8      	ldr	r0, [r7, #12]
 80041c0:	47a0      	blx	r4
 80041c2:	2101      	movs	r1, #1
 80041c4:	68f8      	ldr	r0, [r7, #12]
 80041c6:	f002 fe7b 	bl	8006ec0 <ucg_com_SetCSLineStatus>
 80041ca:	2301      	movs	r3, #1
 80041cc:	e00c      	b.n	80041e8 <ucg_dev_ic_st7735_18+0xe8>
 80041ce:	68f8      	ldr	r0, [r7, #12]
 80041d0:	f7ff fe80 	bl	8003ed4 <ucg_handle_st7735_l90fx>
 80041d4:	2301      	movs	r3, #1
 80041d6:	e007      	b.n	80041e8 <ucg_dev_ic_st7735_18+0xe8>
 80041d8:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80041dc:	687a      	ldr	r2, [r7, #4]
 80041de:	4619      	mov	r1, r3
 80041e0:	68f8      	ldr	r0, [r7, #12]
 80041e2:	f7ff fe47 	bl	8003e74 <ucg_dev_default_cb>
 80041e6:	4603      	mov	r3, r0
 80041e8:	4618      	mov	r0, r3
 80041ea:	371c      	adds	r7, #28
 80041ec:	46bd      	mov	sp, r7
 80041ee:	bd90      	pop	{r4, r7, pc}
 80041f0:	08007e5c 	.word	0x08007e5c
 80041f4:	08007db0 	.word	0x08007db0

080041f8 <ucg_ext_st7735_18>:
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b084      	sub	sp, #16
 80041fc:	af00      	add	r7, sp, #0
 80041fe:	60f8      	str	r0, [r7, #12]
 8004200:	460b      	mov	r3, r1
 8004202:	607a      	str	r2, [r7, #4]
 8004204:	817b      	strh	r3, [r7, #10]
 8004206:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800420a:	2b17      	cmp	r3, #23
 800420c:	d103      	bne.n	8004216 <ucg_ext_st7735_18+0x1e>
 800420e:	68f8      	ldr	r0, [r7, #12]
 8004210:	f7ff fecc 	bl	8003fac <ucg_handle_st7735_l90se>
 8004214:	bf00      	nop
 8004216:	2301      	movs	r3, #1
 8004218:	4618      	mov	r0, r3
 800421a:	3710      	adds	r7, #16
 800421c:	46bd      	mov	sp, r7
 800421e:	bd80      	pop	{r7, pc}

08004220 <ucg_PowerDown>:
 8004220:	b580      	push	{r7, lr}
 8004222:	b082      	sub	sp, #8
 8004224:	af00      	add	r7, sp, #0
 8004226:	6078      	str	r0, [r7, #4]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	781b      	ldrb	r3, [r3, #0]
 800422c:	f003 0301 	and.w	r3, r3, #1
 8004230:	b2db      	uxtb	r3, r3
 8004232:	2b00      	cmp	r3, #0
 8004234:	d00a      	beq.n	800424c <ucg_PowerDown+0x2c>
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	689b      	ldr	r3, [r3, #8]
 800423a:	2200      	movs	r2, #0
 800423c:	210b      	movs	r1, #11
 800423e:	6878      	ldr	r0, [r7, #4]
 8004240:	4798      	blx	r3
 8004242:	687a      	ldr	r2, [r7, #4]
 8004244:	7813      	ldrb	r3, [r2, #0]
 8004246:	f36f 0300 	bfc	r3, #0, #1
 800424a:	7013      	strb	r3, [r2, #0]
 800424c:	bf00      	nop
 800424e:	3708      	adds	r7, #8
 8004250:	46bd      	mov	sp, r7
 8004252:	bd80      	pop	{r7, pc}

08004254 <ucg_PowerUp>:
 8004254:	b580      	push	{r7, lr}
 8004256:	b084      	sub	sp, #16
 8004258:	af00      	add	r7, sp, #0
 800425a:	6078      	str	r0, [r7, #4]
 800425c:	6878      	ldr	r0, [r7, #4]
 800425e:	f7ff ffdf 	bl	8004220 <ucg_PowerDown>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	689b      	ldr	r3, [r3, #8]
 8004266:	2200      	movs	r2, #0
 8004268:	210a      	movs	r1, #10
 800426a:	6878      	ldr	r0, [r7, #4]
 800426c:	4798      	blx	r3
 800426e:	4603      	mov	r3, r0
 8004270:	81fb      	strh	r3, [r7, #14]
 8004272:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004276:	2b00      	cmp	r3, #0
 8004278:	d004      	beq.n	8004284 <ucg_PowerUp+0x30>
 800427a:	687a      	ldr	r2, [r7, #4]
 800427c:	7813      	ldrb	r3, [r2, #0]
 800427e:	f043 0301 	orr.w	r3, r3, #1
 8004282:	7013      	strb	r3, [r2, #0]
 8004284:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004288:	4618      	mov	r0, r3
 800428a:	3710      	adds	r7, #16
 800428c:	46bd      	mov	sp, r7
 800428e:	bd80      	pop	{r7, pc}

08004290 <ucg_SetClipBox>:
 8004290:	b580      	push	{r7, lr}
 8004292:	b082      	sub	sp, #8
 8004294:	af00      	add	r7, sp, #0
 8004296:	6078      	str	r0, [r7, #4]
 8004298:	6039      	str	r1, [r7, #0]
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	689b      	ldr	r3, [r3, #8]
 800429e:	683a      	ldr	r2, [r7, #0]
 80042a0:	210c      	movs	r1, #12
 80042a2:	6878      	ldr	r0, [r7, #4]
 80042a4:	4798      	blx	r3
 80042a6:	bf00      	nop
 80042a8:	3708      	adds	r7, #8
 80042aa:	46bd      	mov	sp, r7
 80042ac:	bd80      	pop	{r7, pc}

080042ae <ucg_SetMaxClipRange>:
 80042ae:	b580      	push	{r7, lr}
 80042b0:	b084      	sub	sp, #16
 80042b2:	af00      	add	r7, sp, #0
 80042b4:	6078      	str	r0, [r7, #4]
 80042b6:	687a      	ldr	r2, [r7, #4]
 80042b8:	f107 030c 	add.w	r3, r7, #12
 80042bc:	3202      	adds	r2, #2
 80042be:	6810      	ldr	r0, [r2, #0]
 80042c0:	6018      	str	r0, [r3, #0]
 80042c2:	2300      	movs	r3, #0
 80042c4:	813b      	strh	r3, [r7, #8]
 80042c6:	2300      	movs	r3, #0
 80042c8:	817b      	strh	r3, [r7, #10]
 80042ca:	f107 0308 	add.w	r3, r7, #8
 80042ce:	4619      	mov	r1, r3
 80042d0:	6878      	ldr	r0, [r7, #4]
 80042d2:	f7ff ffdd 	bl	8004290 <ucg_SetClipBox>
 80042d6:	bf00      	nop
 80042d8:	3710      	adds	r7, #16
 80042da:	46bd      	mov	sp, r7
 80042dc:	bd80      	pop	{r7, pc}

080042de <ucg_GetDimension>:
 80042de:	b580      	push	{r7, lr}
 80042e0:	b082      	sub	sp, #8
 80042e2:	af00      	add	r7, sp, #0
 80042e4:	6078      	str	r0, [r7, #4]
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	689b      	ldr	r3, [r3, #8]
 80042ea:	687a      	ldr	r2, [r7, #4]
 80042ec:	3202      	adds	r2, #2
 80042ee:	210f      	movs	r1, #15
 80042f0:	6878      	ldr	r0, [r7, #4]
 80042f2:	4798      	blx	r3
 80042f4:	6878      	ldr	r0, [r7, #4]
 80042f6:	f7ff ffda 	bl	80042ae <ucg_SetMaxClipRange>
 80042fa:	bf00      	nop
 80042fc:	3708      	adds	r7, #8
 80042fe:	46bd      	mov	sp, r7
 8004300:	bd80      	pop	{r7, pc}

08004302 <ucg_DrawL90FXWithArg>:
 8004302:	b580      	push	{r7, lr}
 8004304:	b082      	sub	sp, #8
 8004306:	af00      	add	r7, sp, #0
 8004308:	6078      	str	r0, [r7, #4]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	689b      	ldr	r3, [r3, #8]
 800430e:	687a      	ldr	r2, [r7, #4]
 8004310:	3224      	adds	r2, #36	@ 0x24
 8004312:	2115      	movs	r1, #21
 8004314:	6878      	ldr	r0, [r7, #4]
 8004316:	4798      	blx	r3
 8004318:	bf00      	nop
 800431a:	3708      	adds	r7, #8
 800431c:	46bd      	mov	sp, r7
 800431e:	bd80      	pop	{r7, pc}

08004320 <ucg_dev_st7735_18x128x128>:
 8004320:	b580      	push	{r7, lr}
 8004322:	b084      	sub	sp, #16
 8004324:	af00      	add	r7, sp, #0
 8004326:	60f8      	str	r0, [r7, #12]
 8004328:	460b      	mov	r3, r1
 800432a:	607a      	str	r2, [r7, #4]
 800432c:	817b      	strh	r3, [r7, #10]
 800432e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004332:	2b0b      	cmp	r3, #11
 8004334:	d015      	beq.n	8004362 <ucg_dev_st7735_18x128x128+0x42>
 8004336:	2b0f      	cmp	r3, #15
 8004338:	d01c      	beq.n	8004374 <ucg_dev_st7735_18x128x128+0x54>
 800433a:	2b0a      	cmp	r3, #10
 800433c:	d122      	bne.n	8004384 <ucg_dev_st7735_18x128x128+0x64>
 800433e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004342:	687a      	ldr	r2, [r7, #4]
 8004344:	4619      	mov	r1, r3
 8004346:	68f8      	ldr	r0, [r7, #12]
 8004348:	f7ff feda 	bl	8004100 <ucg_dev_ic_st7735_18>
 800434c:	4603      	mov	r3, r0
 800434e:	2b00      	cmp	r3, #0
 8004350:	d101      	bne.n	8004356 <ucg_dev_st7735_18x128x128+0x36>
 8004352:	2300      	movs	r3, #0
 8004354:	e01e      	b.n	8004394 <ucg_dev_st7735_18x128x128+0x74>
 8004356:	4911      	ldr	r1, [pc, #68]	@ (800439c <ucg_dev_st7735_18x128x128+0x7c>)
 8004358:	68f8      	ldr	r0, [r7, #12]
 800435a:	f002 fe65 	bl	8007028 <ucg_com_SendCmdSeq>
 800435e:	2301      	movs	r3, #1
 8004360:	e018      	b.n	8004394 <ucg_dev_st7735_18x128x128+0x74>
 8004362:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004366:	687a      	ldr	r2, [r7, #4]
 8004368:	4619      	mov	r1, r3
 800436a:	68f8      	ldr	r0, [r7, #12]
 800436c:	f7ff fec8 	bl	8004100 <ucg_dev_ic_st7735_18>
 8004370:	4603      	mov	r3, r0
 8004372:	e00f      	b.n	8004394 <ucg_dev_st7735_18x128x128+0x74>
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	2280      	movs	r2, #128	@ 0x80
 8004378:	801a      	strh	r2, [r3, #0]
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	2280      	movs	r2, #128	@ 0x80
 800437e:	805a      	strh	r2, [r3, #2]
 8004380:	2301      	movs	r3, #1
 8004382:	e007      	b.n	8004394 <ucg_dev_st7735_18x128x128+0x74>
 8004384:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8004388:	687a      	ldr	r2, [r7, #4]
 800438a:	4619      	mov	r1, r3
 800438c:	68f8      	ldr	r0, [r7, #12]
 800438e:	f7ff feb7 	bl	8004100 <ucg_dev_ic_st7735_18>
 8004392:	4603      	mov	r3, r0
 8004394:	4618      	mov	r0, r3
 8004396:	3710      	adds	r7, #16
 8004398:	46bd      	mov	sp, r7
 800439a:	bd80      	pop	{r7, pc}
 800439c:	08007e64 	.word	0x08007e64

080043a0 <ucg_font_get_byte>:
 80043a0:	b480      	push	{r7}
 80043a2:	b083      	sub	sp, #12
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	6078      	str	r0, [r7, #4]
 80043a8:	460b      	mov	r3, r1
 80043aa:	70fb      	strb	r3, [r7, #3]
 80043ac:	78fb      	ldrb	r3, [r7, #3]
 80043ae:	687a      	ldr	r2, [r7, #4]
 80043b0:	4413      	add	r3, r2
 80043b2:	607b      	str	r3, [r7, #4]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	781b      	ldrb	r3, [r3, #0]
 80043b8:	4618      	mov	r0, r3
 80043ba:	370c      	adds	r7, #12
 80043bc:	46bd      	mov	sp, r7
 80043be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043c2:	4770      	bx	lr

080043c4 <ucg_font_get_word>:
 80043c4:	b480      	push	{r7}
 80043c6:	b085      	sub	sp, #20
 80043c8:	af00      	add	r7, sp, #0
 80043ca:	6078      	str	r0, [r7, #4]
 80043cc:	460b      	mov	r3, r1
 80043ce:	70fb      	strb	r3, [r7, #3]
 80043d0:	78fb      	ldrb	r3, [r7, #3]
 80043d2:	687a      	ldr	r2, [r7, #4]
 80043d4:	4413      	add	r3, r2
 80043d6:	607b      	str	r3, [r7, #4]
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	781b      	ldrb	r3, [r3, #0]
 80043dc:	81fb      	strh	r3, [r7, #14]
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	3301      	adds	r3, #1
 80043e2:	607b      	str	r3, [r7, #4]
 80043e4:	89fb      	ldrh	r3, [r7, #14]
 80043e6:	021b      	lsls	r3, r3, #8
 80043e8:	81fb      	strh	r3, [r7, #14]
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	781b      	ldrb	r3, [r3, #0]
 80043ee:	b29a      	uxth	r2, r3
 80043f0:	89fb      	ldrh	r3, [r7, #14]
 80043f2:	4413      	add	r3, r2
 80043f4:	81fb      	strh	r3, [r7, #14]
 80043f6:	89fb      	ldrh	r3, [r7, #14]
 80043f8:	4618      	mov	r0, r3
 80043fa:	3714      	adds	r7, #20
 80043fc:	46bd      	mov	sp, r7
 80043fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004402:	4770      	bx	lr

08004404 <ucg_read_font_info>:
 8004404:	b580      	push	{r7, lr}
 8004406:	b082      	sub	sp, #8
 8004408:	af00      	add	r7, sp, #0
 800440a:	6078      	str	r0, [r7, #4]
 800440c:	6039      	str	r1, [r7, #0]
 800440e:	2100      	movs	r1, #0
 8004410:	6838      	ldr	r0, [r7, #0]
 8004412:	f7ff ffc5 	bl	80043a0 <ucg_font_get_byte>
 8004416:	4603      	mov	r3, r0
 8004418:	461a      	mov	r2, r3
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	701a      	strb	r2, [r3, #0]
 800441e:	2101      	movs	r1, #1
 8004420:	6838      	ldr	r0, [r7, #0]
 8004422:	f7ff ffbd 	bl	80043a0 <ucg_font_get_byte>
 8004426:	4603      	mov	r3, r0
 8004428:	461a      	mov	r2, r3
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	705a      	strb	r2, [r3, #1]
 800442e:	2102      	movs	r1, #2
 8004430:	6838      	ldr	r0, [r7, #0]
 8004432:	f7ff ffb5 	bl	80043a0 <ucg_font_get_byte>
 8004436:	4603      	mov	r3, r0
 8004438:	461a      	mov	r2, r3
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	709a      	strb	r2, [r3, #2]
 800443e:	2103      	movs	r1, #3
 8004440:	6838      	ldr	r0, [r7, #0]
 8004442:	f7ff ffad 	bl	80043a0 <ucg_font_get_byte>
 8004446:	4603      	mov	r3, r0
 8004448:	461a      	mov	r2, r3
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	70da      	strb	r2, [r3, #3]
 800444e:	2104      	movs	r1, #4
 8004450:	6838      	ldr	r0, [r7, #0]
 8004452:	f7ff ffa5 	bl	80043a0 <ucg_font_get_byte>
 8004456:	4603      	mov	r3, r0
 8004458:	461a      	mov	r2, r3
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	711a      	strb	r2, [r3, #4]
 800445e:	2105      	movs	r1, #5
 8004460:	6838      	ldr	r0, [r7, #0]
 8004462:	f7ff ff9d 	bl	80043a0 <ucg_font_get_byte>
 8004466:	4603      	mov	r3, r0
 8004468:	461a      	mov	r2, r3
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	715a      	strb	r2, [r3, #5]
 800446e:	2106      	movs	r1, #6
 8004470:	6838      	ldr	r0, [r7, #0]
 8004472:	f7ff ff95 	bl	80043a0 <ucg_font_get_byte>
 8004476:	4603      	mov	r3, r0
 8004478:	461a      	mov	r2, r3
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	719a      	strb	r2, [r3, #6]
 800447e:	2107      	movs	r1, #7
 8004480:	6838      	ldr	r0, [r7, #0]
 8004482:	f7ff ff8d 	bl	80043a0 <ucg_font_get_byte>
 8004486:	4603      	mov	r3, r0
 8004488:	461a      	mov	r2, r3
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	71da      	strb	r2, [r3, #7]
 800448e:	2108      	movs	r1, #8
 8004490:	6838      	ldr	r0, [r7, #0]
 8004492:	f7ff ff85 	bl	80043a0 <ucg_font_get_byte>
 8004496:	4603      	mov	r3, r0
 8004498:	461a      	mov	r2, r3
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	721a      	strb	r2, [r3, #8]
 800449e:	2109      	movs	r1, #9
 80044a0:	6838      	ldr	r0, [r7, #0]
 80044a2:	f7ff ff7d 	bl	80043a0 <ucg_font_get_byte>
 80044a6:	4603      	mov	r3, r0
 80044a8:	b25a      	sxtb	r2, r3
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	725a      	strb	r2, [r3, #9]
 80044ae:	210a      	movs	r1, #10
 80044b0:	6838      	ldr	r0, [r7, #0]
 80044b2:	f7ff ff75 	bl	80043a0 <ucg_font_get_byte>
 80044b6:	4603      	mov	r3, r0
 80044b8:	b25a      	sxtb	r2, r3
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	729a      	strb	r2, [r3, #10]
 80044be:	210b      	movs	r1, #11
 80044c0:	6838      	ldr	r0, [r7, #0]
 80044c2:	f7ff ff6d 	bl	80043a0 <ucg_font_get_byte>
 80044c6:	4603      	mov	r3, r0
 80044c8:	b25a      	sxtb	r2, r3
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	72da      	strb	r2, [r3, #11]
 80044ce:	210c      	movs	r1, #12
 80044d0:	6838      	ldr	r0, [r7, #0]
 80044d2:	f7ff ff65 	bl	80043a0 <ucg_font_get_byte>
 80044d6:	4603      	mov	r3, r0
 80044d8:	b25a      	sxtb	r2, r3
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	731a      	strb	r2, [r3, #12]
 80044de:	210d      	movs	r1, #13
 80044e0:	6838      	ldr	r0, [r7, #0]
 80044e2:	f7ff ff5d 	bl	80043a0 <ucg_font_get_byte>
 80044e6:	4603      	mov	r3, r0
 80044e8:	b25a      	sxtb	r2, r3
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	735a      	strb	r2, [r3, #13]
 80044ee:	210e      	movs	r1, #14
 80044f0:	6838      	ldr	r0, [r7, #0]
 80044f2:	f7ff ff55 	bl	80043a0 <ucg_font_get_byte>
 80044f6:	4603      	mov	r3, r0
 80044f8:	b25a      	sxtb	r2, r3
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	739a      	strb	r2, [r3, #14]
 80044fe:	210f      	movs	r1, #15
 8004500:	6838      	ldr	r0, [r7, #0]
 8004502:	f7ff ff4d 	bl	80043a0 <ucg_font_get_byte>
 8004506:	4603      	mov	r3, r0
 8004508:	b25a      	sxtb	r2, r3
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	73da      	strb	r2, [r3, #15]
 800450e:	2110      	movs	r1, #16
 8004510:	6838      	ldr	r0, [r7, #0]
 8004512:	f7ff ff45 	bl	80043a0 <ucg_font_get_byte>
 8004516:	4603      	mov	r3, r0
 8004518:	b25a      	sxtb	r2, r3
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	741a      	strb	r2, [r3, #16]
 800451e:	2111      	movs	r1, #17
 8004520:	6838      	ldr	r0, [r7, #0]
 8004522:	f7ff ff4f 	bl	80043c4 <ucg_font_get_word>
 8004526:	4603      	mov	r3, r0
 8004528:	461a      	mov	r2, r3
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	825a      	strh	r2, [r3, #18]
 800452e:	2113      	movs	r1, #19
 8004530:	6838      	ldr	r0, [r7, #0]
 8004532:	f7ff ff47 	bl	80043c4 <ucg_font_get_word>
 8004536:	4603      	mov	r3, r0
 8004538:	461a      	mov	r2, r3
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	829a      	strh	r2, [r3, #20]
 800453e:	bf00      	nop
 8004540:	3708      	adds	r7, #8
 8004542:	46bd      	mov	sp, r7
 8004544:	bd80      	pop	{r7, pc}

08004546 <ucg_font_decode_get_unsigned_bits>:
 8004546:	b480      	push	{r7}
 8004548:	b085      	sub	sp, #20
 800454a:	af00      	add	r7, sp, #0
 800454c:	6078      	str	r0, [r7, #4]
 800454e:	460b      	mov	r3, r1
 8004550:	70fb      	strb	r3, [r7, #3]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	7b1b      	ldrb	r3, [r3, #12]
 8004556:	737b      	strb	r3, [r7, #13]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	781b      	ldrb	r3, [r3, #0]
 800455e:	73fb      	strb	r3, [r7, #15]
 8004560:	7bfa      	ldrb	r2, [r7, #15]
 8004562:	7b7b      	ldrb	r3, [r7, #13]
 8004564:	fa42 f303 	asr.w	r3, r2, r3
 8004568:	73fb      	strb	r3, [r7, #15]
 800456a:	7b7b      	ldrb	r3, [r7, #13]
 800456c:	73bb      	strb	r3, [r7, #14]
 800456e:	7bba      	ldrb	r2, [r7, #14]
 8004570:	78fb      	ldrb	r3, [r7, #3]
 8004572:	4413      	add	r3, r2
 8004574:	73bb      	strb	r3, [r7, #14]
 8004576:	7bbb      	ldrb	r3, [r7, #14]
 8004578:	2b07      	cmp	r3, #7
 800457a:	d91a      	bls.n	80045b2 <ucg_font_decode_get_unsigned_bits+0x6c>
 800457c:	2308      	movs	r3, #8
 800457e:	733b      	strb	r3, [r7, #12]
 8004580:	7b3a      	ldrb	r2, [r7, #12]
 8004582:	7b7b      	ldrb	r3, [r7, #13]
 8004584:	1ad3      	subs	r3, r2, r3
 8004586:	733b      	strb	r3, [r7, #12]
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	1c5a      	adds	r2, r3, #1
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	601a      	str	r2, [r3, #0]
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	781b      	ldrb	r3, [r3, #0]
 8004598:	461a      	mov	r2, r3
 800459a:	7b3b      	ldrb	r3, [r7, #12]
 800459c:	fa02 f303 	lsl.w	r3, r2, r3
 80045a0:	b25a      	sxtb	r2, r3
 80045a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80045a6:	4313      	orrs	r3, r2
 80045a8:	b25b      	sxtb	r3, r3
 80045aa:	73fb      	strb	r3, [r7, #15]
 80045ac:	7bbb      	ldrb	r3, [r7, #14]
 80045ae:	3b08      	subs	r3, #8
 80045b0:	73bb      	strb	r3, [r7, #14]
 80045b2:	78fb      	ldrb	r3, [r7, #3]
 80045b4:	f04f 32ff 	mov.w	r2, #4294967295
 80045b8:	fa02 f303 	lsl.w	r3, r2, r3
 80045bc:	b2db      	uxtb	r3, r3
 80045be:	43db      	mvns	r3, r3
 80045c0:	b2da      	uxtb	r2, r3
 80045c2:	7bfb      	ldrb	r3, [r7, #15]
 80045c4:	4013      	ands	r3, r2
 80045c6:	73fb      	strb	r3, [r7, #15]
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	7bba      	ldrb	r2, [r7, #14]
 80045cc:	731a      	strb	r2, [r3, #12]
 80045ce:	7bfb      	ldrb	r3, [r7, #15]
 80045d0:	4618      	mov	r0, r3
 80045d2:	3714      	adds	r7, #20
 80045d4:	46bd      	mov	sp, r7
 80045d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045da:	4770      	bx	lr

080045dc <ucg_font_decode_get_signed_bits>:
 80045dc:	b580      	push	{r7, lr}
 80045de:	b084      	sub	sp, #16
 80045e0:	af00      	add	r7, sp, #0
 80045e2:	6078      	str	r0, [r7, #4]
 80045e4:	460b      	mov	r3, r1
 80045e6:	70fb      	strb	r3, [r7, #3]
 80045e8:	78fb      	ldrb	r3, [r7, #3]
 80045ea:	4619      	mov	r1, r3
 80045ec:	6878      	ldr	r0, [r7, #4]
 80045ee:	f7ff ffaa 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 80045f2:	4603      	mov	r3, r0
 80045f4:	73fb      	strb	r3, [r7, #15]
 80045f6:	2301      	movs	r3, #1
 80045f8:	73bb      	strb	r3, [r7, #14]
 80045fa:	78fb      	ldrb	r3, [r7, #3]
 80045fc:	3b01      	subs	r3, #1
 80045fe:	70fb      	strb	r3, [r7, #3]
 8004600:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8004604:	78fb      	ldrb	r3, [r7, #3]
 8004606:	fa02 f303 	lsl.w	r3, r2, r3
 800460a:	73bb      	strb	r3, [r7, #14]
 800460c:	7bfa      	ldrb	r2, [r7, #15]
 800460e:	7bbb      	ldrb	r3, [r7, #14]
 8004610:	1ad3      	subs	r3, r2, r3
 8004612:	b2db      	uxtb	r3, r3
 8004614:	73fb      	strb	r3, [r7, #15]
 8004616:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800461a:	4618      	mov	r0, r3
 800461c:	3710      	adds	r7, #16
 800461e:	46bd      	mov	sp, r7
 8004620:	bd80      	pop	{r7, pc}

08004622 <ucg_add_vector_y>:
 8004622:	b490      	push	{r4, r7}
 8004624:	b082      	sub	sp, #8
 8004626:	af00      	add	r7, sp, #0
 8004628:	4604      	mov	r4, r0
 800462a:	4608      	mov	r0, r1
 800462c:	4611      	mov	r1, r2
 800462e:	461a      	mov	r2, r3
 8004630:	4623      	mov	r3, r4
 8004632:	80fb      	strh	r3, [r7, #6]
 8004634:	4603      	mov	r3, r0
 8004636:	717b      	strb	r3, [r7, #5]
 8004638:	460b      	mov	r3, r1
 800463a:	713b      	strb	r3, [r7, #4]
 800463c:	4613      	mov	r3, r2
 800463e:	70fb      	strb	r3, [r7, #3]
 8004640:	78fb      	ldrb	r3, [r7, #3]
 8004642:	2b01      	cmp	r3, #1
 8004644:	d00b      	beq.n	800465e <ucg_add_vector_y+0x3c>
 8004646:	2b02      	cmp	r3, #2
 8004648:	d011      	beq.n	800466e <ucg_add_vector_y+0x4c>
 800464a:	2b00      	cmp	r3, #0
 800464c:	d117      	bne.n	800467e <ucg_add_vector_y+0x5c>
 800464e:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8004652:	b29a      	uxth	r2, r3
 8004654:	88fb      	ldrh	r3, [r7, #6]
 8004656:	4413      	add	r3, r2
 8004658:	b29b      	uxth	r3, r3
 800465a:	80fb      	strh	r3, [r7, #6]
 800465c:	e017      	b.n	800468e <ucg_add_vector_y+0x6c>
 800465e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8004662:	b29a      	uxth	r2, r3
 8004664:	88fb      	ldrh	r3, [r7, #6]
 8004666:	4413      	add	r3, r2
 8004668:	b29b      	uxth	r3, r3
 800466a:	80fb      	strh	r3, [r7, #6]
 800466c:	e00f      	b.n	800468e <ucg_add_vector_y+0x6c>
 800466e:	88fa      	ldrh	r2, [r7, #6]
 8004670:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8004674:	b29b      	uxth	r3, r3
 8004676:	1ad3      	subs	r3, r2, r3
 8004678:	b29b      	uxth	r3, r3
 800467a:	80fb      	strh	r3, [r7, #6]
 800467c:	e007      	b.n	800468e <ucg_add_vector_y+0x6c>
 800467e:	88fa      	ldrh	r2, [r7, #6]
 8004680:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8004684:	b29b      	uxth	r3, r3
 8004686:	1ad3      	subs	r3, r2, r3
 8004688:	b29b      	uxth	r3, r3
 800468a:	80fb      	strh	r3, [r7, #6]
 800468c:	bf00      	nop
 800468e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004692:	4618      	mov	r0, r3
 8004694:	3708      	adds	r7, #8
 8004696:	46bd      	mov	sp, r7
 8004698:	bc90      	pop	{r4, r7}
 800469a:	4770      	bx	lr

0800469c <ucg_add_vector_x>:
 800469c:	b490      	push	{r4, r7}
 800469e:	b082      	sub	sp, #8
 80046a0:	af00      	add	r7, sp, #0
 80046a2:	4604      	mov	r4, r0
 80046a4:	4608      	mov	r0, r1
 80046a6:	4611      	mov	r1, r2
 80046a8:	461a      	mov	r2, r3
 80046aa:	4623      	mov	r3, r4
 80046ac:	80fb      	strh	r3, [r7, #6]
 80046ae:	4603      	mov	r3, r0
 80046b0:	717b      	strb	r3, [r7, #5]
 80046b2:	460b      	mov	r3, r1
 80046b4:	713b      	strb	r3, [r7, #4]
 80046b6:	4613      	mov	r3, r2
 80046b8:	70fb      	strb	r3, [r7, #3]
 80046ba:	78fb      	ldrb	r3, [r7, #3]
 80046bc:	2b01      	cmp	r3, #1
 80046be:	d00b      	beq.n	80046d8 <ucg_add_vector_x+0x3c>
 80046c0:	2b02      	cmp	r3, #2
 80046c2:	d011      	beq.n	80046e8 <ucg_add_vector_x+0x4c>
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	d117      	bne.n	80046f8 <ucg_add_vector_x+0x5c>
 80046c8:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80046cc:	b29a      	uxth	r2, r3
 80046ce:	88fb      	ldrh	r3, [r7, #6]
 80046d0:	4413      	add	r3, r2
 80046d2:	b29b      	uxth	r3, r3
 80046d4:	80fb      	strh	r3, [r7, #6]
 80046d6:	e017      	b.n	8004708 <ucg_add_vector_x+0x6c>
 80046d8:	88fa      	ldrh	r2, [r7, #6]
 80046da:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80046de:	b29b      	uxth	r3, r3
 80046e0:	1ad3      	subs	r3, r2, r3
 80046e2:	b29b      	uxth	r3, r3
 80046e4:	80fb      	strh	r3, [r7, #6]
 80046e6:	e00f      	b.n	8004708 <ucg_add_vector_x+0x6c>
 80046e8:	88fa      	ldrh	r2, [r7, #6]
 80046ea:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80046ee:	b29b      	uxth	r3, r3
 80046f0:	1ad3      	subs	r3, r2, r3
 80046f2:	b29b      	uxth	r3, r3
 80046f4:	80fb      	strh	r3, [r7, #6]
 80046f6:	e007      	b.n	8004708 <ucg_add_vector_x+0x6c>
 80046f8:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80046fc:	b29a      	uxth	r2, r3
 80046fe:	88fb      	ldrh	r3, [r7, #6]
 8004700:	4413      	add	r3, r2
 8004702:	b29b      	uxth	r3, r3
 8004704:	80fb      	strh	r3, [r7, #6]
 8004706:	bf00      	nop
 8004708:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800470c:	4618      	mov	r0, r3
 800470e:	3708      	adds	r7, #8
 8004710:	46bd      	mov	sp, r7
 8004712:	bc90      	pop	{r4, r7}
 8004714:	4770      	bx	lr

08004716 <ucg_font_decode_len>:
 8004716:	b590      	push	{r4, r7, lr}
 8004718:	b089      	sub	sp, #36	@ 0x24
 800471a:	af02      	add	r7, sp, #8
 800471c:	6078      	str	r0, [r7, #4]
 800471e:	460b      	mov	r3, r1
 8004720:	70fb      	strb	r3, [r7, #3]
 8004722:	4613      	mov	r3, r2
 8004724:	70bb      	strb	r3, [r7, #2]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	3380      	adds	r3, #128	@ 0x80
 800472a:	613b      	str	r3, [r7, #16]
 800472c:	78fb      	ldrb	r3, [r7, #3]
 800472e:	75fb      	strb	r3, [r7, #23]
 8004730:	693b      	ldr	r3, [r7, #16]
 8004732:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8004736:	757b      	strb	r3, [r7, #21]
 8004738:	693b      	ldr	r3, [r7, #16]
 800473a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800473e:	753b      	strb	r3, [r7, #20]
 8004740:	693b      	ldr	r3, [r7, #16]
 8004742:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8004746:	73fb      	strb	r3, [r7, #15]
 8004748:	7bfa      	ldrb	r2, [r7, #15]
 800474a:	7d7b      	ldrb	r3, [r7, #21]
 800474c:	1ad3      	subs	r3, r2, r3
 800474e:	73fb      	strb	r3, [r7, #15]
 8004750:	7bfb      	ldrb	r3, [r7, #15]
 8004752:	75bb      	strb	r3, [r7, #22]
 8004754:	7dfa      	ldrb	r2, [r7, #23]
 8004756:	7bfb      	ldrb	r3, [r7, #15]
 8004758:	429a      	cmp	r2, r3
 800475a:	d201      	bcs.n	8004760 <ucg_font_decode_len+0x4a>
 800475c:	7dfb      	ldrb	r3, [r7, #23]
 800475e:	75bb      	strb	r3, [r7, #22]
 8004760:	693b      	ldr	r3, [r7, #16]
 8004762:	889b      	ldrh	r3, [r3, #4]
 8004764:	81bb      	strh	r3, [r7, #12]
 8004766:	693b      	ldr	r3, [r7, #16]
 8004768:	88db      	ldrh	r3, [r3, #6]
 800476a:	817b      	strh	r3, [r7, #10]
 800476c:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8004770:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8004774:	693b      	ldr	r3, [r7, #16]
 8004776:	7b9b      	ldrb	r3, [r3, #14]
 8004778:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 800477c:	f7ff ff8e 	bl	800469c <ucg_add_vector_x>
 8004780:	4603      	mov	r3, r0
 8004782:	81bb      	strh	r3, [r7, #12]
 8004784:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8004788:	f997 2014 	ldrsb.w	r2, [r7, #20]
 800478c:	693b      	ldr	r3, [r7, #16]
 800478e:	7b9b      	ldrb	r3, [r3, #14]
 8004790:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8004794:	f7ff ff45 	bl	8004622 <ucg_add_vector_y>
 8004798:	4603      	mov	r3, r0
 800479a:	817b      	strh	r3, [r7, #10]
 800479c:	78bb      	ldrb	r3, [r7, #2]
 800479e:	2b00      	cmp	r3, #0
 80047a0:	d011      	beq.n	80047c6 <ucg_font_decode_len+0xb0>
 80047a2:	7dbb      	ldrb	r3, [r7, #22]
 80047a4:	b21c      	sxth	r4, r3
 80047a6:	693b      	ldr	r3, [r7, #16]
 80047a8:	7b9b      	ldrb	r3, [r3, #14]
 80047aa:	b21b      	sxth	r3, r3
 80047ac:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80047b0:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 80047b4:	2200      	movs	r2, #0
 80047b6:	9201      	str	r2, [sp, #4]
 80047b8:	9300      	str	r3, [sp, #0]
 80047ba:	4623      	mov	r3, r4
 80047bc:	4602      	mov	r2, r0
 80047be:	6878      	ldr	r0, [r7, #4]
 80047c0:	f000 fbc0 	bl	8004f44 <ucg_Draw90Line>
 80047c4:	e014      	b.n	80047f0 <ucg_font_decode_len+0xda>
 80047c6:	693b      	ldr	r3, [r7, #16]
 80047c8:	7b5b      	ldrb	r3, [r3, #13]
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	d110      	bne.n	80047f0 <ucg_font_decode_len+0xda>
 80047ce:	7dbb      	ldrb	r3, [r7, #22]
 80047d0:	b21c      	sxth	r4, r3
 80047d2:	693b      	ldr	r3, [r7, #16]
 80047d4:	7b9b      	ldrb	r3, [r3, #14]
 80047d6:	b21b      	sxth	r3, r3
 80047d8:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 80047dc:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 80047e0:	2201      	movs	r2, #1
 80047e2:	9201      	str	r2, [sp, #4]
 80047e4:	9300      	str	r3, [sp, #0]
 80047e6:	4623      	mov	r3, r4
 80047e8:	4602      	mov	r2, r0
 80047ea:	6878      	ldr	r0, [r7, #4]
 80047ec:	f000 fbaa 	bl	8004f44 <ucg_Draw90Line>
 80047f0:	7dfa      	ldrb	r2, [r7, #23]
 80047f2:	7bfb      	ldrb	r3, [r7, #15]
 80047f4:	429a      	cmp	r2, r3
 80047f6:	d309      	bcc.n	800480c <ucg_font_decode_len+0xf6>
 80047f8:	7dfa      	ldrb	r2, [r7, #23]
 80047fa:	7bfb      	ldrb	r3, [r7, #15]
 80047fc:	1ad3      	subs	r3, r2, r3
 80047fe:	75fb      	strb	r3, [r7, #23]
 8004800:	2300      	movs	r3, #0
 8004802:	757b      	strb	r3, [r7, #21]
 8004804:	7d3b      	ldrb	r3, [r7, #20]
 8004806:	3301      	adds	r3, #1
 8004808:	753b      	strb	r3, [r7, #20]
 800480a:	e799      	b.n	8004740 <ucg_font_decode_len+0x2a>
 800480c:	bf00      	nop
 800480e:	7d7a      	ldrb	r2, [r7, #21]
 8004810:	7dfb      	ldrb	r3, [r7, #23]
 8004812:	4413      	add	r3, r2
 8004814:	757b      	strb	r3, [r7, #21]
 8004816:	f997 2015 	ldrsb.w	r2, [r7, #21]
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	721a      	strb	r2, [r3, #8]
 800481e:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8004822:	693b      	ldr	r3, [r7, #16]
 8004824:	725a      	strb	r2, [r3, #9]
 8004826:	bf00      	nop
 8004828:	371c      	adds	r7, #28
 800482a:	46bd      	mov	sp, r7
 800482c:	bd90      	pop	{r4, r7, pc}

0800482e <ucg_font_setup_decode>:
 800482e:	b580      	push	{r7, lr}
 8004830:	b084      	sub	sp, #16
 8004832:	af00      	add	r7, sp, #0
 8004834:	6078      	str	r0, [r7, #4]
 8004836:	6039      	str	r1, [r7, #0]
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	3380      	adds	r3, #128	@ 0x80
 800483c:	60fb      	str	r3, [r7, #12]
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	683a      	ldr	r2, [r7, #0]
 8004842:	601a      	str	r2, [r3, #0]
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	2200      	movs	r2, #0
 8004848:	731a      	strb	r2, [r3, #12]
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	1c5a      	adds	r2, r3, #1
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	601a      	str	r2, [r3, #0]
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	1c5a      	adds	r2, r3, #1
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	601a      	str	r2, [r3, #0]
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	f893 3094 	ldrb.w	r3, [r3, #148]	@ 0x94
 8004864:	4619      	mov	r1, r3
 8004866:	68f8      	ldr	r0, [r7, #12]
 8004868:	f7ff fe6d 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 800486c:	4603      	mov	r3, r0
 800486e:	b25a      	sxtb	r2, r3
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	729a      	strb	r2, [r3, #10]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	f893 3095 	ldrb.w	r3, [r3, #149]	@ 0x95
 800487a:	4619      	mov	r1, r3
 800487c:	68f8      	ldr	r0, [r7, #12]
 800487e:	f7ff fe62 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 8004882:	4603      	mov	r3, r0
 8004884:	b25a      	sxtb	r2, r3
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	72da      	strb	r2, [r3, #11]
 800488a:	bf00      	nop
 800488c:	3710      	adds	r7, #16
 800488e:	46bd      	mov	sp, r7
 8004890:	bd80      	pop	{r7, pc}

08004892 <ucg_font_decode_glyph>:
 8004892:	b580      	push	{r7, lr}
 8004894:	b084      	sub	sp, #16
 8004896:	af00      	add	r7, sp, #0
 8004898:	6078      	str	r0, [r7, #4]
 800489a:	6039      	str	r1, [r7, #0]
 800489c:	6839      	ldr	r1, [r7, #0]
 800489e:	6878      	ldr	r0, [r7, #4]
 80048a0:	f7ff ffc5 	bl	800482e <ucg_font_setup_decode>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	f893 308b 	ldrb.w	r3, [r3, #139]	@ 0x8b
 80048aa:	73fb      	strb	r3, [r7, #15]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	f893 3096 	ldrb.w	r3, [r3, #150]	@ 0x96
 80048b8:	4619      	mov	r1, r3
 80048ba:	4610      	mov	r0, r2
 80048bc:	f7ff fe8e 	bl	80045dc <ucg_font_decode_get_signed_bits>
 80048c0:	4603      	mov	r3, r0
 80048c2:	73bb      	strb	r3, [r7, #14]
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	f893 3097 	ldrb.w	r3, [r3, #151]	@ 0x97
 80048d0:	4619      	mov	r1, r3
 80048d2:	4610      	mov	r0, r2
 80048d4:	f7ff fe82 	bl	80045dc <ucg_font_decode_get_signed_bits>
 80048d8:	4603      	mov	r3, r0
 80048da:	737b      	strb	r3, [r7, #13]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	f893 3098 	ldrb.w	r3, [r3, #152]	@ 0x98
 80048e8:	4619      	mov	r1, r3
 80048ea:	4610      	mov	r0, r2
 80048ec:	f7ff fe76 	bl	80045dc <ucg_font_decode_get_signed_bits>
 80048f0:	4603      	mov	r3, r0
 80048f2:	733b      	strb	r3, [r7, #12]
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	f993 308a 	ldrsb.w	r3, [r3, #138]	@ 0x8a
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	dd69      	ble.n	80049d2 <ucg_font_decode_glyph+0x140>
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	@ 0x84
 8004904:	7bfa      	ldrb	r2, [r7, #15]
 8004906:	7b7b      	ldrb	r3, [r7, #13]
 8004908:	4413      	add	r3, r2
 800490a:	b2db      	uxtb	r3, r3
 800490c:	425b      	negs	r3, r3
 800490e:	b2db      	uxtb	r3, r3
 8004910:	b25a      	sxtb	r2, r3
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 8004918:	f997 100e 	ldrsb.w	r1, [r7, #14]
 800491c:	f7ff febe 	bl	800469c <ucg_add_vector_x>
 8004920:	4603      	mov	r3, r0
 8004922:	461a      	mov	r2, r3
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	@ 0x86
 8004930:	7bfa      	ldrb	r2, [r7, #15]
 8004932:	7b7b      	ldrb	r3, [r7, #13]
 8004934:	4413      	add	r3, r2
 8004936:	b2db      	uxtb	r3, r3
 8004938:	425b      	negs	r3, r3
 800493a:	b2db      	uxtb	r3, r3
 800493c:	b25a      	sxtb	r2, r3
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 8004944:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8004948:	f7ff fe6b 	bl	8004622 <ucg_add_vector_y>
 800494c:	4603      	mov	r3, r0
 800494e:	461a      	mov	r2, r3
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	2200      	movs	r2, #0
 800495a:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	2200      	movs	r2, #0
 8004962:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	f893 3092 	ldrb.w	r3, [r3, #146]	@ 0x92
 8004972:	4619      	mov	r1, r3
 8004974:	4610      	mov	r0, r2
 8004976:	f7ff fde6 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 800497a:	4603      	mov	r3, r0
 800497c:	72fb      	strb	r3, [r7, #11]
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	f893 3093 	ldrb.w	r3, [r3, #147]	@ 0x93
 800498a:	4619      	mov	r1, r3
 800498c:	4610      	mov	r0, r2
 800498e:	f7ff fdda 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 8004992:	4603      	mov	r3, r0
 8004994:	72bb      	strb	r3, [r7, #10]
 8004996:	7afb      	ldrb	r3, [r7, #11]
 8004998:	2200      	movs	r2, #0
 800499a:	4619      	mov	r1, r3
 800499c:	6878      	ldr	r0, [r7, #4]
 800499e:	f7ff feba 	bl	8004716 <ucg_font_decode_len>
 80049a2:	7abb      	ldrb	r3, [r7, #10]
 80049a4:	2201      	movs	r2, #1
 80049a6:	4619      	mov	r1, r3
 80049a8:	6878      	ldr	r0, [r7, #4]
 80049aa:	f7ff feb4 	bl	8004716 <ucg_font_decode_len>
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	3380      	adds	r3, #128	@ 0x80
 80049b2:	2101      	movs	r1, #1
 80049b4:	4618      	mov	r0, r3
 80049b6:	f7ff fdc6 	bl	8004546 <ucg_font_decode_get_unsigned_bits>
 80049ba:	4603      	mov	r3, r0
 80049bc:	2b00      	cmp	r3, #0
 80049be:	d1ea      	bne.n	8004996 <ucg_font_decode_glyph+0x104>
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	f993 3089 	ldrsb.w	r3, [r3, #137]	@ 0x89
 80049c6:	f997 200f 	ldrsb.w	r2, [r7, #15]
 80049ca:	429a      	cmp	r2, r3
 80049cc:	dd00      	ble.n	80049d0 <ucg_font_decode_glyph+0x13e>
 80049ce:	e7ca      	b.n	8004966 <ucg_font_decode_glyph+0xd4>
 80049d0:	bf00      	nop
 80049d2:	f997 300c 	ldrsb.w	r3, [r7, #12]
 80049d6:	4618      	mov	r0, r3
 80049d8:	3710      	adds	r7, #16
 80049da:	46bd      	mov	sp, r7
 80049dc:	bd80      	pop	{r7, pc}

080049de <ucg_font_get_glyph_data>:
 80049de:	b480      	push	{r7}
 80049e0:	b085      	sub	sp, #20
 80049e2:	af00      	add	r7, sp, #0
 80049e4:	6078      	str	r0, [r7, #4]
 80049e6:	460b      	mov	r3, r1
 80049e8:	70fb      	strb	r3, [r7, #3]
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80049ee:	60fb      	str	r3, [r7, #12]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	3315      	adds	r3, #21
 80049f4:	60fb      	str	r3, [r7, #12]
 80049f6:	78fb      	ldrb	r3, [r7, #3]
 80049f8:	2b60      	cmp	r3, #96	@ 0x60
 80049fa:	d907      	bls.n	8004a0c <ucg_font_get_glyph_data+0x2e>
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	@ 0xa4
 8004a02:	461a      	mov	r2, r3
 8004a04:	68fb      	ldr	r3, [r7, #12]
 8004a06:	4413      	add	r3, r2
 8004a08:	60fb      	str	r3, [r7, #12]
 8004a0a:	e009      	b.n	8004a20 <ucg_font_get_glyph_data+0x42>
 8004a0c:	78fb      	ldrb	r3, [r7, #3]
 8004a0e:	2b40      	cmp	r3, #64	@ 0x40
 8004a10:	d906      	bls.n	8004a20 <ucg_font_get_glyph_data+0x42>
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	@ 0xa2
 8004a18:	461a      	mov	r2, r3
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	4413      	add	r3, r2
 8004a1e:	60fb      	str	r3, [r7, #12]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	3301      	adds	r3, #1
 8004a24:	781b      	ldrb	r3, [r3, #0]
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d00e      	beq.n	8004a48 <ucg_font_get_glyph_data+0x6a>
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	781b      	ldrb	r3, [r3, #0]
 8004a2e:	78fa      	ldrb	r2, [r7, #3]
 8004a30:	429a      	cmp	r2, r3
 8004a32:	d101      	bne.n	8004a38 <ucg_font_get_glyph_data+0x5a>
 8004a34:	68fb      	ldr	r3, [r7, #12]
 8004a36:	e009      	b.n	8004a4c <ucg_font_get_glyph_data+0x6e>
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	3301      	adds	r3, #1
 8004a3c:	781b      	ldrb	r3, [r3, #0]
 8004a3e:	461a      	mov	r2, r3
 8004a40:	68fb      	ldr	r3, [r7, #12]
 8004a42:	4413      	add	r3, r2
 8004a44:	60fb      	str	r3, [r7, #12]
 8004a46:	e7eb      	b.n	8004a20 <ucg_font_get_glyph_data+0x42>
 8004a48:	bf00      	nop
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	4618      	mov	r0, r3
 8004a4e:	3714      	adds	r7, #20
 8004a50:	46bd      	mov	sp, r7
 8004a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a56:	4770      	bx	lr

08004a58 <ucg_font_draw_glyph>:
 8004a58:	b580      	push	{r7, lr}
 8004a5a:	b086      	sub	sp, #24
 8004a5c:	af00      	add	r7, sp, #0
 8004a5e:	60f8      	str	r0, [r7, #12]
 8004a60:	4608      	mov	r0, r1
 8004a62:	4611      	mov	r1, r2
 8004a64:	461a      	mov	r2, r3
 8004a66:	4603      	mov	r3, r0
 8004a68:	817b      	strh	r3, [r7, #10]
 8004a6a:	460b      	mov	r3, r1
 8004a6c:	813b      	strh	r3, [r7, #8]
 8004a6e:	4613      	mov	r3, r2
 8004a70:	71fb      	strb	r3, [r7, #7]
 8004a72:	2300      	movs	r3, #0
 8004a74:	82fb      	strh	r3, [r7, #22]
 8004a76:	68fb      	ldr	r3, [r7, #12]
 8004a78:	897a      	ldrh	r2, [r7, #10]
 8004a7a:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	893a      	ldrh	r2, [r7, #8]
 8004a82:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	79fa      	ldrb	r2, [r7, #7]
 8004a8a:	f883 208e 	strb.w	r2, [r3, #142]	@ 0x8e
 8004a8e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8004a92:	4619      	mov	r1, r3
 8004a94:	68f8      	ldr	r0, [r7, #12]
 8004a96:	f7ff ffa2 	bl	80049de <ucg_font_get_glyph_data>
 8004a9a:	6138      	str	r0, [r7, #16]
 8004a9c:	693b      	ldr	r3, [r7, #16]
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d005      	beq.n	8004aae <ucg_font_draw_glyph+0x56>
 8004aa2:	6939      	ldr	r1, [r7, #16]
 8004aa4:	68f8      	ldr	r0, [r7, #12]
 8004aa6:	f7ff fef4 	bl	8004892 <ucg_font_decode_glyph>
 8004aaa:	4603      	mov	r3, r0
 8004aac:	82fb      	strh	r3, [r7, #22]
 8004aae:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	3718      	adds	r7, #24
 8004ab6:	46bd      	mov	sp, r7
 8004ab8:	bd80      	pop	{r7, pc}

08004aba <ucg_SetFontMode>:
 8004aba:	b480      	push	{r7}
 8004abc:	b083      	sub	sp, #12
 8004abe:	af00      	add	r7, sp, #0
 8004ac0:	6078      	str	r0, [r7, #4]
 8004ac2:	460b      	mov	r3, r1
 8004ac4:	70fb      	strb	r3, [r7, #3]
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	78fa      	ldrb	r2, [r7, #3]
 8004aca:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 8004ace:	bf00      	nop
 8004ad0:	370c      	adds	r7, #12
 8004ad2:	46bd      	mov	sp, r7
 8004ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad8:	4770      	bx	lr
	...

08004adc <ucg_DrawGlyph>:
 8004adc:	b580      	push	{r7, lr}
 8004ade:	b086      	sub	sp, #24
 8004ae0:	af02      	add	r7, sp, #8
 8004ae2:	60f8      	str	r0, [r7, #12]
 8004ae4:	4608      	mov	r0, r1
 8004ae6:	4611      	mov	r1, r2
 8004ae8:	461a      	mov	r2, r3
 8004aea:	4603      	mov	r3, r0
 8004aec:	817b      	strh	r3, [r7, #10]
 8004aee:	460b      	mov	r3, r1
 8004af0:	813b      	strh	r3, [r7, #8]
 8004af2:	4613      	mov	r3, r2
 8004af4:	71fb      	strb	r3, [r7, #7]
 8004af6:	79fb      	ldrb	r3, [r7, #7]
 8004af8:	2b03      	cmp	r3, #3
 8004afa:	d837      	bhi.n	8004b6c <ucg_DrawGlyph+0x90>
 8004afc:	a201      	add	r2, pc, #4	@ (adr r2, 8004b04 <ucg_DrawGlyph+0x28>)
 8004afe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b02:	bf00      	nop
 8004b04:	08004b15 	.word	0x08004b15
 8004b08:	08004b2b 	.word	0x08004b2b
 8004b0c:	08004b41 	.word	0x08004b41
 8004b10:	08004b57 	.word	0x08004b57
 8004b14:	68fb      	ldr	r3, [r7, #12]
 8004b16:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004b18:	68f8      	ldr	r0, [r7, #12]
 8004b1a:	4798      	blx	r3
 8004b1c:	4603      	mov	r3, r0
 8004b1e:	b29a      	uxth	r2, r3
 8004b20:	893b      	ldrh	r3, [r7, #8]
 8004b22:	4413      	add	r3, r2
 8004b24:	b29b      	uxth	r3, r3
 8004b26:	813b      	strh	r3, [r7, #8]
 8004b28:	e020      	b.n	8004b6c <ucg_DrawGlyph+0x90>
 8004b2a:	68fb      	ldr	r3, [r7, #12]
 8004b2c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004b2e:	68f8      	ldr	r0, [r7, #12]
 8004b30:	4798      	blx	r3
 8004b32:	4603      	mov	r3, r0
 8004b34:	897a      	ldrh	r2, [r7, #10]
 8004b36:	b29b      	uxth	r3, r3
 8004b38:	1ad3      	subs	r3, r2, r3
 8004b3a:	b29b      	uxth	r3, r3
 8004b3c:	817b      	strh	r3, [r7, #10]
 8004b3e:	e015      	b.n	8004b6c <ucg_DrawGlyph+0x90>
 8004b40:	68fb      	ldr	r3, [r7, #12]
 8004b42:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004b44:	68f8      	ldr	r0, [r7, #12]
 8004b46:	4798      	blx	r3
 8004b48:	4603      	mov	r3, r0
 8004b4a:	893a      	ldrh	r2, [r7, #8]
 8004b4c:	b29b      	uxth	r3, r3
 8004b4e:	1ad3      	subs	r3, r2, r3
 8004b50:	b29b      	uxth	r3, r3
 8004b52:	813b      	strh	r3, [r7, #8]
 8004b54:	e00a      	b.n	8004b6c <ucg_DrawGlyph+0x90>
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004b5a:	68f8      	ldr	r0, [r7, #12]
 8004b5c:	4798      	blx	r3
 8004b5e:	4603      	mov	r3, r0
 8004b60:	b29a      	uxth	r2, r3
 8004b62:	897b      	ldrh	r3, [r7, #10]
 8004b64:	4413      	add	r3, r2
 8004b66:	b29b      	uxth	r3, r3
 8004b68:	817b      	strh	r3, [r7, #10]
 8004b6a:	bf00      	nop
 8004b6c:	79f8      	ldrb	r0, [r7, #7]
 8004b6e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8004b72:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004b76:	7e3b      	ldrb	r3, [r7, #24]
 8004b78:	9300      	str	r3, [sp, #0]
 8004b7a:	4603      	mov	r3, r0
 8004b7c:	68f8      	ldr	r0, [r7, #12]
 8004b7e:	f7ff ff6b 	bl	8004a58 <ucg_font_draw_glyph>
 8004b82:	4603      	mov	r3, r0
 8004b84:	4618      	mov	r0, r3
 8004b86:	3710      	adds	r7, #16
 8004b88:	46bd      	mov	sp, r7
 8004b8a:	bd80      	pop	{r7, pc}

08004b8c <task_drawString>:
 8004b8c:	b580      	push	{r7, lr}
 8004b8e:	b086      	sub	sp, #24
 8004b90:	af02      	add	r7, sp, #8
 8004b92:	6078      	str	r0, [r7, #4]
 8004b94:	2300      	movs	r3, #0
 8004b96:	81fb      	strh	r3, [r7, #14]
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	60bb      	str	r3, [r7, #8]
 8004b9c:	4b45      	ldr	r3, [pc, #276]	@ (8004cb4 <task_drawString+0x128>)
 8004b9e:	781b      	ldrb	r3, [r3, #0]
 8004ba0:	2b00      	cmp	r3, #0
 8004ba2:	d002      	beq.n	8004baa <task_drawString+0x1e>
 8004ba4:	2b01      	cmp	r3, #1
 8004ba6:	d01e      	beq.n	8004be6 <task_drawString+0x5a>
 8004ba8:	e07b      	b.n	8004ca2 <task_drawString+0x116>
 8004baa:	4843      	ldr	r0, [pc, #268]	@ (8004cb8 <task_drawString+0x12c>)
 8004bac:	f000 fb5d 	bl	800526a <bufNumItems>
 8004bb0:	4603      	mov	r3, r0
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d007      	beq.n	8004bc6 <task_drawString+0x3a>
 8004bb6:	4941      	ldr	r1, [pc, #260]	@ (8004cbc <task_drawString+0x130>)
 8004bb8:	483f      	ldr	r0, [pc, #252]	@ (8004cb8 <task_drawString+0x12c>)
 8004bba:	f000 fbef 	bl	800539c <bufDeDat>
 8004bbe:	4b3d      	ldr	r3, [pc, #244]	@ (8004cb4 <task_drawString+0x128>)
 8004bc0:	2201      	movs	r2, #1
 8004bc2:	701a      	strb	r2, [r3, #0]
 8004bc4:	e071      	b.n	8004caa <task_drawString+0x11e>
 8004bc6:	4b3e      	ldr	r3, [pc, #248]	@ (8004cc0 <task_drawString+0x134>)
 8004bc8:	781b      	ldrb	r3, [r3, #0]
 8004bca:	2bff      	cmp	r3, #255	@ 0xff
 8004bcc:	d007      	beq.n	8004bde <task_drawString+0x52>
 8004bce:	4b3c      	ldr	r3, [pc, #240]	@ (8004cc0 <task_drawString+0x134>)
 8004bd0:	781b      	ldrb	r3, [r3, #0]
 8004bd2:	4618      	mov	r0, r3
 8004bd4:	f7fe f92e 	bl	8002e34 <TimerStop>
 8004bd8:	4b39      	ldr	r3, [pc, #228]	@ (8004cc0 <task_drawString+0x134>)
 8004bda:	22ff      	movs	r2, #255	@ 0xff
 8004bdc:	701a      	strb	r2, [r3, #0]
 8004bde:	4b35      	ldr	r3, [pc, #212]	@ (8004cb4 <task_drawString+0x128>)
 8004be0:	2200      	movs	r2, #0
 8004be2:	701a      	strb	r2, [r3, #0]
 8004be4:	e061      	b.n	8004caa <task_drawString+0x11e>
 8004be6:	4b35      	ldr	r3, [pc, #212]	@ (8004cbc <task_drawString+0x130>)
 8004be8:	689b      	ldr	r3, [r3, #8]
 8004bea:	781b      	ldrb	r3, [r3, #0]
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	d054      	beq.n	8004c9a <task_drawString+0x10e>
 8004bf0:	4b32      	ldr	r3, [pc, #200]	@ (8004cbc <task_drawString+0x130>)
 8004bf2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8004bf6:	4b31      	ldr	r3, [pc, #196]	@ (8004cbc <task_drawString+0x130>)
 8004bf8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8004bfc:	4b2f      	ldr	r3, [pc, #188]	@ (8004cbc <task_drawString+0x130>)
 8004bfe:	7918      	ldrb	r0, [r3, #4]
 8004c00:	4b2e      	ldr	r3, [pc, #184]	@ (8004cbc <task_drawString+0x130>)
 8004c02:	689b      	ldr	r3, [r3, #8]
 8004c04:	781b      	ldrb	r3, [r3, #0]
 8004c06:	9300      	str	r3, [sp, #0]
 8004c08:	4603      	mov	r3, r0
 8004c0a:	68b8      	ldr	r0, [r7, #8]
 8004c0c:	f7ff ff66 	bl	8004adc <ucg_DrawGlyph>
 8004c10:	4603      	mov	r3, r0
 8004c12:	81fb      	strh	r3, [r7, #14]
 8004c14:	4b29      	ldr	r3, [pc, #164]	@ (8004cbc <task_drawString+0x130>)
 8004c16:	791b      	ldrb	r3, [r3, #4]
 8004c18:	2b03      	cmp	r3, #3
 8004c1a:	d837      	bhi.n	8004c8c <task_drawString+0x100>
 8004c1c:	a201      	add	r2, pc, #4	@ (adr r2, 8004c24 <task_drawString+0x98>)
 8004c1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c22:	bf00      	nop
 8004c24:	08004c35 	.word	0x08004c35
 8004c28:	08004c4b 	.word	0x08004c4b
 8004c2c:	08004c61 	.word	0x08004c61
 8004c30:	08004c77 	.word	0x08004c77
 8004c34:	4b21      	ldr	r3, [pc, #132]	@ (8004cbc <task_drawString+0x130>)
 8004c36:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004c3a:	b29a      	uxth	r2, r3
 8004c3c:	89fb      	ldrh	r3, [r7, #14]
 8004c3e:	4413      	add	r3, r2
 8004c40:	b29b      	uxth	r3, r3
 8004c42:	b21a      	sxth	r2, r3
 8004c44:	4b1d      	ldr	r3, [pc, #116]	@ (8004cbc <task_drawString+0x130>)
 8004c46:	801a      	strh	r2, [r3, #0]
 8004c48:	e021      	b.n	8004c8e <task_drawString+0x102>
 8004c4a:	4b1c      	ldr	r3, [pc, #112]	@ (8004cbc <task_drawString+0x130>)
 8004c4c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004c50:	b29a      	uxth	r2, r3
 8004c52:	89fb      	ldrh	r3, [r7, #14]
 8004c54:	4413      	add	r3, r2
 8004c56:	b29b      	uxth	r3, r3
 8004c58:	b21a      	sxth	r2, r3
 8004c5a:	4b18      	ldr	r3, [pc, #96]	@ (8004cbc <task_drawString+0x130>)
 8004c5c:	805a      	strh	r2, [r3, #2]
 8004c5e:	e016      	b.n	8004c8e <task_drawString+0x102>
 8004c60:	4b16      	ldr	r3, [pc, #88]	@ (8004cbc <task_drawString+0x130>)
 8004c62:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004c66:	b29a      	uxth	r2, r3
 8004c68:	89fb      	ldrh	r3, [r7, #14]
 8004c6a:	1ad3      	subs	r3, r2, r3
 8004c6c:	b29b      	uxth	r3, r3
 8004c6e:	b21a      	sxth	r2, r3
 8004c70:	4b12      	ldr	r3, [pc, #72]	@ (8004cbc <task_drawString+0x130>)
 8004c72:	801a      	strh	r2, [r3, #0]
 8004c74:	e00b      	b.n	8004c8e <task_drawString+0x102>
 8004c76:	4b11      	ldr	r3, [pc, #68]	@ (8004cbc <task_drawString+0x130>)
 8004c78:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004c7c:	b29a      	uxth	r2, r3
 8004c7e:	89fb      	ldrh	r3, [r7, #14]
 8004c80:	1ad3      	subs	r3, r2, r3
 8004c82:	b29b      	uxth	r3, r3
 8004c84:	b21a      	sxth	r2, r3
 8004c86:	4b0d      	ldr	r3, [pc, #52]	@ (8004cbc <task_drawString+0x130>)
 8004c88:	805a      	strh	r2, [r3, #2]
 8004c8a:	e000      	b.n	8004c8e <task_drawString+0x102>
 8004c8c:	bf00      	nop
 8004c8e:	4b0b      	ldr	r3, [pc, #44]	@ (8004cbc <task_drawString+0x130>)
 8004c90:	689b      	ldr	r3, [r3, #8]
 8004c92:	3301      	adds	r3, #1
 8004c94:	4a09      	ldr	r2, [pc, #36]	@ (8004cbc <task_drawString+0x130>)
 8004c96:	6093      	str	r3, [r2, #8]
 8004c98:	e007      	b.n	8004caa <task_drawString+0x11e>
 8004c9a:	4b06      	ldr	r3, [pc, #24]	@ (8004cb4 <task_drawString+0x128>)
 8004c9c:	2200      	movs	r2, #0
 8004c9e:	701a      	strb	r2, [r3, #0]
 8004ca0:	e003      	b.n	8004caa <task_drawString+0x11e>
 8004ca2:	4b04      	ldr	r3, [pc, #16]	@ (8004cb4 <task_drawString+0x128>)
 8004ca4:	2200      	movs	r2, #0
 8004ca6:	701a      	strb	r2, [r3, #0]
 8004ca8:	bf00      	nop
 8004caa:	bf00      	nop
 8004cac:	3710      	adds	r7, #16
 8004cae:	46bd      	mov	sp, r7
 8004cb0:	bd80      	pop	{r7, pc}
 8004cb2:	bf00      	nop
 8004cb4:	200015f8 	.word	0x200015f8
 8004cb8:	200005e8 	.word	0x200005e8
 8004cbc:	200017cc 	.word	0x200017cc
 8004cc0:	20000037 	.word	0x20000037

08004cc4 <ucg_DrawString>:
 8004cc4:	b580      	push	{r7, lr}
 8004cc6:	b08a      	sub	sp, #40	@ 0x28
 8004cc8:	af02      	add	r7, sp, #8
 8004cca:	60f8      	str	r0, [r7, #12]
 8004ccc:	4608      	mov	r0, r1
 8004cce:	4611      	mov	r1, r2
 8004cd0:	461a      	mov	r2, r3
 8004cd2:	4603      	mov	r3, r0
 8004cd4:	817b      	strh	r3, [r7, #10]
 8004cd6:	460b      	mov	r3, r1
 8004cd8:	813b      	strh	r3, [r7, #8]
 8004cda:	4613      	mov	r3, r2
 8004cdc:	71fb      	strb	r3, [r7, #7]
 8004cde:	2300      	movs	r3, #0
 8004ce0:	83fb      	strh	r3, [r7, #30]
 8004ce2:	897b      	ldrh	r3, [r7, #10]
 8004ce4:	823b      	strh	r3, [r7, #16]
 8004ce6:	893b      	ldrh	r3, [r7, #8]
 8004ce8:	827b      	strh	r3, [r7, #18]
 8004cea:	79fb      	ldrb	r3, [r7, #7]
 8004cec:	753b      	strb	r3, [r7, #20]
 8004cee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004cf0:	61bb      	str	r3, [r7, #24]
 8004cf2:	f107 0310 	add.w	r3, r7, #16
 8004cf6:	4619      	mov	r1, r3
 8004cf8:	480c      	ldr	r0, [pc, #48]	@ (8004d2c <ucg_DrawString+0x68>)
 8004cfa:	f000 fb01 	bl	8005300 <bufEnDat>
 8004cfe:	4b0c      	ldr	r3, [pc, #48]	@ (8004d30 <ucg_DrawString+0x6c>)
 8004d00:	781b      	ldrb	r3, [r3, #0]
 8004d02:	2bff      	cmp	r3, #255	@ 0xff
 8004d04:	d10b      	bne.n	8004d1e <ucg_DrawString+0x5a>
 8004d06:	68fb      	ldr	r3, [r7, #12]
 8004d08:	9300      	str	r3, [sp, #0]
 8004d0a:	4b0a      	ldr	r3, [pc, #40]	@ (8004d34 <ucg_DrawString+0x70>)
 8004d0c:	22ff      	movs	r2, #255	@ 0xff
 8004d0e:	211e      	movs	r1, #30
 8004d10:	4809      	ldr	r0, [pc, #36]	@ (8004d38 <ucg_DrawString+0x74>)
 8004d12:	f7fe f811 	bl	8002d38 <TimerStart>
 8004d16:	4603      	mov	r3, r0
 8004d18:	461a      	mov	r2, r3
 8004d1a:	4b05      	ldr	r3, [pc, #20]	@ (8004d30 <ucg_DrawString+0x6c>)
 8004d1c:	701a      	strb	r2, [r3, #0]
 8004d1e:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8004d22:	4618      	mov	r0, r3
 8004d24:	3720      	adds	r7, #32
 8004d26:	46bd      	mov	sp, r7
 8004d28:	bd80      	pop	{r7, pc}
 8004d2a:	bf00      	nop
 8004d2c:	200005e8 	.word	0x200005e8
 8004d30:	20000037 	.word	0x20000037
 8004d34:	08004b8d 	.word	0x08004b8d
 8004d38:	08007d94 	.word	0x08007d94

08004d3c <ucg_UpdateRefHeight>:
 8004d3c:	b480      	push	{r7}
 8004d3e:	b083      	sub	sp, #12
 8004d40:	af00      	add	r7, sp, #0
 8004d42:	6078      	str	r0, [r7, #4]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d05d      	beq.n	8004e08 <ucg_UpdateRefHeight+0xcc>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	f993 209d 	ldrsb.w	r2, [r3, #157]	@ 0x9d
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	f993 209e 	ldrsb.w	r2, [r3, #158]	@ 0x9e
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d04d      	beq.n	8004e0a <ucg_UpdateRefHeight+0xce>
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 8004d74:	2b01      	cmp	r3, #1
 8004d76:	d11c      	bne.n	8004db2 <ucg_UpdateRefHeight+0x76>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	f993 20ac 	ldrsb.w	r2, [r3, #172]	@ 0xac
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	f993 309f 	ldrsb.w	r3, [r3, #159]	@ 0x9f
 8004d84:	429a      	cmp	r2, r3
 8004d86:	da05      	bge.n	8004d94 <ucg_UpdateRefHeight+0x58>
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	f993 209f 	ldrsb.w	r2, [r3, #159]	@ 0x9f
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	f993 30a0 	ldrsb.w	r3, [r3, #160]	@ 0xa0
 8004da0:	429a      	cmp	r2, r3
 8004da2:	dd32      	ble.n	8004e0a <ucg_UpdateRefHeight+0xce>
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	f993 20a0 	ldrsb.w	r2, [r3, #160]	@ 0xa0
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004db0:	e02b      	b.n	8004e0a <ucg_UpdateRefHeight+0xce>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	f993 30ac 	ldrsb.w	r3, [r3, #172]	@ 0xac
 8004db8:	461a      	mov	r2, r3
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 8004dc0:	4619      	mov	r1, r3
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 8004dc8:	440b      	add	r3, r1
 8004dca:	429a      	cmp	r2, r3
 8004dcc:	da0d      	bge.n	8004dea <ucg_UpdateRefHeight+0xae>
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 8004dd4:	b2da      	uxtb	r2, r3
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 8004ddc:	b2db      	uxtb	r3, r3
 8004dde:	4413      	add	r3, r2
 8004de0:	b2db      	uxtb	r3, r3
 8004de2:	b25a      	sxtb	r2, r3
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 8004df6:	429a      	cmp	r2, r3
 8004df8:	dd07      	ble.n	8004e0a <ucg_UpdateRefHeight+0xce>
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	f993 209c 	ldrsb.w	r2, [r3, #156]	@ 0x9c
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004e06:	e000      	b.n	8004e0a <ucg_UpdateRefHeight+0xce>
 8004e08:	bf00      	nop
 8004e0a:	370c      	adds	r7, #12
 8004e0c:	46bd      	mov	sp, r7
 8004e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e12:	4770      	bx	lr

08004e14 <ucg_font_calc_vref_font>:
 8004e14:	b480      	push	{r7}
 8004e16:	b083      	sub	sp, #12
 8004e18:	af00      	add	r7, sp, #0
 8004e1a:	6078      	str	r0, [r7, #4]
 8004e1c:	2300      	movs	r3, #0
 8004e1e:	4618      	mov	r0, r3
 8004e20:	370c      	adds	r7, #12
 8004e22:	46bd      	mov	sp, r7
 8004e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e28:	4770      	bx	lr
	...

08004e2c <ucg_SetFontPosBaseline>:
 8004e2c:	b480      	push	{r7}
 8004e2e:	b083      	sub	sp, #12
 8004e30:	af00      	add	r7, sp, #0
 8004e32:	6078      	str	r0, [r7, #4]
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	4a04      	ldr	r2, [pc, #16]	@ (8004e48 <ucg_SetFontPosBaseline+0x1c>)
 8004e38:	67da      	str	r2, [r3, #124]	@ 0x7c
 8004e3a:	bf00      	nop
 8004e3c:	370c      	adds	r7, #12
 8004e3e:	46bd      	mov	sp, r7
 8004e40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e44:	4770      	bx	lr
 8004e46:	bf00      	nop
 8004e48:	08004e15 	.word	0x08004e15

08004e4c <ucg_SetFont>:
 8004e4c:	b580      	push	{r7, lr}
 8004e4e:	b082      	sub	sp, #8
 8004e50:	af00      	add	r7, sp, #0
 8004e52:	6078      	str	r0, [r7, #4]
 8004e54:	6039      	str	r1, [r7, #0]
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8004e5a:	683a      	ldr	r2, [r7, #0]
 8004e5c:	429a      	cmp	r2, r3
 8004e5e:	d012      	beq.n	8004e86 <ucg_SetFont+0x3a>
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	683a      	ldr	r2, [r7, #0]
 8004e64:	679a      	str	r2, [r3, #120]	@ 0x78
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	3390      	adds	r3, #144	@ 0x90
 8004e6a:	6839      	ldr	r1, [r7, #0]
 8004e6c:	4618      	mov	r0, r3
 8004e6e:	f7ff fac9 	bl	8004404 <ucg_read_font_info>
 8004e72:	6878      	ldr	r0, [r7, #4]
 8004e74:	f7ff ff62 	bl	8004d3c <ucg_UpdateRefHeight>
 8004e78:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004e7c:	220c      	movs	r2, #12
 8004e7e:	4904      	ldr	r1, [pc, #16]	@ (8004e90 <ucg_SetFont+0x44>)
 8004e80:	4804      	ldr	r0, [pc, #16]	@ (8004e94 <ucg_SetFont+0x48>)
 8004e82:	f000 f9d7 	bl	8005234 <bufInit>
 8004e86:	bf00      	nop
 8004e88:	3708      	adds	r7, #8
 8004e8a:	46bd      	mov	sp, r7
 8004e8c:	bd80      	pop	{r7, pc}
 8004e8e:	bf00      	nop
 8004e90:	200005e8 	.word	0x200005e8
 8004e94:	200005f8 	.word	0x200005f8

08004e98 <ucg_init_struct>:
 8004e98:	b480      	push	{r7}
 8004e9a:	b083      	sub	sp, #12
 8004e9c:	af00      	add	r7, sp, #0
 8004e9e:	6078      	str	r0, [r7, #4]
 8004ea0:	687a      	ldr	r2, [r7, #4]
 8004ea2:	7813      	ldrb	r3, [r2, #0]
 8004ea4:	f36f 0300 	bfc	r3, #0, #1
 8004ea8:	7013      	strb	r3, [r2, #0]
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	2200      	movs	r2, #0
 8004eae:	611a      	str	r2, [r3, #16]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	2201      	movs	r2, #1
 8004eb4:	865a      	strh	r2, [r3, #50]	@ 0x32
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	2200      	movs	r2, #0
 8004eba:	679a      	str	r2, [r3, #120]	@ 0x78
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	2201      	movs	r2, #1
 8004ec0:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	2200      	movs	r2, #0
 8004ec8:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2200      	movs	r2, #0
 8004ed0:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	2200      	movs	r2, #0
 8004ed8:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 8004edc:	bf00      	nop
 8004ede:	370c      	adds	r7, #12
 8004ee0:	46bd      	mov	sp, r7
 8004ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ee6:	4770      	bx	lr

08004ee8 <ucg_Init>:
 8004ee8:	b580      	push	{r7, lr}
 8004eea:	b086      	sub	sp, #24
 8004eec:	af00      	add	r7, sp, #0
 8004eee:	60f8      	str	r0, [r7, #12]
 8004ef0:	60b9      	str	r1, [r7, #8]
 8004ef2:	607a      	str	r2, [r7, #4]
 8004ef4:	603b      	str	r3, [r7, #0]
 8004ef6:	68f8      	ldr	r0, [r7, #12]
 8004ef8:	f7ff ffce 	bl	8004e98 <ucg_init_struct>
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	d103      	bne.n	8004f0a <ucg_Init+0x22>
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	4a0e      	ldr	r2, [pc, #56]	@ (8004f40 <ucg_Init+0x58>)
 8004f06:	60da      	str	r2, [r3, #12]
 8004f08:	e002      	b.n	8004f10 <ucg_Init+0x28>
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	687a      	ldr	r2, [r7, #4]
 8004f0e:	60da      	str	r2, [r3, #12]
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	68ba      	ldr	r2, [r7, #8]
 8004f14:	609a      	str	r2, [r3, #8]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	683a      	ldr	r2, [r7, #0]
 8004f1a:	61da      	str	r2, [r3, #28]
 8004f1c:	68f8      	ldr	r0, [r7, #12]
 8004f1e:	f7ff ff85 	bl	8004e2c <ucg_SetFontPosBaseline>
 8004f22:	68f8      	ldr	r0, [r7, #12]
 8004f24:	f7ff f996 	bl	8004254 <ucg_PowerUp>
 8004f28:	4603      	mov	r3, r0
 8004f2a:	82fb      	strh	r3, [r7, #22]
 8004f2c:	68f8      	ldr	r0, [r7, #12]
 8004f2e:	f7ff f9d6 	bl	80042de <ucg_GetDimension>
 8004f32:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8004f36:	4618      	mov	r0, r3
 8004f38:	3718      	adds	r7, #24
 8004f3a:	46bd      	mov	sp, r7
 8004f3c:	bd80      	pop	{r7, pc}
 8004f3e:	bf00      	nop
 8004f40:	08003eb9 	.word	0x08003eb9

08004f44 <ucg_Draw90Line>:
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b084      	sub	sp, #16
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	60f8      	str	r0, [r7, #12]
 8004f4c:	4608      	mov	r0, r1
 8004f4e:	4611      	mov	r1, r2
 8004f50:	461a      	mov	r2, r3
 8004f52:	4603      	mov	r3, r0
 8004f54:	817b      	strh	r3, [r7, #10]
 8004f56:	460b      	mov	r3, r1
 8004f58:	813b      	strh	r3, [r7, #8]
 8004f5a:	4613      	mov	r3, r2
 8004f5c:	80fb      	strh	r3, [r7, #6]
 8004f5e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004f62:	68f9      	ldr	r1, [r7, #12]
 8004f64:	4613      	mov	r3, r2
 8004f66:	005b      	lsls	r3, r3, #1
 8004f68:	4413      	add	r3, r2
 8004f6a:	440b      	add	r3, r1
 8004f6c:	333a      	adds	r3, #58	@ 0x3a
 8004f6e:	781a      	ldrb	r2, [r3, #0]
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8004f76:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004f7a:	68f9      	ldr	r1, [r7, #12]
 8004f7c:	4613      	mov	r3, r2
 8004f7e:	005b      	lsls	r3, r3, #1
 8004f80:	4413      	add	r3, r2
 8004f82:	440b      	add	r3, r1
 8004f84:	333b      	adds	r3, #59	@ 0x3b
 8004f86:	781a      	ldrb	r2, [r3, #0]
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
 8004f8e:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004f92:	68f9      	ldr	r1, [r7, #12]
 8004f94:	4613      	mov	r3, r2
 8004f96:	005b      	lsls	r3, r3, #1
 8004f98:	4413      	add	r3, r2
 8004f9a:	440b      	add	r3, r1
 8004f9c:	333c      	adds	r3, #60	@ 0x3c
 8004f9e:	781a      	ldrb	r2, [r3, #0]
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	f883 202a 	strb.w	r2, [r3, #42]	@ 0x2a
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	897a      	ldrh	r2, [r7, #10]
 8004faa:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004fac:	68fb      	ldr	r3, [r7, #12]
 8004fae:	893a      	ldrh	r2, [r7, #8]
 8004fb0:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	88fa      	ldrh	r2, [r7, #6]
 8004fb6:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	8b3a      	ldrh	r2, [r7, #24]
 8004fbc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004fbe:	68f8      	ldr	r0, [r7, #12]
 8004fc0:	f7ff f99f 	bl	8004302 <ucg_DrawL90FXWithArg>
 8004fc4:	bf00      	nop
 8004fc6:	3710      	adds	r7, #16
 8004fc8:	46bd      	mov	sp, r7
 8004fca:	bd80      	pop	{r7, pc}

08004fcc <ucg_DrawHLine>:
 8004fcc:	b580      	push	{r7, lr}
 8004fce:	b086      	sub	sp, #24
 8004fd0:	af02      	add	r7, sp, #8
 8004fd2:	60f8      	str	r0, [r7, #12]
 8004fd4:	4608      	mov	r0, r1
 8004fd6:	4611      	mov	r1, r2
 8004fd8:	461a      	mov	r2, r3
 8004fda:	4603      	mov	r3, r0
 8004fdc:	817b      	strh	r3, [r7, #10]
 8004fde:	460b      	mov	r3, r1
 8004fe0:	813b      	strh	r3, [r7, #8]
 8004fe2:	4613      	mov	r3, r2
 8004fe4:	80fb      	strh	r3, [r7, #6]
 8004fe6:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 8004fea:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8004fee:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004ff2:	2300      	movs	r3, #0
 8004ff4:	9301      	str	r3, [sp, #4]
 8004ff6:	2300      	movs	r3, #0
 8004ff8:	9300      	str	r3, [sp, #0]
 8004ffa:	4603      	mov	r3, r0
 8004ffc:	68f8      	ldr	r0, [r7, #12]
 8004ffe:	f7ff ffa1 	bl	8004f44 <ucg_Draw90Line>
 8005002:	bf00      	nop
 8005004:	3710      	adds	r7, #16
 8005006:	46bd      	mov	sp, r7
 8005008:	bd80      	pop	{r7, pc}

0800500a <ucg_SetColor>:
 800500a:	b480      	push	{r7}
 800500c:	b083      	sub	sp, #12
 800500e:	af00      	add	r7, sp, #0
 8005010:	6078      	str	r0, [r7, #4]
 8005012:	4608      	mov	r0, r1
 8005014:	4611      	mov	r1, r2
 8005016:	461a      	mov	r2, r3
 8005018:	4603      	mov	r3, r0
 800501a:	70fb      	strb	r3, [r7, #3]
 800501c:	460b      	mov	r3, r1
 800501e:	70bb      	strb	r3, [r7, #2]
 8005020:	4613      	mov	r3, r2
 8005022:	707b      	strb	r3, [r7, #1]
 8005024:	78fa      	ldrb	r2, [r7, #3]
 8005026:	6879      	ldr	r1, [r7, #4]
 8005028:	4613      	mov	r3, r2
 800502a:	005b      	lsls	r3, r3, #1
 800502c:	4413      	add	r3, r2
 800502e:	440b      	add	r3, r1
 8005030:	333a      	adds	r3, #58	@ 0x3a
 8005032:	78ba      	ldrb	r2, [r7, #2]
 8005034:	701a      	strb	r2, [r3, #0]
 8005036:	78fa      	ldrb	r2, [r7, #3]
 8005038:	6879      	ldr	r1, [r7, #4]
 800503a:	4613      	mov	r3, r2
 800503c:	005b      	lsls	r3, r3, #1
 800503e:	4413      	add	r3, r2
 8005040:	440b      	add	r3, r1
 8005042:	333b      	adds	r3, #59	@ 0x3b
 8005044:	787a      	ldrb	r2, [r7, #1]
 8005046:	701a      	strb	r2, [r3, #0]
 8005048:	78fa      	ldrb	r2, [r7, #3]
 800504a:	6879      	ldr	r1, [r7, #4]
 800504c:	4613      	mov	r3, r2
 800504e:	005b      	lsls	r3, r3, #1
 8005050:	4413      	add	r3, r2
 8005052:	440b      	add	r3, r1
 8005054:	333c      	adds	r3, #60	@ 0x3c
 8005056:	7c3a      	ldrb	r2, [r7, #16]
 8005058:	701a      	strb	r2, [r3, #0]
 800505a:	bf00      	nop
 800505c:	370c      	adds	r7, #12
 800505e:	46bd      	mov	sp, r7
 8005060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005064:	4770      	bx	lr

08005066 <ucg_UndoRotate>:
 8005066:	b580      	push	{r7, lr}
 8005068:	b082      	sub	sp, #8
 800506a:	af00      	add	r7, sp, #0
 800506c:	6078      	str	r0, [r7, #4]
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	691b      	ldr	r3, [r3, #16]
 8005072:	2b00      	cmp	r3, #0
 8005074:	d006      	beq.n	8005084 <ucg_UndoRotate+0x1e>
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	691a      	ldr	r2, [r3, #16]
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	609a      	str	r2, [r3, #8]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	2200      	movs	r2, #0
 8005082:	611a      	str	r2, [r3, #16]
 8005084:	6878      	ldr	r0, [r7, #4]
 8005086:	f7ff f92a 	bl	80042de <ucg_GetDimension>
 800508a:	6878      	ldr	r0, [r7, #4]
 800508c:	f7ff f90f 	bl	80042ae <ucg_SetMaxClipRange>
 8005090:	bf00      	nop
 8005092:	3708      	adds	r7, #8
 8005094:	46bd      	mov	sp, r7
 8005096:	bd80      	pop	{r7, pc}

08005098 <ucg_rotate_180_xy>:
 8005098:	b480      	push	{r7}
 800509a:	b085      	sub	sp, #20
 800509c:	af00      	add	r7, sp, #0
 800509e:	6078      	str	r0, [r7, #4]
 80050a0:	6039      	str	r1, [r7, #0]
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	8adb      	ldrh	r3, [r3, #22]
 80050a6:	81fb      	strh	r3, [r7, #14]
 80050a8:	89fa      	ldrh	r2, [r7, #14]
 80050aa:	683b      	ldr	r3, [r7, #0]
 80050ac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80050b0:	b29b      	uxth	r3, r3
 80050b2:	1ad3      	subs	r3, r2, r3
 80050b4:	b29b      	uxth	r3, r3
 80050b6:	81fb      	strh	r3, [r7, #14]
 80050b8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80050bc:	b29b      	uxth	r3, r3
 80050be:	3b01      	subs	r3, #1
 80050c0:	b29b      	uxth	r3, r3
 80050c2:	81fb      	strh	r3, [r7, #14]
 80050c4:	683b      	ldr	r3, [r7, #0]
 80050c6:	89fa      	ldrh	r2, [r7, #14]
 80050c8:	805a      	strh	r2, [r3, #2]
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	8a9b      	ldrh	r3, [r3, #20]
 80050ce:	81bb      	strh	r3, [r7, #12]
 80050d0:	89ba      	ldrh	r2, [r7, #12]
 80050d2:	683b      	ldr	r3, [r7, #0]
 80050d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80050d8:	b29b      	uxth	r3, r3
 80050da:	1ad3      	subs	r3, r2, r3
 80050dc:	b29b      	uxth	r3, r3
 80050de:	81bb      	strh	r3, [r7, #12]
 80050e0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80050e4:	b29b      	uxth	r3, r3
 80050e6:	3b01      	subs	r3, #1
 80050e8:	b29b      	uxth	r3, r3
 80050ea:	81bb      	strh	r3, [r7, #12]
 80050ec:	683b      	ldr	r3, [r7, #0]
 80050ee:	89ba      	ldrh	r2, [r7, #12]
 80050f0:	801a      	strh	r2, [r3, #0]
 80050f2:	bf00      	nop
 80050f4:	3714      	adds	r7, #20
 80050f6:	46bd      	mov	sp, r7
 80050f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050fc:	4770      	bx	lr
	...

08005100 <ucg_dev_rotate180>:
 8005100:	b580      	push	{r7, lr}
 8005102:	b084      	sub	sp, #16
 8005104:	af00      	add	r7, sp, #0
 8005106:	60f8      	str	r0, [r7, #12]
 8005108:	460b      	mov	r3, r1
 800510a:	607a      	str	r2, [r7, #4]
 800510c:	817b      	strh	r3, [r7, #10]
 800510e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8005112:	3b0c      	subs	r3, #12
 8005114:	2b0b      	cmp	r3, #11
 8005116:	d866      	bhi.n	80051e6 <ucg_dev_rotate180+0xe6>
 8005118:	a201      	add	r2, pc, #4	@ (adr r2, 8005120 <ucg_dev_rotate180+0x20>)
 800511a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800511e:	bf00      	nop
 8005120:	0800516f 	.word	0x0800516f
 8005124:	080051e7 	.word	0x080051e7
 8005128:	080051e7 	.word	0x080051e7
 800512c:	08005151 	.word	0x08005151
 8005130:	080051e7 	.word	0x080051e7
 8005134:	080051e7 	.word	0x080051e7
 8005138:	080051e7 	.word	0x080051e7
 800513c:	080051e7 	.word	0x080051e7
 8005140:	080051b7 	.word	0x080051b7
 8005144:	080051b7 	.word	0x080051b7
 8005148:	080051e7 	.word	0x080051e7
 800514c:	080051b7 	.word	0x080051b7
 8005150:	68fb      	ldr	r3, [r7, #12]
 8005152:	691b      	ldr	r3, [r3, #16]
 8005154:	68fa      	ldr	r2, [r7, #12]
 8005156:	3214      	adds	r2, #20
 8005158:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800515c:	68f8      	ldr	r0, [r7, #12]
 800515e:	4798      	blx	r3
 8005160:	687a      	ldr	r2, [r7, #4]
 8005162:	68fb      	ldr	r3, [r7, #12]
 8005164:	3314      	adds	r3, #20
 8005166:	6818      	ldr	r0, [r3, #0]
 8005168:	6010      	str	r0, [r2, #0]
 800516a:	2301      	movs	r3, #1
 800516c:	e043      	b.n	80051f6 <ucg_dev_rotate180+0xf6>
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005174:	b29a      	uxth	r2, r3
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800517c:	b29b      	uxth	r3, r3
 800517e:	4413      	add	r3, r2
 8005180:	b29b      	uxth	r3, r3
 8005182:	3b01      	subs	r3, #1
 8005184:	b29b      	uxth	r3, r3
 8005186:	b21a      	sxth	r2, r3
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	805a      	strh	r2, [r3, #2]
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005192:	b29a      	uxth	r2, r3
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800519a:	b29b      	uxth	r3, r3
 800519c:	4413      	add	r3, r2
 800519e:	b29b      	uxth	r3, r3
 80051a0:	3b01      	subs	r3, #1
 80051a2:	b29b      	uxth	r3, r3
 80051a4:	b21a      	sxth	r2, r3
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	801a      	strh	r2, [r3, #0]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	4619      	mov	r1, r3
 80051ae:	68f8      	ldr	r0, [r7, #12]
 80051b0:	f7ff ff72 	bl	8005098 <ucg_rotate_180_xy>
 80051b4:	e017      	b.n	80051e6 <ucg_dev_rotate180+0xe6>
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80051bc:	b29b      	uxth	r3, r3
 80051be:	3302      	adds	r3, #2
 80051c0:	b29b      	uxth	r3, r3
 80051c2:	b21a      	sxth	r2, r3
 80051c4:	68fb      	ldr	r3, [r7, #12]
 80051c6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80051ce:	f003 0303 	and.w	r3, r3, #3
 80051d2:	b21a      	sxth	r2, r3
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	3324      	adds	r3, #36	@ 0x24
 80051dc:	4619      	mov	r1, r3
 80051de:	68f8      	ldr	r0, [r7, #12]
 80051e0:	f7ff ff5a 	bl	8005098 <ucg_rotate_180_xy>
 80051e4:	bf00      	nop
 80051e6:	68fb      	ldr	r3, [r7, #12]
 80051e8:	691b      	ldr	r3, [r3, #16]
 80051ea:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80051ee:	687a      	ldr	r2, [r7, #4]
 80051f0:	68f8      	ldr	r0, [r7, #12]
 80051f2:	4798      	blx	r3
 80051f4:	4603      	mov	r3, r0
 80051f6:	4618      	mov	r0, r3
 80051f8:	3710      	adds	r7, #16
 80051fa:	46bd      	mov	sp, r7
 80051fc:	bd80      	pop	{r7, pc}
 80051fe:	bf00      	nop

08005200 <ucg_SetRotate180>:
 8005200:	b580      	push	{r7, lr}
 8005202:	b082      	sub	sp, #8
 8005204:	af00      	add	r7, sp, #0
 8005206:	6078      	str	r0, [r7, #4]
 8005208:	6878      	ldr	r0, [r7, #4]
 800520a:	f7ff ff2c 	bl	8005066 <ucg_UndoRotate>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	689a      	ldr	r2, [r3, #8]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	611a      	str	r2, [r3, #16]
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	4a05      	ldr	r2, [pc, #20]	@ (8005230 <ucg_SetRotate180+0x30>)
 800521a:	609a      	str	r2, [r3, #8]
 800521c:	6878      	ldr	r0, [r7, #4]
 800521e:	f7ff f85e 	bl	80042de <ucg_GetDimension>
 8005222:	6878      	ldr	r0, [r7, #4]
 8005224:	f7ff f843 	bl	80042ae <ucg_SetMaxClipRange>
 8005228:	bf00      	nop
 800522a:	3708      	adds	r7, #8
 800522c:	46bd      	mov	sp, r7
 800522e:	bd80      	pop	{r7, pc}
 8005230:	08005101 	.word	0x08005101

08005234 <bufInit>:
 8005234:	b580      	push	{r7, lr}
 8005236:	b084      	sub	sp, #16
 8005238:	af00      	add	r7, sp, #0
 800523a:	60f8      	str	r0, [r7, #12]
 800523c:	60b9      	str	r1, [r7, #8]
 800523e:	4611      	mov	r1, r2
 8005240:	461a      	mov	r2, r3
 8005242:	460b      	mov	r3, r1
 8005244:	71fb      	strb	r3, [r7, #7]
 8005246:	4613      	mov	r3, r2
 8005248:	80bb      	strh	r3, [r7, #4]
 800524a:	68bb      	ldr	r3, [r7, #8]
 800524c:	88ba      	ldrh	r2, [r7, #4]
 800524e:	801a      	strh	r2, [r3, #0]
 8005250:	68bb      	ldr	r3, [r7, #8]
 8005252:	79fa      	ldrb	r2, [r7, #7]
 8005254:	711a      	strb	r2, [r3, #4]
 8005256:	68bb      	ldr	r3, [r7, #8]
 8005258:	68fa      	ldr	r2, [r7, #12]
 800525a:	60da      	str	r2, [r3, #12]
 800525c:	68b8      	ldr	r0, [r7, #8]
 800525e:	f000 f836 	bl	80052ce <bufFlush>
 8005262:	bf00      	nop
 8005264:	3710      	adds	r7, #16
 8005266:	46bd      	mov	sp, r7
 8005268:	bd80      	pop	{r7, pc}

0800526a <bufNumItems>:
 800526a:	b480      	push	{r7}
 800526c:	b083      	sub	sp, #12
 800526e:	af00      	add	r7, sp, #0
 8005270:	6078      	str	r0, [r7, #4]
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	885b      	ldrh	r3, [r3, #2]
 8005276:	4618      	mov	r0, r3
 8005278:	370c      	adds	r7, #12
 800527a:	46bd      	mov	sp, r7
 800527c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005280:	4770      	bx	lr

08005282 <bufIsFull>:
 8005282:	b480      	push	{r7}
 8005284:	b083      	sub	sp, #12
 8005286:	af00      	add	r7, sp, #0
 8005288:	6078      	str	r0, [r7, #4]
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	885a      	ldrh	r2, [r3, #2]
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	881b      	ldrh	r3, [r3, #0]
 8005292:	429a      	cmp	r2, r3
 8005294:	bf2c      	ite	cs
 8005296:	2301      	movcs	r3, #1
 8005298:	2300      	movcc	r3, #0
 800529a:	b2db      	uxtb	r3, r3
 800529c:	4618      	mov	r0, r3
 800529e:	370c      	adds	r7, #12
 80052a0:	46bd      	mov	sp, r7
 80052a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052a6:	4770      	bx	lr

080052a8 <bufIsEmpty>:
 80052a8:	b480      	push	{r7}
 80052aa:	b083      	sub	sp, #12
 80052ac:	af00      	add	r7, sp, #0
 80052ae:	6078      	str	r0, [r7, #4]
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	88da      	ldrh	r2, [r3, #6]
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	891b      	ldrh	r3, [r3, #8]
 80052b8:	429a      	cmp	r2, r3
 80052ba:	bf0c      	ite	eq
 80052bc:	2301      	moveq	r3, #1
 80052be:	2300      	movne	r3, #0
 80052c0:	b2db      	uxtb	r3, r3
 80052c2:	4618      	mov	r0, r3
 80052c4:	370c      	adds	r7, #12
 80052c6:	46bd      	mov	sp, r7
 80052c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052cc:	4770      	bx	lr

080052ce <bufFlush>:
 80052ce:	b580      	push	{r7, lr}
 80052d0:	b082      	sub	sp, #8
 80052d2:	af00      	add	r7, sp, #0
 80052d4:	6078      	str	r0, [r7, #4]
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	2200      	movs	r2, #0
 80052da:	80da      	strh	r2, [r3, #6]
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	2200      	movs	r2, #0
 80052e0:	811a      	strh	r2, [r3, #8]
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	2200      	movs	r2, #0
 80052e6:	805a      	strh	r2, [r3, #2]
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	68d8      	ldr	r0, [r3, #12]
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	881b      	ldrh	r3, [r3, #0]
 80052f0:	461a      	mov	r2, r3
 80052f2:	2100      	movs	r1, #0
 80052f4:	f000 f894 	bl	8005420 <memsetl>
 80052f8:	bf00      	nop
 80052fa:	3708      	adds	r7, #8
 80052fc:	46bd      	mov	sp, r7
 80052fe:	bd80      	pop	{r7, pc}

08005300 <bufEnDat>:
 8005300:	b580      	push	{r7, lr}
 8005302:	b084      	sub	sp, #16
 8005304:	af00      	add	r7, sp, #0
 8005306:	6078      	str	r0, [r7, #4]
 8005308:	6039      	str	r1, [r7, #0]
 800530a:	b672      	cpsid	i
 800530c:	2300      	movs	r3, #0
 800530e:	73fb      	strb	r3, [r7, #15]
 8005310:	e021      	b.n	8005356 <bufEnDat+0x56>
 8005312:	7bfb      	ldrb	r3, [r7, #15]
 8005314:	683a      	ldr	r2, [r7, #0]
 8005316:	441a      	add	r2, r3
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	68db      	ldr	r3, [r3, #12]
 800531c:	6879      	ldr	r1, [r7, #4]
 800531e:	88c9      	ldrh	r1, [r1, #6]
 8005320:	440b      	add	r3, r1
 8005322:	7812      	ldrb	r2, [r2, #0]
 8005324:	701a      	strb	r2, [r3, #0]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	88db      	ldrh	r3, [r3, #6]
 800532a:	3301      	adds	r3, #1
 800532c:	b29b      	uxth	r3, r3
 800532e:	b21a      	sxth	r2, r3
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	881b      	ldrh	r3, [r3, #0]
 8005334:	3b01      	subs	r3, #1
 8005336:	b29b      	uxth	r3, r3
 8005338:	b21b      	sxth	r3, r3
 800533a:	4013      	ands	r3, r2
 800533c:	b21b      	sxth	r3, r3
 800533e:	b29a      	uxth	r2, r3
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	80da      	strh	r2, [r3, #6]
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	885b      	ldrh	r3, [r3, #2]
 8005348:	3301      	adds	r3, #1
 800534a:	b29a      	uxth	r2, r3
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	805a      	strh	r2, [r3, #2]
 8005350:	7bfb      	ldrb	r3, [r7, #15]
 8005352:	3301      	adds	r3, #1
 8005354:	73fb      	strb	r3, [r7, #15]
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	791b      	ldrb	r3, [r3, #4]
 800535a:	7bfa      	ldrb	r2, [r7, #15]
 800535c:	429a      	cmp	r2, r3
 800535e:	d3d8      	bcc.n	8005312 <bufEnDat+0x12>
 8005360:	6878      	ldr	r0, [r7, #4]
 8005362:	f7ff ff8e 	bl	8005282 <bufIsFull>
 8005366:	4603      	mov	r3, r0
 8005368:	2b00      	cmp	r3, #0
 800536a:	d011      	beq.n	8005390 <bufEnDat+0x90>
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	891a      	ldrh	r2, [r3, #8]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	791b      	ldrb	r3, [r3, #4]
 8005374:	b29b      	uxth	r3, r3
 8005376:	4413      	add	r3, r2
 8005378:	b29b      	uxth	r3, r3
 800537a:	b21a      	sxth	r2, r3
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	881b      	ldrh	r3, [r3, #0]
 8005380:	3b01      	subs	r3, #1
 8005382:	b29b      	uxth	r3, r3
 8005384:	b21b      	sxth	r3, r3
 8005386:	4013      	ands	r3, r2
 8005388:	b21b      	sxth	r3, r3
 800538a:	b29a      	uxth	r2, r3
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	811a      	strh	r2, [r3, #8]
 8005390:	b662      	cpsie	i
 8005392:	2300      	movs	r3, #0
 8005394:	4618      	mov	r0, r3
 8005396:	3710      	adds	r7, #16
 8005398:	46bd      	mov	sp, r7
 800539a:	bd80      	pop	{r7, pc}

0800539c <bufDeDat>:
 800539c:	b580      	push	{r7, lr}
 800539e:	b084      	sub	sp, #16
 80053a0:	af00      	add	r7, sp, #0
 80053a2:	6078      	str	r0, [r7, #4]
 80053a4:	6039      	str	r1, [r7, #0]
 80053a6:	b672      	cpsid	i
 80053a8:	6878      	ldr	r0, [r7, #4]
 80053aa:	f7ff ff7d 	bl	80052a8 <bufIsEmpty>
 80053ae:	4603      	mov	r3, r0
 80053b0:	2b00      	cmp	r3, #0
 80053b2:	d005      	beq.n	80053c0 <bufDeDat+0x24>
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	2200      	movs	r2, #0
 80053b8:	805a      	strh	r2, [r3, #2]
 80053ba:	b662      	cpsie	i
 80053bc:	2302      	movs	r3, #2
 80053be:	e02b      	b.n	8005418 <bufDeDat+0x7c>
 80053c0:	2300      	movs	r3, #0
 80053c2:	73fb      	strb	r3, [r7, #15]
 80053c4:	e021      	b.n	800540a <bufDeDat+0x6e>
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	68db      	ldr	r3, [r3, #12]
 80053ca:	687a      	ldr	r2, [r7, #4]
 80053cc:	8912      	ldrh	r2, [r2, #8]
 80053ce:	441a      	add	r2, r3
 80053d0:	7bfb      	ldrb	r3, [r7, #15]
 80053d2:	6839      	ldr	r1, [r7, #0]
 80053d4:	440b      	add	r3, r1
 80053d6:	7812      	ldrb	r2, [r2, #0]
 80053d8:	701a      	strb	r2, [r3, #0]
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	891b      	ldrh	r3, [r3, #8]
 80053de:	3301      	adds	r3, #1
 80053e0:	b29b      	uxth	r3, r3
 80053e2:	b21a      	sxth	r2, r3
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	881b      	ldrh	r3, [r3, #0]
 80053e8:	3b01      	subs	r3, #1
 80053ea:	b29b      	uxth	r3, r3
 80053ec:	b21b      	sxth	r3, r3
 80053ee:	4013      	ands	r3, r2
 80053f0:	b21b      	sxth	r3, r3
 80053f2:	b29a      	uxth	r2, r3
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	811a      	strh	r2, [r3, #8]
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	885b      	ldrh	r3, [r3, #2]
 80053fc:	3b01      	subs	r3, #1
 80053fe:	b29a      	uxth	r2, r3
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	805a      	strh	r2, [r3, #2]
 8005404:	7bfb      	ldrb	r3, [r7, #15]
 8005406:	3301      	adds	r3, #1
 8005408:	73fb      	strb	r3, [r7, #15]
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	791b      	ldrb	r3, [r3, #4]
 800540e:	7bfa      	ldrb	r2, [r7, #15]
 8005410:	429a      	cmp	r2, r3
 8005412:	d3d8      	bcc.n	80053c6 <bufDeDat+0x2a>
 8005414:	b662      	cpsie	i
 8005416:	2300      	movs	r3, #0
 8005418:	4618      	mov	r0, r3
 800541a:	3710      	adds	r7, #16
 800541c:	46bd      	mov	sp, r7
 800541e:	bd80      	pop	{r7, pc}

08005420 <memsetl>:
 8005420:	b480      	push	{r7}
 8005422:	b083      	sub	sp, #12
 8005424:	af00      	add	r7, sp, #0
 8005426:	6078      	str	r0, [r7, #4]
 8005428:	460b      	mov	r3, r1
 800542a:	70fb      	strb	r3, [r7, #3]
 800542c:	4613      	mov	r3, r2
 800542e:	803b      	strh	r3, [r7, #0]
 8005430:	e004      	b.n	800543c <memsetl+0x1c>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	1c5a      	adds	r2, r3, #1
 8005436:	607a      	str	r2, [r7, #4]
 8005438:	78fa      	ldrb	r2, [r7, #3]
 800543a:	701a      	strb	r2, [r3, #0]
 800543c:	883b      	ldrh	r3, [r7, #0]
 800543e:	1e5a      	subs	r2, r3, #1
 8005440:	803a      	strh	r2, [r7, #0]
 8005442:	2b00      	cmp	r3, #0
 8005444:	d1f5      	bne.n	8005432 <memsetl+0x12>
 8005446:	bf00      	nop
 8005448:	370c      	adds	r7, #12
 800544a:	46bd      	mov	sp, r7
 800544c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005450:	4770      	bx	lr

08005452 <ADC_DeInit>:
 8005452:	b580      	push	{r7, lr}
 8005454:	af00      	add	r7, sp, #0
 8005456:	2101      	movs	r1, #1
 8005458:	f44f 7080 	mov.w	r0, #256	@ 0x100
 800545c:	f7fc fc4e 	bl	8001cfc <RCC_APB2PeriphResetCmd>
 8005460:	2100      	movs	r1, #0
 8005462:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8005466:	f7fc fc49 	bl	8001cfc <RCC_APB2PeriphResetCmd>
 800546a:	bf00      	nop
 800546c:	bd80      	pop	{r7, pc}
	...

08005470 <ADC_Init>:
 8005470:	b480      	push	{r7}
 8005472:	b085      	sub	sp, #20
 8005474:	af00      	add	r7, sp, #0
 8005476:	6078      	str	r0, [r7, #4]
 8005478:	6039      	str	r1, [r7, #0]
 800547a:	2300      	movs	r3, #0
 800547c:	60fb      	str	r3, [r7, #12]
 800547e:	2300      	movs	r3, #0
 8005480:	72fb      	strb	r3, [r7, #11]
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	685b      	ldr	r3, [r3, #4]
 8005486:	60fb      	str	r3, [r7, #12]
 8005488:	68fb      	ldr	r3, [r7, #12]
 800548a:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 800548e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005492:	60fb      	str	r3, [r7, #12]
 8005494:	683b      	ldr	r3, [r7, #0]
 8005496:	791b      	ldrb	r3, [r3, #4]
 8005498:	021a      	lsls	r2, r3, #8
 800549a:	683b      	ldr	r3, [r7, #0]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	4313      	orrs	r3, r2
 80054a0:	68fa      	ldr	r2, [r7, #12]
 80054a2:	4313      	orrs	r3, r2
 80054a4:	60fb      	str	r3, [r7, #12]
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	68fa      	ldr	r2, [r7, #12]
 80054aa:	605a      	str	r2, [r3, #4]
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	689b      	ldr	r3, [r3, #8]
 80054b0:	60fb      	str	r3, [r7, #12]
 80054b2:	68fa      	ldr	r2, [r7, #12]
 80054b4:	4b18      	ldr	r3, [pc, #96]	@ (8005518 <ADC_Init+0xa8>)
 80054b6:	4013      	ands	r3, r2
 80054b8:	60fb      	str	r3, [r7, #12]
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	691a      	ldr	r2, [r3, #16]
 80054be:	683b      	ldr	r3, [r7, #0]
 80054c0:	68db      	ldr	r3, [r3, #12]
 80054c2:	431a      	orrs	r2, r3
 80054c4:	683b      	ldr	r3, [r7, #0]
 80054c6:	689b      	ldr	r3, [r3, #8]
 80054c8:	431a      	orrs	r2, r3
 80054ca:	683b      	ldr	r3, [r7, #0]
 80054cc:	795b      	ldrb	r3, [r3, #5]
 80054ce:	005b      	lsls	r3, r3, #1
 80054d0:	4313      	orrs	r3, r2
 80054d2:	68fa      	ldr	r2, [r7, #12]
 80054d4:	4313      	orrs	r3, r2
 80054d6:	60fb      	str	r3, [r7, #12]
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	68fa      	ldr	r2, [r7, #12]
 80054dc:	609a      	str	r2, [r3, #8]
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80054e2:	60fb      	str	r3, [r7, #12]
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80054ea:	60fb      	str	r3, [r7, #12]
 80054ec:	683b      	ldr	r3, [r7, #0]
 80054ee:	7d1b      	ldrb	r3, [r3, #20]
 80054f0:	3b01      	subs	r3, #1
 80054f2:	b2da      	uxtb	r2, r3
 80054f4:	7afb      	ldrb	r3, [r7, #11]
 80054f6:	4313      	orrs	r3, r2
 80054f8:	72fb      	strb	r3, [r7, #11]
 80054fa:	7afb      	ldrb	r3, [r7, #11]
 80054fc:	051b      	lsls	r3, r3, #20
 80054fe:	68fa      	ldr	r2, [r7, #12]
 8005500:	4313      	orrs	r3, r2
 8005502:	60fb      	str	r3, [r7, #12]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	68fa      	ldr	r2, [r7, #12]
 8005508:	62da      	str	r2, [r3, #44]	@ 0x2c
 800550a:	bf00      	nop
 800550c:	3714      	adds	r7, #20
 800550e:	46bd      	mov	sp, r7
 8005510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005514:	4770      	bx	lr
 8005516:	bf00      	nop
 8005518:	c0fff7fd 	.word	0xc0fff7fd

0800551c <ADC_CommonInit>:
 800551c:	b480      	push	{r7}
 800551e:	b085      	sub	sp, #20
 8005520:	af00      	add	r7, sp, #0
 8005522:	6078      	str	r0, [r7, #4]
 8005524:	2300      	movs	r3, #0
 8005526:	60fb      	str	r3, [r7, #12]
 8005528:	4b0e      	ldr	r3, [pc, #56]	@ (8005564 <ADC_CommonInit+0x48>)
 800552a:	685b      	ldr	r3, [r3, #4]
 800552c:	60fb      	str	r3, [r7, #12]
 800552e:	68fa      	ldr	r2, [r7, #12]
 8005530:	4b0d      	ldr	r3, [pc, #52]	@ (8005568 <ADC_CommonInit+0x4c>)
 8005532:	4013      	ands	r3, r2
 8005534:	60fb      	str	r3, [r7, #12]
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	681a      	ldr	r2, [r3, #0]
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	685b      	ldr	r3, [r3, #4]
 800553e:	431a      	orrs	r2, r3
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	689b      	ldr	r3, [r3, #8]
 8005544:	431a      	orrs	r2, r3
 8005546:	687b      	ldr	r3, [r7, #4]
 8005548:	68db      	ldr	r3, [r3, #12]
 800554a:	4313      	orrs	r3, r2
 800554c:	68fa      	ldr	r2, [r7, #12]
 800554e:	4313      	orrs	r3, r2
 8005550:	60fb      	str	r3, [r7, #12]
 8005552:	4a04      	ldr	r2, [pc, #16]	@ (8005564 <ADC_CommonInit+0x48>)
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	6053      	str	r3, [r2, #4]
 8005558:	bf00      	nop
 800555a:	3714      	adds	r7, #20
 800555c:	46bd      	mov	sp, r7
 800555e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005562:	4770      	bx	lr
 8005564:	40012300 	.word	0x40012300
 8005568:	fffc30e0 	.word	0xfffc30e0

0800556c <ADC_Cmd>:
 800556c:	b480      	push	{r7}
 800556e:	b083      	sub	sp, #12
 8005570:	af00      	add	r7, sp, #0
 8005572:	6078      	str	r0, [r7, #4]
 8005574:	460b      	mov	r3, r1
 8005576:	70fb      	strb	r3, [r7, #3]
 8005578:	78fb      	ldrb	r3, [r7, #3]
 800557a:	2b00      	cmp	r3, #0
 800557c:	d006      	beq.n	800558c <ADC_Cmd+0x20>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	689b      	ldr	r3, [r3, #8]
 8005582:	f043 0201 	orr.w	r2, r3, #1
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	609a      	str	r2, [r3, #8]
 800558a:	e005      	b.n	8005598 <ADC_Cmd+0x2c>
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	689b      	ldr	r3, [r3, #8]
 8005590:	f023 0201 	bic.w	r2, r3, #1
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	609a      	str	r2, [r3, #8]
 8005598:	bf00      	nop
 800559a:	370c      	adds	r7, #12
 800559c:	46bd      	mov	sp, r7
 800559e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055a2:	4770      	bx	lr

080055a4 <ADC_RegularChannelConfig>:
 80055a4:	b480      	push	{r7}
 80055a6:	b085      	sub	sp, #20
 80055a8:	af00      	add	r7, sp, #0
 80055aa:	6078      	str	r0, [r7, #4]
 80055ac:	4608      	mov	r0, r1
 80055ae:	4611      	mov	r1, r2
 80055b0:	461a      	mov	r2, r3
 80055b2:	4603      	mov	r3, r0
 80055b4:	70fb      	strb	r3, [r7, #3]
 80055b6:	460b      	mov	r3, r1
 80055b8:	70bb      	strb	r3, [r7, #2]
 80055ba:	4613      	mov	r3, r2
 80055bc:	707b      	strb	r3, [r7, #1]
 80055be:	2300      	movs	r3, #0
 80055c0:	60fb      	str	r3, [r7, #12]
 80055c2:	2300      	movs	r3, #0
 80055c4:	60bb      	str	r3, [r7, #8]
 80055c6:	78fb      	ldrb	r3, [r7, #3]
 80055c8:	2b09      	cmp	r3, #9
 80055ca:	d923      	bls.n	8005614 <ADC_RegularChannelConfig+0x70>
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	68db      	ldr	r3, [r3, #12]
 80055d0:	60fb      	str	r3, [r7, #12]
 80055d2:	78fb      	ldrb	r3, [r7, #3]
 80055d4:	f1a3 020a 	sub.w	r2, r3, #10
 80055d8:	4613      	mov	r3, r2
 80055da:	005b      	lsls	r3, r3, #1
 80055dc:	4413      	add	r3, r2
 80055de:	2207      	movs	r2, #7
 80055e0:	fa02 f303 	lsl.w	r3, r2, r3
 80055e4:	60bb      	str	r3, [r7, #8]
 80055e6:	68bb      	ldr	r3, [r7, #8]
 80055e8:	43db      	mvns	r3, r3
 80055ea:	68fa      	ldr	r2, [r7, #12]
 80055ec:	4013      	ands	r3, r2
 80055ee:	60fb      	str	r3, [r7, #12]
 80055f0:	7879      	ldrb	r1, [r7, #1]
 80055f2:	78fb      	ldrb	r3, [r7, #3]
 80055f4:	f1a3 020a 	sub.w	r2, r3, #10
 80055f8:	4613      	mov	r3, r2
 80055fa:	005b      	lsls	r3, r3, #1
 80055fc:	4413      	add	r3, r2
 80055fe:	fa01 f303 	lsl.w	r3, r1, r3
 8005602:	60bb      	str	r3, [r7, #8]
 8005604:	68fa      	ldr	r2, [r7, #12]
 8005606:	68bb      	ldr	r3, [r7, #8]
 8005608:	4313      	orrs	r3, r2
 800560a:	60fb      	str	r3, [r7, #12]
 800560c:	687b      	ldr	r3, [r7, #4]
 800560e:	68fa      	ldr	r2, [r7, #12]
 8005610:	60da      	str	r2, [r3, #12]
 8005612:	e01e      	b.n	8005652 <ADC_RegularChannelConfig+0xae>
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	691b      	ldr	r3, [r3, #16]
 8005618:	60fb      	str	r3, [r7, #12]
 800561a:	78fa      	ldrb	r2, [r7, #3]
 800561c:	4613      	mov	r3, r2
 800561e:	005b      	lsls	r3, r3, #1
 8005620:	4413      	add	r3, r2
 8005622:	2207      	movs	r2, #7
 8005624:	fa02 f303 	lsl.w	r3, r2, r3
 8005628:	60bb      	str	r3, [r7, #8]
 800562a:	68bb      	ldr	r3, [r7, #8]
 800562c:	43db      	mvns	r3, r3
 800562e:	68fa      	ldr	r2, [r7, #12]
 8005630:	4013      	ands	r3, r2
 8005632:	60fb      	str	r3, [r7, #12]
 8005634:	7879      	ldrb	r1, [r7, #1]
 8005636:	78fa      	ldrb	r2, [r7, #3]
 8005638:	4613      	mov	r3, r2
 800563a:	005b      	lsls	r3, r3, #1
 800563c:	4413      	add	r3, r2
 800563e:	fa01 f303 	lsl.w	r3, r1, r3
 8005642:	60bb      	str	r3, [r7, #8]
 8005644:	68fa      	ldr	r2, [r7, #12]
 8005646:	68bb      	ldr	r3, [r7, #8]
 8005648:	4313      	orrs	r3, r2
 800564a:	60fb      	str	r3, [r7, #12]
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	68fa      	ldr	r2, [r7, #12]
 8005650:	611a      	str	r2, [r3, #16]
 8005652:	78bb      	ldrb	r3, [r7, #2]
 8005654:	2b06      	cmp	r3, #6
 8005656:	d821      	bhi.n	800569c <ADC_RegularChannelConfig+0xf8>
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800565c:	60fb      	str	r3, [r7, #12]
 800565e:	78bb      	ldrb	r3, [r7, #2]
 8005660:	1e5a      	subs	r2, r3, #1
 8005662:	4613      	mov	r3, r2
 8005664:	009b      	lsls	r3, r3, #2
 8005666:	4413      	add	r3, r2
 8005668:	221f      	movs	r2, #31
 800566a:	fa02 f303 	lsl.w	r3, r2, r3
 800566e:	60bb      	str	r3, [r7, #8]
 8005670:	68bb      	ldr	r3, [r7, #8]
 8005672:	43db      	mvns	r3, r3
 8005674:	68fa      	ldr	r2, [r7, #12]
 8005676:	4013      	ands	r3, r2
 8005678:	60fb      	str	r3, [r7, #12]
 800567a:	78f9      	ldrb	r1, [r7, #3]
 800567c:	78bb      	ldrb	r3, [r7, #2]
 800567e:	1e5a      	subs	r2, r3, #1
 8005680:	4613      	mov	r3, r2
 8005682:	009b      	lsls	r3, r3, #2
 8005684:	4413      	add	r3, r2
 8005686:	fa01 f303 	lsl.w	r3, r1, r3
 800568a:	60bb      	str	r3, [r7, #8]
 800568c:	68fa      	ldr	r2, [r7, #12]
 800568e:	68bb      	ldr	r3, [r7, #8]
 8005690:	4313      	orrs	r3, r2
 8005692:	60fb      	str	r3, [r7, #12]
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	68fa      	ldr	r2, [r7, #12]
 8005698:	635a      	str	r2, [r3, #52]	@ 0x34
 800569a:	e047      	b.n	800572c <ADC_RegularChannelConfig+0x188>
 800569c:	78bb      	ldrb	r3, [r7, #2]
 800569e:	2b0c      	cmp	r3, #12
 80056a0:	d821      	bhi.n	80056e6 <ADC_RegularChannelConfig+0x142>
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80056a6:	60fb      	str	r3, [r7, #12]
 80056a8:	78bb      	ldrb	r3, [r7, #2]
 80056aa:	1fda      	subs	r2, r3, #7
 80056ac:	4613      	mov	r3, r2
 80056ae:	009b      	lsls	r3, r3, #2
 80056b0:	4413      	add	r3, r2
 80056b2:	221f      	movs	r2, #31
 80056b4:	fa02 f303 	lsl.w	r3, r2, r3
 80056b8:	60bb      	str	r3, [r7, #8]
 80056ba:	68bb      	ldr	r3, [r7, #8]
 80056bc:	43db      	mvns	r3, r3
 80056be:	68fa      	ldr	r2, [r7, #12]
 80056c0:	4013      	ands	r3, r2
 80056c2:	60fb      	str	r3, [r7, #12]
 80056c4:	78f9      	ldrb	r1, [r7, #3]
 80056c6:	78bb      	ldrb	r3, [r7, #2]
 80056c8:	1fda      	subs	r2, r3, #7
 80056ca:	4613      	mov	r3, r2
 80056cc:	009b      	lsls	r3, r3, #2
 80056ce:	4413      	add	r3, r2
 80056d0:	fa01 f303 	lsl.w	r3, r1, r3
 80056d4:	60bb      	str	r3, [r7, #8]
 80056d6:	68fa      	ldr	r2, [r7, #12]
 80056d8:	68bb      	ldr	r3, [r7, #8]
 80056da:	4313      	orrs	r3, r2
 80056dc:	60fb      	str	r3, [r7, #12]
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	68fa      	ldr	r2, [r7, #12]
 80056e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80056e4:	e022      	b.n	800572c <ADC_RegularChannelConfig+0x188>
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056ea:	60fb      	str	r3, [r7, #12]
 80056ec:	78bb      	ldrb	r3, [r7, #2]
 80056ee:	f1a3 020d 	sub.w	r2, r3, #13
 80056f2:	4613      	mov	r3, r2
 80056f4:	009b      	lsls	r3, r3, #2
 80056f6:	4413      	add	r3, r2
 80056f8:	221f      	movs	r2, #31
 80056fa:	fa02 f303 	lsl.w	r3, r2, r3
 80056fe:	60bb      	str	r3, [r7, #8]
 8005700:	68bb      	ldr	r3, [r7, #8]
 8005702:	43db      	mvns	r3, r3
 8005704:	68fa      	ldr	r2, [r7, #12]
 8005706:	4013      	ands	r3, r2
 8005708:	60fb      	str	r3, [r7, #12]
 800570a:	78f9      	ldrb	r1, [r7, #3]
 800570c:	78bb      	ldrb	r3, [r7, #2]
 800570e:	f1a3 020d 	sub.w	r2, r3, #13
 8005712:	4613      	mov	r3, r2
 8005714:	009b      	lsls	r3, r3, #2
 8005716:	4413      	add	r3, r2
 8005718:	fa01 f303 	lsl.w	r3, r1, r3
 800571c:	60bb      	str	r3, [r7, #8]
 800571e:	68fa      	ldr	r2, [r7, #12]
 8005720:	68bb      	ldr	r3, [r7, #8]
 8005722:	4313      	orrs	r3, r2
 8005724:	60fb      	str	r3, [r7, #12]
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	68fa      	ldr	r2, [r7, #12]
 800572a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800572c:	bf00      	nop
 800572e:	3714      	adds	r7, #20
 8005730:	46bd      	mov	sp, r7
 8005732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005736:	4770      	bx	lr

08005738 <ADC_SoftwareStartConv>:
 8005738:	b480      	push	{r7}
 800573a:	b083      	sub	sp, #12
 800573c:	af00      	add	r7, sp, #0
 800573e:	6078      	str	r0, [r7, #4]
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	689b      	ldr	r3, [r3, #8]
 8005744:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	609a      	str	r2, [r3, #8]
 800574c:	bf00      	nop
 800574e:	370c      	adds	r7, #12
 8005750:	46bd      	mov	sp, r7
 8005752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005756:	4770      	bx	lr

08005758 <ADC_EOCOnEachRegularChannelCmd>:
 8005758:	b480      	push	{r7}
 800575a:	b083      	sub	sp, #12
 800575c:	af00      	add	r7, sp, #0
 800575e:	6078      	str	r0, [r7, #4]
 8005760:	460b      	mov	r3, r1
 8005762:	70fb      	strb	r3, [r7, #3]
 8005764:	78fb      	ldrb	r3, [r7, #3]
 8005766:	2b00      	cmp	r3, #0
 8005768:	d006      	beq.n	8005778 <ADC_EOCOnEachRegularChannelCmd+0x20>
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	689b      	ldr	r3, [r3, #8]
 800576e:	f443 6280 	orr.w	r2, r3, #1024	@ 0x400
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	609a      	str	r2, [r3, #8]
 8005776:	e005      	b.n	8005784 <ADC_EOCOnEachRegularChannelCmd+0x2c>
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	689b      	ldr	r3, [r3, #8]
 800577c:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	609a      	str	r2, [r3, #8]
 8005784:	bf00      	nop
 8005786:	370c      	adds	r7, #12
 8005788:	46bd      	mov	sp, r7
 800578a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800578e:	4770      	bx	lr

08005790 <ADC_ContinuousModeCmd>:
 8005790:	b480      	push	{r7}
 8005792:	b083      	sub	sp, #12
 8005794:	af00      	add	r7, sp, #0
 8005796:	6078      	str	r0, [r7, #4]
 8005798:	460b      	mov	r3, r1
 800579a:	70fb      	strb	r3, [r7, #3]
 800579c:	78fb      	ldrb	r3, [r7, #3]
 800579e:	2b00      	cmp	r3, #0
 80057a0:	d006      	beq.n	80057b0 <ADC_ContinuousModeCmd+0x20>
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	689b      	ldr	r3, [r3, #8]
 80057a6:	f043 0202 	orr.w	r2, r3, #2
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	609a      	str	r2, [r3, #8]
 80057ae:	e005      	b.n	80057bc <ADC_ContinuousModeCmd+0x2c>
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	689b      	ldr	r3, [r3, #8]
 80057b4:	f023 0202 	bic.w	r2, r3, #2
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	609a      	str	r2, [r3, #8]
 80057bc:	bf00      	nop
 80057be:	370c      	adds	r7, #12
 80057c0:	46bd      	mov	sp, r7
 80057c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057c6:	4770      	bx	lr

080057c8 <ADC_DiscModeChannelCountConfig>:
 80057c8:	b480      	push	{r7}
 80057ca:	b085      	sub	sp, #20
 80057cc:	af00      	add	r7, sp, #0
 80057ce:	6078      	str	r0, [r7, #4]
 80057d0:	460b      	mov	r3, r1
 80057d2:	70fb      	strb	r3, [r7, #3]
 80057d4:	2300      	movs	r3, #0
 80057d6:	60fb      	str	r3, [r7, #12]
 80057d8:	2300      	movs	r3, #0
 80057da:	60bb      	str	r3, [r7, #8]
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	685b      	ldr	r3, [r3, #4]
 80057e0:	60fb      	str	r3, [r7, #12]
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80057e8:	60fb      	str	r3, [r7, #12]
 80057ea:	78fb      	ldrb	r3, [r7, #3]
 80057ec:	3b01      	subs	r3, #1
 80057ee:	60bb      	str	r3, [r7, #8]
 80057f0:	68bb      	ldr	r3, [r7, #8]
 80057f2:	035b      	lsls	r3, r3, #13
 80057f4:	68fa      	ldr	r2, [r7, #12]
 80057f6:	4313      	orrs	r3, r2
 80057f8:	60fb      	str	r3, [r7, #12]
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	68fa      	ldr	r2, [r7, #12]
 80057fe:	605a      	str	r2, [r3, #4]
 8005800:	bf00      	nop
 8005802:	3714      	adds	r7, #20
 8005804:	46bd      	mov	sp, r7
 8005806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800580a:	4770      	bx	lr

0800580c <ADC_DiscModeCmd>:
 800580c:	b480      	push	{r7}
 800580e:	b083      	sub	sp, #12
 8005810:	af00      	add	r7, sp, #0
 8005812:	6078      	str	r0, [r7, #4]
 8005814:	460b      	mov	r3, r1
 8005816:	70fb      	strb	r3, [r7, #3]
 8005818:	78fb      	ldrb	r3, [r7, #3]
 800581a:	2b00      	cmp	r3, #0
 800581c:	d006      	beq.n	800582c <ADC_DiscModeCmd+0x20>
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	685b      	ldr	r3, [r3, #4]
 8005822:	f443 6200 	orr.w	r2, r3, #2048	@ 0x800
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	605a      	str	r2, [r3, #4]
 800582a:	e005      	b.n	8005838 <ADC_DiscModeCmd+0x2c>
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	685b      	ldr	r3, [r3, #4]
 8005830:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	605a      	str	r2, [r3, #4]
 8005838:	bf00      	nop
 800583a:	370c      	adds	r7, #12
 800583c:	46bd      	mov	sp, r7
 800583e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005842:	4770      	bx	lr

08005844 <ADC_DMACmd>:
 8005844:	b480      	push	{r7}
 8005846:	b083      	sub	sp, #12
 8005848:	af00      	add	r7, sp, #0
 800584a:	6078      	str	r0, [r7, #4]
 800584c:	460b      	mov	r3, r1
 800584e:	70fb      	strb	r3, [r7, #3]
 8005850:	78fb      	ldrb	r3, [r7, #3]
 8005852:	2b00      	cmp	r3, #0
 8005854:	d006      	beq.n	8005864 <ADC_DMACmd+0x20>
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	689b      	ldr	r3, [r3, #8]
 800585a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	609a      	str	r2, [r3, #8]
 8005862:	e005      	b.n	8005870 <ADC_DMACmd+0x2c>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	689b      	ldr	r3, [r3, #8]
 8005868:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	609a      	str	r2, [r3, #8]
 8005870:	bf00      	nop
 8005872:	370c      	adds	r7, #12
 8005874:	46bd      	mov	sp, r7
 8005876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800587a:	4770      	bx	lr

0800587c <ADC_DMARequestAfterLastTransferCmd>:
 800587c:	b480      	push	{r7}
 800587e:	b083      	sub	sp, #12
 8005880:	af00      	add	r7, sp, #0
 8005882:	6078      	str	r0, [r7, #4]
 8005884:	460b      	mov	r3, r1
 8005886:	70fb      	strb	r3, [r7, #3]
 8005888:	78fb      	ldrb	r3, [r7, #3]
 800588a:	2b00      	cmp	r3, #0
 800588c:	d006      	beq.n	800589c <ADC_DMARequestAfterLastTransferCmd+0x20>
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	689b      	ldr	r3, [r3, #8]
 8005892:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	609a      	str	r2, [r3, #8]
 800589a:	e005      	b.n	80058a8 <ADC_DMARequestAfterLastTransferCmd+0x2c>
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	689b      	ldr	r3, [r3, #8]
 80058a0:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	609a      	str	r2, [r3, #8]
 80058a8:	bf00      	nop
 80058aa:	370c      	adds	r7, #12
 80058ac:	46bd      	mov	sp, r7
 80058ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058b2:	4770      	bx	lr

080058b4 <DMA_DeInit>:
 80058b4:	b480      	push	{r7}
 80058b6:	b083      	sub	sp, #12
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	6078      	str	r0, [r7, #4]
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	681b      	ldr	r3, [r3, #0]
 80058c0:	f023 0201 	bic.w	r2, r3, #1
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	601a      	str	r2, [r3, #0]
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	2200      	movs	r2, #0
 80058cc:	601a      	str	r2, [r3, #0]
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	2200      	movs	r2, #0
 80058d2:	605a      	str	r2, [r3, #4]
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	2200      	movs	r2, #0
 80058d8:	609a      	str	r2, [r3, #8]
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	2200      	movs	r2, #0
 80058de:	60da      	str	r2, [r3, #12]
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	2200      	movs	r2, #0
 80058e4:	611a      	str	r2, [r3, #16]
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	2221      	movs	r2, #33	@ 0x21
 80058ea:	615a      	str	r2, [r3, #20]
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	4a46      	ldr	r2, [pc, #280]	@ (8005a08 <DMA_DeInit+0x154>)
 80058f0:	4293      	cmp	r3, r2
 80058f2:	d103      	bne.n	80058fc <DMA_DeInit+0x48>
 80058f4:	4b45      	ldr	r3, [pc, #276]	@ (8005a0c <DMA_DeInit+0x158>)
 80058f6:	223d      	movs	r2, #61	@ 0x3d
 80058f8:	609a      	str	r2, [r3, #8]
 80058fa:	e07e      	b.n	80059fa <DMA_DeInit+0x146>
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	4a44      	ldr	r2, [pc, #272]	@ (8005a10 <DMA_DeInit+0x15c>)
 8005900:	4293      	cmp	r3, r2
 8005902:	d104      	bne.n	800590e <DMA_DeInit+0x5a>
 8005904:	4b41      	ldr	r3, [pc, #260]	@ (8005a0c <DMA_DeInit+0x158>)
 8005906:	f44f 6274 	mov.w	r2, #3904	@ 0xf40
 800590a:	609a      	str	r2, [r3, #8]
 800590c:	e075      	b.n	80059fa <DMA_DeInit+0x146>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	4a40      	ldr	r2, [pc, #256]	@ (8005a14 <DMA_DeInit+0x160>)
 8005912:	4293      	cmp	r3, r2
 8005914:	d104      	bne.n	8005920 <DMA_DeInit+0x6c>
 8005916:	4b3d      	ldr	r3, [pc, #244]	@ (8005a0c <DMA_DeInit+0x158>)
 8005918:	f44f 1274 	mov.w	r2, #3997696	@ 0x3d0000
 800591c:	609a      	str	r2, [r3, #8]
 800591e:	e06c      	b.n	80059fa <DMA_DeInit+0x146>
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	4a3d      	ldr	r2, [pc, #244]	@ (8005a18 <DMA_DeInit+0x164>)
 8005924:	4293      	cmp	r3, r2
 8005926:	d104      	bne.n	8005932 <DMA_DeInit+0x7e>
 8005928:	4b38      	ldr	r3, [pc, #224]	@ (8005a0c <DMA_DeInit+0x158>)
 800592a:	f04f 6274 	mov.w	r2, #255852544	@ 0xf400000
 800592e:	609a      	str	r2, [r3, #8]
 8005930:	e063      	b.n	80059fa <DMA_DeInit+0x146>
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	4a39      	ldr	r2, [pc, #228]	@ (8005a1c <DMA_DeInit+0x168>)
 8005936:	4293      	cmp	r3, r2
 8005938:	d103      	bne.n	8005942 <DMA_DeInit+0x8e>
 800593a:	4b34      	ldr	r3, [pc, #208]	@ (8005a0c <DMA_DeInit+0x158>)
 800593c:	4a38      	ldr	r2, [pc, #224]	@ (8005a20 <DMA_DeInit+0x16c>)
 800593e:	60da      	str	r2, [r3, #12]
 8005940:	e05b      	b.n	80059fa <DMA_DeInit+0x146>
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	4a37      	ldr	r2, [pc, #220]	@ (8005a24 <DMA_DeInit+0x170>)
 8005946:	4293      	cmp	r3, r2
 8005948:	d103      	bne.n	8005952 <DMA_DeInit+0x9e>
 800594a:	4b30      	ldr	r3, [pc, #192]	@ (8005a0c <DMA_DeInit+0x158>)
 800594c:	4a36      	ldr	r2, [pc, #216]	@ (8005a28 <DMA_DeInit+0x174>)
 800594e:	60da      	str	r2, [r3, #12]
 8005950:	e053      	b.n	80059fa <DMA_DeInit+0x146>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	4a35      	ldr	r2, [pc, #212]	@ (8005a2c <DMA_DeInit+0x178>)
 8005956:	4293      	cmp	r3, r2
 8005958:	d103      	bne.n	8005962 <DMA_DeInit+0xae>
 800595a:	4b2c      	ldr	r3, [pc, #176]	@ (8005a0c <DMA_DeInit+0x158>)
 800595c:	4a34      	ldr	r2, [pc, #208]	@ (8005a30 <DMA_DeInit+0x17c>)
 800595e:	60da      	str	r2, [r3, #12]
 8005960:	e04b      	b.n	80059fa <DMA_DeInit+0x146>
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	4a33      	ldr	r2, [pc, #204]	@ (8005a34 <DMA_DeInit+0x180>)
 8005966:	4293      	cmp	r3, r2
 8005968:	d104      	bne.n	8005974 <DMA_DeInit+0xc0>
 800596a:	4b28      	ldr	r3, [pc, #160]	@ (8005a0c <DMA_DeInit+0x158>)
 800596c:	f04f 523d 	mov.w	r2, #792723456	@ 0x2f400000
 8005970:	60da      	str	r2, [r3, #12]
 8005972:	e042      	b.n	80059fa <DMA_DeInit+0x146>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	4a30      	ldr	r2, [pc, #192]	@ (8005a38 <DMA_DeInit+0x184>)
 8005978:	4293      	cmp	r3, r2
 800597a:	d103      	bne.n	8005984 <DMA_DeInit+0xd0>
 800597c:	4b2f      	ldr	r3, [pc, #188]	@ (8005a3c <DMA_DeInit+0x188>)
 800597e:	223d      	movs	r2, #61	@ 0x3d
 8005980:	609a      	str	r2, [r3, #8]
 8005982:	e03a      	b.n	80059fa <DMA_DeInit+0x146>
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	4a2e      	ldr	r2, [pc, #184]	@ (8005a40 <DMA_DeInit+0x18c>)
 8005988:	4293      	cmp	r3, r2
 800598a:	d104      	bne.n	8005996 <DMA_DeInit+0xe2>
 800598c:	4b2b      	ldr	r3, [pc, #172]	@ (8005a3c <DMA_DeInit+0x188>)
 800598e:	f44f 6274 	mov.w	r2, #3904	@ 0xf40
 8005992:	609a      	str	r2, [r3, #8]
 8005994:	e031      	b.n	80059fa <DMA_DeInit+0x146>
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	4a2a      	ldr	r2, [pc, #168]	@ (8005a44 <DMA_DeInit+0x190>)
 800599a:	4293      	cmp	r3, r2
 800599c:	d104      	bne.n	80059a8 <DMA_DeInit+0xf4>
 800599e:	4b27      	ldr	r3, [pc, #156]	@ (8005a3c <DMA_DeInit+0x188>)
 80059a0:	f44f 1274 	mov.w	r2, #3997696	@ 0x3d0000
 80059a4:	609a      	str	r2, [r3, #8]
 80059a6:	e028      	b.n	80059fa <DMA_DeInit+0x146>
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	4a27      	ldr	r2, [pc, #156]	@ (8005a48 <DMA_DeInit+0x194>)
 80059ac:	4293      	cmp	r3, r2
 80059ae:	d104      	bne.n	80059ba <DMA_DeInit+0x106>
 80059b0:	4b22      	ldr	r3, [pc, #136]	@ (8005a3c <DMA_DeInit+0x188>)
 80059b2:	f04f 6274 	mov.w	r2, #255852544	@ 0xf400000
 80059b6:	609a      	str	r2, [r3, #8]
 80059b8:	e01f      	b.n	80059fa <DMA_DeInit+0x146>
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	4a23      	ldr	r2, [pc, #140]	@ (8005a4c <DMA_DeInit+0x198>)
 80059be:	4293      	cmp	r3, r2
 80059c0:	d103      	bne.n	80059ca <DMA_DeInit+0x116>
 80059c2:	4b1e      	ldr	r3, [pc, #120]	@ (8005a3c <DMA_DeInit+0x188>)
 80059c4:	4a16      	ldr	r2, [pc, #88]	@ (8005a20 <DMA_DeInit+0x16c>)
 80059c6:	60da      	str	r2, [r3, #12]
 80059c8:	e017      	b.n	80059fa <DMA_DeInit+0x146>
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	4a20      	ldr	r2, [pc, #128]	@ (8005a50 <DMA_DeInit+0x19c>)
 80059ce:	4293      	cmp	r3, r2
 80059d0:	d103      	bne.n	80059da <DMA_DeInit+0x126>
 80059d2:	4b1a      	ldr	r3, [pc, #104]	@ (8005a3c <DMA_DeInit+0x188>)
 80059d4:	4a14      	ldr	r2, [pc, #80]	@ (8005a28 <DMA_DeInit+0x174>)
 80059d6:	60da      	str	r2, [r3, #12]
 80059d8:	e00f      	b.n	80059fa <DMA_DeInit+0x146>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	4a1d      	ldr	r2, [pc, #116]	@ (8005a54 <DMA_DeInit+0x1a0>)
 80059de:	4293      	cmp	r3, r2
 80059e0:	d103      	bne.n	80059ea <DMA_DeInit+0x136>
 80059e2:	4b16      	ldr	r3, [pc, #88]	@ (8005a3c <DMA_DeInit+0x188>)
 80059e4:	4a12      	ldr	r2, [pc, #72]	@ (8005a30 <DMA_DeInit+0x17c>)
 80059e6:	60da      	str	r2, [r3, #12]
 80059e8:	e007      	b.n	80059fa <DMA_DeInit+0x146>
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	4a1a      	ldr	r2, [pc, #104]	@ (8005a58 <DMA_DeInit+0x1a4>)
 80059ee:	4293      	cmp	r3, r2
 80059f0:	d103      	bne.n	80059fa <DMA_DeInit+0x146>
 80059f2:	4b12      	ldr	r3, [pc, #72]	@ (8005a3c <DMA_DeInit+0x188>)
 80059f4:	f04f 523d 	mov.w	r2, #792723456	@ 0x2f400000
 80059f8:	60da      	str	r2, [r3, #12]
 80059fa:	bf00      	nop
 80059fc:	370c      	adds	r7, #12
 80059fe:	46bd      	mov	sp, r7
 8005a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a04:	4770      	bx	lr
 8005a06:	bf00      	nop
 8005a08:	40026010 	.word	0x40026010
 8005a0c:	40026000 	.word	0x40026000
 8005a10:	40026028 	.word	0x40026028
 8005a14:	40026040 	.word	0x40026040
 8005a18:	40026058 	.word	0x40026058
 8005a1c:	40026070 	.word	0x40026070
 8005a20:	2000003d 	.word	0x2000003d
 8005a24:	40026088 	.word	0x40026088
 8005a28:	20000f40 	.word	0x20000f40
 8005a2c:	400260a0 	.word	0x400260a0
 8005a30:	203d0000 	.word	0x203d0000
 8005a34:	400260b8 	.word	0x400260b8
 8005a38:	40026410 	.word	0x40026410
 8005a3c:	40026400 	.word	0x40026400
 8005a40:	40026428 	.word	0x40026428
 8005a44:	40026440 	.word	0x40026440
 8005a48:	40026458 	.word	0x40026458
 8005a4c:	40026470 	.word	0x40026470
 8005a50:	40026488 	.word	0x40026488
 8005a54:	400264a0 	.word	0x400264a0
 8005a58:	400264b8 	.word	0x400264b8

08005a5c <DMA_Init>:
 8005a5c:	b480      	push	{r7}
 8005a5e:	b085      	sub	sp, #20
 8005a60:	af00      	add	r7, sp, #0
 8005a62:	6078      	str	r0, [r7, #4]
 8005a64:	6039      	str	r1, [r7, #0]
 8005a66:	2300      	movs	r3, #0
 8005a68:	60fb      	str	r3, [r7, #12]
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	60fb      	str	r3, [r7, #12]
 8005a70:	68fa      	ldr	r2, [r7, #12]
 8005a72:	4b25      	ldr	r3, [pc, #148]	@ (8005b08 <DMA_Init+0xac>)
 8005a74:	4013      	ands	r3, r2
 8005a76:	60fb      	str	r3, [r7, #12]
 8005a78:	683b      	ldr	r3, [r7, #0]
 8005a7a:	681a      	ldr	r2, [r3, #0]
 8005a7c:	683b      	ldr	r3, [r7, #0]
 8005a7e:	68db      	ldr	r3, [r3, #12]
 8005a80:	431a      	orrs	r2, r3
 8005a82:	683b      	ldr	r3, [r7, #0]
 8005a84:	695b      	ldr	r3, [r3, #20]
 8005a86:	431a      	orrs	r2, r3
 8005a88:	683b      	ldr	r3, [r7, #0]
 8005a8a:	699b      	ldr	r3, [r3, #24]
 8005a8c:	431a      	orrs	r2, r3
 8005a8e:	683b      	ldr	r3, [r7, #0]
 8005a90:	69db      	ldr	r3, [r3, #28]
 8005a92:	431a      	orrs	r2, r3
 8005a94:	683b      	ldr	r3, [r7, #0]
 8005a96:	6a1b      	ldr	r3, [r3, #32]
 8005a98:	431a      	orrs	r2, r3
 8005a9a:	683b      	ldr	r3, [r7, #0]
 8005a9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005a9e:	431a      	orrs	r2, r3
 8005aa0:	683b      	ldr	r3, [r7, #0]
 8005aa2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005aa4:	431a      	orrs	r2, r3
 8005aa6:	683b      	ldr	r3, [r7, #0]
 8005aa8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005aaa:	431a      	orrs	r2, r3
 8005aac:	683b      	ldr	r3, [r7, #0]
 8005aae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005ab0:	4313      	orrs	r3, r2
 8005ab2:	68fa      	ldr	r2, [r7, #12]
 8005ab4:	4313      	orrs	r3, r2
 8005ab6:	60fb      	str	r3, [r7, #12]
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	68fa      	ldr	r2, [r7, #12]
 8005abc:	601a      	str	r2, [r3, #0]
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	695b      	ldr	r3, [r3, #20]
 8005ac2:	60fb      	str	r3, [r7, #12]
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	f023 0307 	bic.w	r3, r3, #7
 8005aca:	60fb      	str	r3, [r7, #12]
 8005acc:	683b      	ldr	r3, [r7, #0]
 8005ace:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005ad0:	683b      	ldr	r3, [r7, #0]
 8005ad2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ad4:	4313      	orrs	r3, r2
 8005ad6:	68fa      	ldr	r2, [r7, #12]
 8005ad8:	4313      	orrs	r3, r2
 8005ada:	60fb      	str	r3, [r7, #12]
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	68fa      	ldr	r2, [r7, #12]
 8005ae0:	615a      	str	r2, [r3, #20]
 8005ae2:	683b      	ldr	r3, [r7, #0]
 8005ae4:	691a      	ldr	r2, [r3, #16]
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	605a      	str	r2, [r3, #4]
 8005aea:	683b      	ldr	r3, [r7, #0]
 8005aec:	685a      	ldr	r2, [r3, #4]
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	609a      	str	r2, [r3, #8]
 8005af2:	683b      	ldr	r3, [r7, #0]
 8005af4:	689a      	ldr	r2, [r3, #8]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	60da      	str	r2, [r3, #12]
 8005afa:	bf00      	nop
 8005afc:	3714      	adds	r7, #20
 8005afe:	46bd      	mov	sp, r7
 8005b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b04:	4770      	bx	lr
 8005b06:	bf00      	nop
 8005b08:	f01c803f 	.word	0xf01c803f

08005b0c <DMA_Cmd>:
 8005b0c:	b480      	push	{r7}
 8005b0e:	b083      	sub	sp, #12
 8005b10:	af00      	add	r7, sp, #0
 8005b12:	6078      	str	r0, [r7, #4]
 8005b14:	460b      	mov	r3, r1
 8005b16:	70fb      	strb	r3, [r7, #3]
 8005b18:	78fb      	ldrb	r3, [r7, #3]
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d006      	beq.n	8005b2c <DMA_Cmd+0x20>
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	f043 0201 	orr.w	r2, r3, #1
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	601a      	str	r2, [r3, #0]
 8005b2a:	e005      	b.n	8005b38 <DMA_Cmd+0x2c>
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	f023 0201 	bic.w	r2, r3, #1
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	601a      	str	r2, [r3, #0]
 8005b38:	bf00      	nop
 8005b3a:	370c      	adds	r7, #12
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b42:	4770      	bx	lr

08005b44 <I2C_Init>:
 8005b44:	b580      	push	{r7, lr}
 8005b46:	b08a      	sub	sp, #40	@ 0x28
 8005b48:	af00      	add	r7, sp, #0
 8005b4a:	6078      	str	r0, [r7, #4]
 8005b4c:	6039      	str	r1, [r7, #0]
 8005b4e:	2300      	movs	r3, #0
 8005b50:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005b52:	2300      	movs	r3, #0
 8005b54:	847b      	strh	r3, [r7, #34]	@ 0x22
 8005b56:	2304      	movs	r3, #4
 8005b58:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005b5a:	4b57      	ldr	r3, [pc, #348]	@ (8005cb8 <I2C_Init+0x174>)
 8005b5c:	61fb      	str	r3, [r7, #28]
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	889b      	ldrh	r3, [r3, #4]
 8005b62:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005b64:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8005b66:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8005b6a:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005b6c:	f107 030c 	add.w	r3, r7, #12
 8005b70:	4618      	mov	r0, r3
 8005b72:	f7fb ffbb 	bl	8001aec <RCC_GetClocksFreq>
 8005b76:	697b      	ldr	r3, [r7, #20]
 8005b78:	61fb      	str	r3, [r7, #28]
 8005b7a:	69fb      	ldr	r3, [r7, #28]
 8005b7c:	4a4f      	ldr	r2, [pc, #316]	@ (8005cbc <I2C_Init+0x178>)
 8005b7e:	fba2 2303 	umull	r2, r3, r2, r3
 8005b82:	0c9b      	lsrs	r3, r3, #18
 8005b84:	847b      	strh	r3, [r7, #34]	@ 0x22
 8005b86:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8005b88:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8005b8a:	4313      	orrs	r3, r2
 8005b8c:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8005b92:	809a      	strh	r2, [r3, #4]
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	881b      	ldrh	r3, [r3, #0]
 8005b98:	b29b      	uxth	r3, r3
 8005b9a:	f023 0301 	bic.w	r3, r3, #1
 8005b9e:	b29a      	uxth	r2, r3
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	801a      	strh	r2, [r3, #0]
 8005ba4:	2300      	movs	r3, #0
 8005ba6:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005ba8:	683b      	ldr	r3, [r7, #0]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	4a44      	ldr	r2, [pc, #272]	@ (8005cc0 <I2C_Init+0x17c>)
 8005bae:	4293      	cmp	r3, r2
 8005bb0:	d815      	bhi.n	8005bde <I2C_Init+0x9a>
 8005bb2:	683b      	ldr	r3, [r7, #0]
 8005bb4:	681b      	ldr	r3, [r3, #0]
 8005bb6:	005b      	lsls	r3, r3, #1
 8005bb8:	69fa      	ldr	r2, [r7, #28]
 8005bba:	fbb2 f3f3 	udiv	r3, r2, r3
 8005bbe:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005bc0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005bc2:	2b03      	cmp	r3, #3
 8005bc4:	d801      	bhi.n	8005bca <I2C_Init+0x86>
 8005bc6:	2304      	movs	r3, #4
 8005bc8:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005bca:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8005bcc:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005bce:	4313      	orrs	r3, r2
 8005bd0:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005bd2:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8005bd4:	3301      	adds	r3, #1
 8005bd6:	b29a      	uxth	r2, r3
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	841a      	strh	r2, [r3, #32]
 8005bdc:	e040      	b.n	8005c60 <I2C_Init+0x11c>
 8005bde:	683b      	ldr	r3, [r7, #0]
 8005be0:	88db      	ldrh	r3, [r3, #6]
 8005be2:	f64b 72ff 	movw	r2, #49151	@ 0xbfff
 8005be6:	4293      	cmp	r3, r2
 8005be8:	d109      	bne.n	8005bfe <I2C_Init+0xba>
 8005bea:	683b      	ldr	r3, [r7, #0]
 8005bec:	681a      	ldr	r2, [r3, #0]
 8005bee:	4613      	mov	r3, r2
 8005bf0:	005b      	lsls	r3, r3, #1
 8005bf2:	4413      	add	r3, r2
 8005bf4:	69fa      	ldr	r2, [r7, #28]
 8005bf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8005bfa:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005bfc:	e00e      	b.n	8005c1c <I2C_Init+0xd8>
 8005bfe:	683b      	ldr	r3, [r7, #0]
 8005c00:	681a      	ldr	r2, [r3, #0]
 8005c02:	4613      	mov	r3, r2
 8005c04:	009b      	lsls	r3, r3, #2
 8005c06:	4413      	add	r3, r2
 8005c08:	009a      	lsls	r2, r3, #2
 8005c0a:	4413      	add	r3, r2
 8005c0c:	69fa      	ldr	r2, [r7, #28]
 8005c0e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005c12:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005c14:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005c16:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005c1a:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005c1c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005c1e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	d103      	bne.n	8005c2e <I2C_Init+0xea>
 8005c26:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005c28:	f043 0301 	orr.w	r3, r3, #1
 8005c2c:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8005c2e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8005c30:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8005c32:	4313      	orrs	r3, r2
 8005c34:	b29b      	uxth	r3, r3
 8005c36:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005c3a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005c3e:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005c40:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8005c42:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8005c46:	fb02 f303 	mul.w	r3, r2, r3
 8005c4a:	4a1e      	ldr	r2, [pc, #120]	@ (8005cc4 <I2C_Init+0x180>)
 8005c4c:	fb82 1203 	smull	r1, r2, r2, r3
 8005c50:	1192      	asrs	r2, r2, #6
 8005c52:	17db      	asrs	r3, r3, #31
 8005c54:	1ad3      	subs	r3, r2, r3
 8005c56:	b29b      	uxth	r3, r3
 8005c58:	3301      	adds	r3, #1
 8005c5a:	b29a      	uxth	r2, r3
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	841a      	strh	r2, [r3, #32]
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8005c64:	839a      	strh	r2, [r3, #28]
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	881b      	ldrh	r3, [r3, #0]
 8005c6a:	b29b      	uxth	r3, r3
 8005c6c:	f043 0301 	orr.w	r3, r3, #1
 8005c70:	b29a      	uxth	r2, r3
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	801a      	strh	r2, [r3, #0]
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	881b      	ldrh	r3, [r3, #0]
 8005c7a:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005c7c:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8005c7e:	f423 6381 	bic.w	r3, r3, #1032	@ 0x408
 8005c82:	f023 0302 	bic.w	r3, r3, #2
 8005c86:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005c88:	683b      	ldr	r3, [r7, #0]
 8005c8a:	889a      	ldrh	r2, [r3, #4]
 8005c8c:	683b      	ldr	r3, [r7, #0]
 8005c8e:	895b      	ldrh	r3, [r3, #10]
 8005c90:	4313      	orrs	r3, r2
 8005c92:	b29a      	uxth	r2, r3
 8005c94:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8005c96:	4313      	orrs	r3, r2
 8005c98:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	8cfa      	ldrh	r2, [r7, #38]	@ 0x26
 8005c9e:	801a      	strh	r2, [r3, #0]
 8005ca0:	683b      	ldr	r3, [r7, #0]
 8005ca2:	899a      	ldrh	r2, [r3, #12]
 8005ca4:	683b      	ldr	r3, [r7, #0]
 8005ca6:	891b      	ldrh	r3, [r3, #8]
 8005ca8:	4313      	orrs	r3, r2
 8005caa:	b29a      	uxth	r2, r3
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	811a      	strh	r2, [r3, #8]
 8005cb0:	bf00      	nop
 8005cb2:	3728      	adds	r7, #40	@ 0x28
 8005cb4:	46bd      	mov	sp, r7
 8005cb6:	bd80      	pop	{r7, pc}
 8005cb8:	007a1200 	.word	0x007a1200
 8005cbc:	431bde83 	.word	0x431bde83
 8005cc0:	000186a0 	.word	0x000186a0
 8005cc4:	10624dd3 	.word	0x10624dd3

08005cc8 <I2C_Cmd>:
 8005cc8:	b480      	push	{r7}
 8005cca:	b083      	sub	sp, #12
 8005ccc:	af00      	add	r7, sp, #0
 8005cce:	6078      	str	r0, [r7, #4]
 8005cd0:	460b      	mov	r3, r1
 8005cd2:	70fb      	strb	r3, [r7, #3]
 8005cd4:	78fb      	ldrb	r3, [r7, #3]
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d008      	beq.n	8005cec <I2C_Cmd+0x24>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	881b      	ldrh	r3, [r3, #0]
 8005cde:	b29b      	uxth	r3, r3
 8005ce0:	f043 0301 	orr.w	r3, r3, #1
 8005ce4:	b29a      	uxth	r2, r3
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	801a      	strh	r2, [r3, #0]
 8005cea:	e007      	b.n	8005cfc <I2C_Cmd+0x34>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	881b      	ldrh	r3, [r3, #0]
 8005cf0:	b29b      	uxth	r3, r3
 8005cf2:	f023 0301 	bic.w	r3, r3, #1
 8005cf6:	b29a      	uxth	r2, r3
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	801a      	strh	r2, [r3, #0]
 8005cfc:	bf00      	nop
 8005cfe:	370c      	adds	r7, #12
 8005d00:	46bd      	mov	sp, r7
 8005d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d06:	4770      	bx	lr

08005d08 <I2C_GenerateSTART>:
 8005d08:	b480      	push	{r7}
 8005d0a:	b083      	sub	sp, #12
 8005d0c:	af00      	add	r7, sp, #0
 8005d0e:	6078      	str	r0, [r7, #4]
 8005d10:	460b      	mov	r3, r1
 8005d12:	70fb      	strb	r3, [r7, #3]
 8005d14:	78fb      	ldrb	r3, [r7, #3]
 8005d16:	2b00      	cmp	r3, #0
 8005d18:	d008      	beq.n	8005d2c <I2C_GenerateSTART+0x24>
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	881b      	ldrh	r3, [r3, #0]
 8005d1e:	b29b      	uxth	r3, r3
 8005d20:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005d24:	b29a      	uxth	r2, r3
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	801a      	strh	r2, [r3, #0]
 8005d2a:	e007      	b.n	8005d3c <I2C_GenerateSTART+0x34>
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	881b      	ldrh	r3, [r3, #0]
 8005d30:	b29b      	uxth	r3, r3
 8005d32:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005d36:	b29a      	uxth	r2, r3
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	801a      	strh	r2, [r3, #0]
 8005d3c:	bf00      	nop
 8005d3e:	370c      	adds	r7, #12
 8005d40:	46bd      	mov	sp, r7
 8005d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d46:	4770      	bx	lr

08005d48 <I2C_GenerateSTOP>:
 8005d48:	b480      	push	{r7}
 8005d4a:	b083      	sub	sp, #12
 8005d4c:	af00      	add	r7, sp, #0
 8005d4e:	6078      	str	r0, [r7, #4]
 8005d50:	460b      	mov	r3, r1
 8005d52:	70fb      	strb	r3, [r7, #3]
 8005d54:	78fb      	ldrb	r3, [r7, #3]
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d008      	beq.n	8005d6c <I2C_GenerateSTOP+0x24>
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	881b      	ldrh	r3, [r3, #0]
 8005d5e:	b29b      	uxth	r3, r3
 8005d60:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005d64:	b29a      	uxth	r2, r3
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	801a      	strh	r2, [r3, #0]
 8005d6a:	e007      	b.n	8005d7c <I2C_GenerateSTOP+0x34>
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	881b      	ldrh	r3, [r3, #0]
 8005d70:	b29b      	uxth	r3, r3
 8005d72:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005d76:	b29a      	uxth	r2, r3
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	801a      	strh	r2, [r3, #0]
 8005d7c:	bf00      	nop
 8005d7e:	370c      	adds	r7, #12
 8005d80:	46bd      	mov	sp, r7
 8005d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d86:	4770      	bx	lr

08005d88 <I2C_Send7bitAddress>:
 8005d88:	b480      	push	{r7}
 8005d8a:	b083      	sub	sp, #12
 8005d8c:	af00      	add	r7, sp, #0
 8005d8e:	6078      	str	r0, [r7, #4]
 8005d90:	460b      	mov	r3, r1
 8005d92:	70fb      	strb	r3, [r7, #3]
 8005d94:	4613      	mov	r3, r2
 8005d96:	70bb      	strb	r3, [r7, #2]
 8005d98:	78bb      	ldrb	r3, [r7, #2]
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d004      	beq.n	8005da8 <I2C_Send7bitAddress+0x20>
 8005d9e:	78fb      	ldrb	r3, [r7, #3]
 8005da0:	f043 0301 	orr.w	r3, r3, #1
 8005da4:	70fb      	strb	r3, [r7, #3]
 8005da6:	e003      	b.n	8005db0 <I2C_Send7bitAddress+0x28>
 8005da8:	78fb      	ldrb	r3, [r7, #3]
 8005daa:	f023 0301 	bic.w	r3, r3, #1
 8005dae:	70fb      	strb	r3, [r7, #3]
 8005db0:	78fb      	ldrb	r3, [r7, #3]
 8005db2:	b29a      	uxth	r2, r3
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	821a      	strh	r2, [r3, #16]
 8005db8:	bf00      	nop
 8005dba:	370c      	adds	r7, #12
 8005dbc:	46bd      	mov	sp, r7
 8005dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc2:	4770      	bx	lr

08005dc4 <I2C_AcknowledgeConfig>:
 8005dc4:	b480      	push	{r7}
 8005dc6:	b083      	sub	sp, #12
 8005dc8:	af00      	add	r7, sp, #0
 8005dca:	6078      	str	r0, [r7, #4]
 8005dcc:	460b      	mov	r3, r1
 8005dce:	70fb      	strb	r3, [r7, #3]
 8005dd0:	78fb      	ldrb	r3, [r7, #3]
 8005dd2:	2b00      	cmp	r3, #0
 8005dd4:	d008      	beq.n	8005de8 <I2C_AcknowledgeConfig+0x24>
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	881b      	ldrh	r3, [r3, #0]
 8005dda:	b29b      	uxth	r3, r3
 8005ddc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8005de0:	b29a      	uxth	r2, r3
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	801a      	strh	r2, [r3, #0]
 8005de6:	e007      	b.n	8005df8 <I2C_AcknowledgeConfig+0x34>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	881b      	ldrh	r3, [r3, #0]
 8005dec:	b29b      	uxth	r3, r3
 8005dee:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005df2:	b29a      	uxth	r2, r3
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	801a      	strh	r2, [r3, #0]
 8005df8:	bf00      	nop
 8005dfa:	370c      	adds	r7, #12
 8005dfc:	46bd      	mov	sp, r7
 8005dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e02:	4770      	bx	lr

08005e04 <I2C_SendData>:
 8005e04:	b480      	push	{r7}
 8005e06:	b083      	sub	sp, #12
 8005e08:	af00      	add	r7, sp, #0
 8005e0a:	6078      	str	r0, [r7, #4]
 8005e0c:	460b      	mov	r3, r1
 8005e0e:	70fb      	strb	r3, [r7, #3]
 8005e10:	78fb      	ldrb	r3, [r7, #3]
 8005e12:	b29a      	uxth	r2, r3
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	821a      	strh	r2, [r3, #16]
 8005e18:	bf00      	nop
 8005e1a:	370c      	adds	r7, #12
 8005e1c:	46bd      	mov	sp, r7
 8005e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e22:	4770      	bx	lr

08005e24 <I2C_ReceiveData>:
 8005e24:	b480      	push	{r7}
 8005e26:	b083      	sub	sp, #12
 8005e28:	af00      	add	r7, sp, #0
 8005e2a:	6078      	str	r0, [r7, #4]
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	8a1b      	ldrh	r3, [r3, #16]
 8005e30:	b29b      	uxth	r3, r3
 8005e32:	b2db      	uxtb	r3, r3
 8005e34:	4618      	mov	r0, r3
 8005e36:	370c      	adds	r7, #12
 8005e38:	46bd      	mov	sp, r7
 8005e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e3e:	4770      	bx	lr

08005e40 <I2C_CheckEvent>:
 8005e40:	b480      	push	{r7}
 8005e42:	b087      	sub	sp, #28
 8005e44:	af00      	add	r7, sp, #0
 8005e46:	6078      	str	r0, [r7, #4]
 8005e48:	6039      	str	r1, [r7, #0]
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	613b      	str	r3, [r7, #16]
 8005e4e:	2300      	movs	r3, #0
 8005e50:	60fb      	str	r3, [r7, #12]
 8005e52:	2300      	movs	r3, #0
 8005e54:	60bb      	str	r3, [r7, #8]
 8005e56:	2300      	movs	r3, #0
 8005e58:	75fb      	strb	r3, [r7, #23]
 8005e5a:	687b      	ldr	r3, [r7, #4]
 8005e5c:	8a9b      	ldrh	r3, [r3, #20]
 8005e5e:	b29b      	uxth	r3, r3
 8005e60:	60fb      	str	r3, [r7, #12]
 8005e62:	687b      	ldr	r3, [r7, #4]
 8005e64:	8b1b      	ldrh	r3, [r3, #24]
 8005e66:	b29b      	uxth	r3, r3
 8005e68:	60bb      	str	r3, [r7, #8]
 8005e6a:	68bb      	ldr	r3, [r7, #8]
 8005e6c:	041b      	lsls	r3, r3, #16
 8005e6e:	60bb      	str	r3, [r7, #8]
 8005e70:	68fa      	ldr	r2, [r7, #12]
 8005e72:	68bb      	ldr	r3, [r7, #8]
 8005e74:	4313      	orrs	r3, r2
 8005e76:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8005e7a:	613b      	str	r3, [r7, #16]
 8005e7c:	693a      	ldr	r2, [r7, #16]
 8005e7e:	683b      	ldr	r3, [r7, #0]
 8005e80:	4013      	ands	r3, r2
 8005e82:	683a      	ldr	r2, [r7, #0]
 8005e84:	429a      	cmp	r2, r3
 8005e86:	d102      	bne.n	8005e8e <I2C_CheckEvent+0x4e>
 8005e88:	2301      	movs	r3, #1
 8005e8a:	75fb      	strb	r3, [r7, #23]
 8005e8c:	e001      	b.n	8005e92 <I2C_CheckEvent+0x52>
 8005e8e:	2300      	movs	r3, #0
 8005e90:	75fb      	strb	r3, [r7, #23]
 8005e92:	7dfb      	ldrb	r3, [r7, #23]
 8005e94:	4618      	mov	r0, r3
 8005e96:	371c      	adds	r7, #28
 8005e98:	46bd      	mov	sp, r7
 8005e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e9e:	4770      	bx	lr

08005ea0 <I2C_GetFlagStatus>:
 8005ea0:	b480      	push	{r7}
 8005ea2:	b087      	sub	sp, #28
 8005ea4:	af00      	add	r7, sp, #0
 8005ea6:	6078      	str	r0, [r7, #4]
 8005ea8:	6039      	str	r1, [r7, #0]
 8005eaa:	2300      	movs	r3, #0
 8005eac:	75fb      	strb	r3, [r7, #23]
 8005eae:	2300      	movs	r3, #0
 8005eb0:	613b      	str	r3, [r7, #16]
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	60fb      	str	r3, [r7, #12]
 8005eb6:	687b      	ldr	r3, [r7, #4]
 8005eb8:	60fb      	str	r3, [r7, #12]
 8005eba:	683b      	ldr	r3, [r7, #0]
 8005ebc:	0f1b      	lsrs	r3, r3, #28
 8005ebe:	613b      	str	r3, [r7, #16]
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8005ec6:	603b      	str	r3, [r7, #0]
 8005ec8:	693b      	ldr	r3, [r7, #16]
 8005eca:	2b00      	cmp	r3, #0
 8005ecc:	d003      	beq.n	8005ed6 <I2C_GetFlagStatus+0x36>
 8005ece:	68fb      	ldr	r3, [r7, #12]
 8005ed0:	3314      	adds	r3, #20
 8005ed2:	60fb      	str	r3, [r7, #12]
 8005ed4:	e005      	b.n	8005ee2 <I2C_GetFlagStatus+0x42>
 8005ed6:	683b      	ldr	r3, [r7, #0]
 8005ed8:	0c1b      	lsrs	r3, r3, #16
 8005eda:	603b      	str	r3, [r7, #0]
 8005edc:	68fb      	ldr	r3, [r7, #12]
 8005ede:	3318      	adds	r3, #24
 8005ee0:	60fb      	str	r3, [r7, #12]
 8005ee2:	68fb      	ldr	r3, [r7, #12]
 8005ee4:	681a      	ldr	r2, [r3, #0]
 8005ee6:	683b      	ldr	r3, [r7, #0]
 8005ee8:	4013      	ands	r3, r2
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d002      	beq.n	8005ef4 <I2C_GetFlagStatus+0x54>
 8005eee:	2301      	movs	r3, #1
 8005ef0:	75fb      	strb	r3, [r7, #23]
 8005ef2:	e001      	b.n	8005ef8 <I2C_GetFlagStatus+0x58>
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	75fb      	strb	r3, [r7, #23]
 8005ef8:	7dfb      	ldrb	r3, [r7, #23]
 8005efa:	4618      	mov	r0, r3
 8005efc:	371c      	adds	r7, #28
 8005efe:	46bd      	mov	sp, r7
 8005f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f04:	4770      	bx	lr
	...

08005f08 <TIM_TimeBaseInit>:
 8005f08:	b480      	push	{r7}
 8005f0a:	b085      	sub	sp, #20
 8005f0c:	af00      	add	r7, sp, #0
 8005f0e:	6078      	str	r0, [r7, #4]
 8005f10:	6039      	str	r1, [r7, #0]
 8005f12:	2300      	movs	r3, #0
 8005f14:	81fb      	strh	r3, [r7, #14]
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	881b      	ldrh	r3, [r3, #0]
 8005f1a:	81fb      	strh	r3, [r7, #14]
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	4a29      	ldr	r2, [pc, #164]	@ (8005fc4 <TIM_TimeBaseInit+0xbc>)
 8005f20:	4293      	cmp	r3, r2
 8005f22:	d013      	beq.n	8005f4c <TIM_TimeBaseInit+0x44>
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	4a28      	ldr	r2, [pc, #160]	@ (8005fc8 <TIM_TimeBaseInit+0xc0>)
 8005f28:	4293      	cmp	r3, r2
 8005f2a:	d00f      	beq.n	8005f4c <TIM_TimeBaseInit+0x44>
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005f32:	d00b      	beq.n	8005f4c <TIM_TimeBaseInit+0x44>
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	4a25      	ldr	r2, [pc, #148]	@ (8005fcc <TIM_TimeBaseInit+0xc4>)
 8005f38:	4293      	cmp	r3, r2
 8005f3a:	d007      	beq.n	8005f4c <TIM_TimeBaseInit+0x44>
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	4a24      	ldr	r2, [pc, #144]	@ (8005fd0 <TIM_TimeBaseInit+0xc8>)
 8005f40:	4293      	cmp	r3, r2
 8005f42:	d003      	beq.n	8005f4c <TIM_TimeBaseInit+0x44>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	4a23      	ldr	r2, [pc, #140]	@ (8005fd4 <TIM_TimeBaseInit+0xcc>)
 8005f48:	4293      	cmp	r3, r2
 8005f4a:	d108      	bne.n	8005f5e <TIM_TimeBaseInit+0x56>
 8005f4c:	89fb      	ldrh	r3, [r7, #14]
 8005f4e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005f52:	81fb      	strh	r3, [r7, #14]
 8005f54:	683b      	ldr	r3, [r7, #0]
 8005f56:	885a      	ldrh	r2, [r3, #2]
 8005f58:	89fb      	ldrh	r3, [r7, #14]
 8005f5a:	4313      	orrs	r3, r2
 8005f5c:	81fb      	strh	r3, [r7, #14]
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	4a1d      	ldr	r2, [pc, #116]	@ (8005fd8 <TIM_TimeBaseInit+0xd0>)
 8005f62:	4293      	cmp	r3, r2
 8005f64:	d00c      	beq.n	8005f80 <TIM_TimeBaseInit+0x78>
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	4a1c      	ldr	r2, [pc, #112]	@ (8005fdc <TIM_TimeBaseInit+0xd4>)
 8005f6a:	4293      	cmp	r3, r2
 8005f6c:	d008      	beq.n	8005f80 <TIM_TimeBaseInit+0x78>
 8005f6e:	89fb      	ldrh	r3, [r7, #14]
 8005f70:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005f74:	81fb      	strh	r3, [r7, #14]
 8005f76:	683b      	ldr	r3, [r7, #0]
 8005f78:	891a      	ldrh	r2, [r3, #8]
 8005f7a:	89fb      	ldrh	r3, [r7, #14]
 8005f7c:	4313      	orrs	r3, r2
 8005f7e:	81fb      	strh	r3, [r7, #14]
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	89fa      	ldrh	r2, [r7, #14]
 8005f84:	801a      	strh	r2, [r3, #0]
 8005f86:	683b      	ldr	r3, [r7, #0]
 8005f88:	685a      	ldr	r2, [r3, #4]
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005f8e:	683b      	ldr	r3, [r7, #0]
 8005f90:	881a      	ldrh	r2, [r3, #0]
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	4a0a      	ldr	r2, [pc, #40]	@ (8005fc4 <TIM_TimeBaseInit+0xbc>)
 8005f9a:	4293      	cmp	r3, r2
 8005f9c:	d003      	beq.n	8005fa6 <TIM_TimeBaseInit+0x9e>
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	4a09      	ldr	r2, [pc, #36]	@ (8005fc8 <TIM_TimeBaseInit+0xc0>)
 8005fa2:	4293      	cmp	r3, r2
 8005fa4:	d104      	bne.n	8005fb0 <TIM_TimeBaseInit+0xa8>
 8005fa6:	683b      	ldr	r3, [r7, #0]
 8005fa8:	7a9b      	ldrb	r3, [r3, #10]
 8005faa:	b29a      	uxth	r2, r3
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	861a      	strh	r2, [r3, #48]	@ 0x30
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	2201      	movs	r2, #1
 8005fb4:	829a      	strh	r2, [r3, #20]
 8005fb6:	bf00      	nop
 8005fb8:	3714      	adds	r7, #20
 8005fba:	46bd      	mov	sp, r7
 8005fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fc0:	4770      	bx	lr
 8005fc2:	bf00      	nop
 8005fc4:	40010000 	.word	0x40010000
 8005fc8:	40010400 	.word	0x40010400
 8005fcc:	40000400 	.word	0x40000400
 8005fd0:	40000800 	.word	0x40000800
 8005fd4:	40000c00 	.word	0x40000c00
 8005fd8:	40001000 	.word	0x40001000
 8005fdc:	40001400 	.word	0x40001400

08005fe0 <TIM_Cmd>:
 8005fe0:	b480      	push	{r7}
 8005fe2:	b083      	sub	sp, #12
 8005fe4:	af00      	add	r7, sp, #0
 8005fe6:	6078      	str	r0, [r7, #4]
 8005fe8:	460b      	mov	r3, r1
 8005fea:	70fb      	strb	r3, [r7, #3]
 8005fec:	78fb      	ldrb	r3, [r7, #3]
 8005fee:	2b00      	cmp	r3, #0
 8005ff0:	d008      	beq.n	8006004 <TIM_Cmd+0x24>
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	881b      	ldrh	r3, [r3, #0]
 8005ff6:	b29b      	uxth	r3, r3
 8005ff8:	f043 0301 	orr.w	r3, r3, #1
 8005ffc:	b29a      	uxth	r2, r3
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	801a      	strh	r2, [r3, #0]
 8006002:	e007      	b.n	8006014 <TIM_Cmd+0x34>
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	881b      	ldrh	r3, [r3, #0]
 8006008:	b29b      	uxth	r3, r3
 800600a:	f023 0301 	bic.w	r3, r3, #1
 800600e:	b29a      	uxth	r2, r3
 8006010:	687b      	ldr	r3, [r7, #4]
 8006012:	801a      	strh	r2, [r3, #0]
 8006014:	bf00      	nop
 8006016:	370c      	adds	r7, #12
 8006018:	46bd      	mov	sp, r7
 800601a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601e:	4770      	bx	lr

08006020 <TIM_OC1Init>:
 8006020:	b480      	push	{r7}
 8006022:	b085      	sub	sp, #20
 8006024:	af00      	add	r7, sp, #0
 8006026:	6078      	str	r0, [r7, #4]
 8006028:	6039      	str	r1, [r7, #0]
 800602a:	2300      	movs	r3, #0
 800602c:	817b      	strh	r3, [r7, #10]
 800602e:	2300      	movs	r3, #0
 8006030:	81fb      	strh	r3, [r7, #14]
 8006032:	2300      	movs	r3, #0
 8006034:	81bb      	strh	r3, [r7, #12]
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	8c1b      	ldrh	r3, [r3, #32]
 800603a:	b29b      	uxth	r3, r3
 800603c:	f023 0301 	bic.w	r3, r3, #1
 8006040:	b29a      	uxth	r2, r3
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	841a      	strh	r2, [r3, #32]
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	8c1b      	ldrh	r3, [r3, #32]
 800604a:	81fb      	strh	r3, [r7, #14]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	889b      	ldrh	r3, [r3, #4]
 8006050:	81bb      	strh	r3, [r7, #12]
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	8b1b      	ldrh	r3, [r3, #24]
 8006056:	817b      	strh	r3, [r7, #10]
 8006058:	897b      	ldrh	r3, [r7, #10]
 800605a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800605e:	817b      	strh	r3, [r7, #10]
 8006060:	897b      	ldrh	r3, [r7, #10]
 8006062:	f023 0303 	bic.w	r3, r3, #3
 8006066:	817b      	strh	r3, [r7, #10]
 8006068:	683b      	ldr	r3, [r7, #0]
 800606a:	881a      	ldrh	r2, [r3, #0]
 800606c:	897b      	ldrh	r3, [r7, #10]
 800606e:	4313      	orrs	r3, r2
 8006070:	817b      	strh	r3, [r7, #10]
 8006072:	89fb      	ldrh	r3, [r7, #14]
 8006074:	f023 0302 	bic.w	r3, r3, #2
 8006078:	81fb      	strh	r3, [r7, #14]
 800607a:	683b      	ldr	r3, [r7, #0]
 800607c:	899a      	ldrh	r2, [r3, #12]
 800607e:	89fb      	ldrh	r3, [r7, #14]
 8006080:	4313      	orrs	r3, r2
 8006082:	81fb      	strh	r3, [r7, #14]
 8006084:	683b      	ldr	r3, [r7, #0]
 8006086:	885a      	ldrh	r2, [r3, #2]
 8006088:	89fb      	ldrh	r3, [r7, #14]
 800608a:	4313      	orrs	r3, r2
 800608c:	81fb      	strh	r3, [r7, #14]
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	4a1e      	ldr	r2, [pc, #120]	@ (800610c <TIM_OC1Init+0xec>)
 8006092:	4293      	cmp	r3, r2
 8006094:	d003      	beq.n	800609e <TIM_OC1Init+0x7e>
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	4a1d      	ldr	r2, [pc, #116]	@ (8006110 <TIM_OC1Init+0xf0>)
 800609a:	4293      	cmp	r3, r2
 800609c:	d123      	bne.n	80060e6 <TIM_OC1Init+0xc6>
 800609e:	89fb      	ldrh	r3, [r7, #14]
 80060a0:	f023 0308 	bic.w	r3, r3, #8
 80060a4:	81fb      	strh	r3, [r7, #14]
 80060a6:	683b      	ldr	r3, [r7, #0]
 80060a8:	89da      	ldrh	r2, [r3, #14]
 80060aa:	89fb      	ldrh	r3, [r7, #14]
 80060ac:	4313      	orrs	r3, r2
 80060ae:	81fb      	strh	r3, [r7, #14]
 80060b0:	89fb      	ldrh	r3, [r7, #14]
 80060b2:	f023 0304 	bic.w	r3, r3, #4
 80060b6:	81fb      	strh	r3, [r7, #14]
 80060b8:	683b      	ldr	r3, [r7, #0]
 80060ba:	889a      	ldrh	r2, [r3, #4]
 80060bc:	89fb      	ldrh	r3, [r7, #14]
 80060be:	4313      	orrs	r3, r2
 80060c0:	81fb      	strh	r3, [r7, #14]
 80060c2:	89bb      	ldrh	r3, [r7, #12]
 80060c4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80060c8:	81bb      	strh	r3, [r7, #12]
 80060ca:	89bb      	ldrh	r3, [r7, #12]
 80060cc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80060d0:	81bb      	strh	r3, [r7, #12]
 80060d2:	683b      	ldr	r3, [r7, #0]
 80060d4:	8a1a      	ldrh	r2, [r3, #16]
 80060d6:	89bb      	ldrh	r3, [r7, #12]
 80060d8:	4313      	orrs	r3, r2
 80060da:	81bb      	strh	r3, [r7, #12]
 80060dc:	683b      	ldr	r3, [r7, #0]
 80060de:	8a5a      	ldrh	r2, [r3, #18]
 80060e0:	89bb      	ldrh	r3, [r7, #12]
 80060e2:	4313      	orrs	r3, r2
 80060e4:	81bb      	strh	r3, [r7, #12]
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	89ba      	ldrh	r2, [r7, #12]
 80060ea:	809a      	strh	r2, [r3, #4]
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	897a      	ldrh	r2, [r7, #10]
 80060f0:	831a      	strh	r2, [r3, #24]
 80060f2:	683b      	ldr	r3, [r7, #0]
 80060f4:	689a      	ldr	r2, [r3, #8]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	635a      	str	r2, [r3, #52]	@ 0x34
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	89fa      	ldrh	r2, [r7, #14]
 80060fe:	841a      	strh	r2, [r3, #32]
 8006100:	bf00      	nop
 8006102:	3714      	adds	r7, #20
 8006104:	46bd      	mov	sp, r7
 8006106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800610a:	4770      	bx	lr
 800610c:	40010000 	.word	0x40010000
 8006110:	40010400 	.word	0x40010400

08006114 <TIM_OC2Init>:
 8006114:	b480      	push	{r7}
 8006116:	b085      	sub	sp, #20
 8006118:	af00      	add	r7, sp, #0
 800611a:	6078      	str	r0, [r7, #4]
 800611c:	6039      	str	r1, [r7, #0]
 800611e:	2300      	movs	r3, #0
 8006120:	817b      	strh	r3, [r7, #10]
 8006122:	2300      	movs	r3, #0
 8006124:	81fb      	strh	r3, [r7, #14]
 8006126:	2300      	movs	r3, #0
 8006128:	81bb      	strh	r3, [r7, #12]
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	8c1b      	ldrh	r3, [r3, #32]
 800612e:	b29b      	uxth	r3, r3
 8006130:	f023 0310 	bic.w	r3, r3, #16
 8006134:	b29a      	uxth	r2, r3
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	841a      	strh	r2, [r3, #32]
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	8c1b      	ldrh	r3, [r3, #32]
 800613e:	81fb      	strh	r3, [r7, #14]
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	889b      	ldrh	r3, [r3, #4]
 8006144:	81bb      	strh	r3, [r7, #12]
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	8b1b      	ldrh	r3, [r3, #24]
 800614a:	817b      	strh	r3, [r7, #10]
 800614c:	897b      	ldrh	r3, [r7, #10]
 800614e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006152:	817b      	strh	r3, [r7, #10]
 8006154:	897b      	ldrh	r3, [r7, #10]
 8006156:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800615a:	817b      	strh	r3, [r7, #10]
 800615c:	683b      	ldr	r3, [r7, #0]
 800615e:	881b      	ldrh	r3, [r3, #0]
 8006160:	021b      	lsls	r3, r3, #8
 8006162:	b29a      	uxth	r2, r3
 8006164:	897b      	ldrh	r3, [r7, #10]
 8006166:	4313      	orrs	r3, r2
 8006168:	817b      	strh	r3, [r7, #10]
 800616a:	89fb      	ldrh	r3, [r7, #14]
 800616c:	f023 0320 	bic.w	r3, r3, #32
 8006170:	81fb      	strh	r3, [r7, #14]
 8006172:	683b      	ldr	r3, [r7, #0]
 8006174:	899b      	ldrh	r3, [r3, #12]
 8006176:	011b      	lsls	r3, r3, #4
 8006178:	b29a      	uxth	r2, r3
 800617a:	89fb      	ldrh	r3, [r7, #14]
 800617c:	4313      	orrs	r3, r2
 800617e:	81fb      	strh	r3, [r7, #14]
 8006180:	683b      	ldr	r3, [r7, #0]
 8006182:	885b      	ldrh	r3, [r3, #2]
 8006184:	011b      	lsls	r3, r3, #4
 8006186:	b29a      	uxth	r2, r3
 8006188:	89fb      	ldrh	r3, [r7, #14]
 800618a:	4313      	orrs	r3, r2
 800618c:	81fb      	strh	r3, [r7, #14]
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	4a22      	ldr	r2, [pc, #136]	@ (800621c <TIM_OC2Init+0x108>)
 8006192:	4293      	cmp	r3, r2
 8006194:	d003      	beq.n	800619e <TIM_OC2Init+0x8a>
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	4a21      	ldr	r2, [pc, #132]	@ (8006220 <TIM_OC2Init+0x10c>)
 800619a:	4293      	cmp	r3, r2
 800619c:	d12b      	bne.n	80061f6 <TIM_OC2Init+0xe2>
 800619e:	89fb      	ldrh	r3, [r7, #14]
 80061a0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80061a4:	81fb      	strh	r3, [r7, #14]
 80061a6:	683b      	ldr	r3, [r7, #0]
 80061a8:	89db      	ldrh	r3, [r3, #14]
 80061aa:	011b      	lsls	r3, r3, #4
 80061ac:	b29a      	uxth	r2, r3
 80061ae:	89fb      	ldrh	r3, [r7, #14]
 80061b0:	4313      	orrs	r3, r2
 80061b2:	81fb      	strh	r3, [r7, #14]
 80061b4:	89fb      	ldrh	r3, [r7, #14]
 80061b6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80061ba:	81fb      	strh	r3, [r7, #14]
 80061bc:	683b      	ldr	r3, [r7, #0]
 80061be:	889b      	ldrh	r3, [r3, #4]
 80061c0:	011b      	lsls	r3, r3, #4
 80061c2:	b29a      	uxth	r2, r3
 80061c4:	89fb      	ldrh	r3, [r7, #14]
 80061c6:	4313      	orrs	r3, r2
 80061c8:	81fb      	strh	r3, [r7, #14]
 80061ca:	89bb      	ldrh	r3, [r7, #12]
 80061cc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80061d0:	81bb      	strh	r3, [r7, #12]
 80061d2:	89bb      	ldrh	r3, [r7, #12]
 80061d4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80061d8:	81bb      	strh	r3, [r7, #12]
 80061da:	683b      	ldr	r3, [r7, #0]
 80061dc:	8a1b      	ldrh	r3, [r3, #16]
 80061de:	009b      	lsls	r3, r3, #2
 80061e0:	b29a      	uxth	r2, r3
 80061e2:	89bb      	ldrh	r3, [r7, #12]
 80061e4:	4313      	orrs	r3, r2
 80061e6:	81bb      	strh	r3, [r7, #12]
 80061e8:	683b      	ldr	r3, [r7, #0]
 80061ea:	8a5b      	ldrh	r3, [r3, #18]
 80061ec:	009b      	lsls	r3, r3, #2
 80061ee:	b29a      	uxth	r2, r3
 80061f0:	89bb      	ldrh	r3, [r7, #12]
 80061f2:	4313      	orrs	r3, r2
 80061f4:	81bb      	strh	r3, [r7, #12]
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	89ba      	ldrh	r2, [r7, #12]
 80061fa:	809a      	strh	r2, [r3, #4]
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	897a      	ldrh	r2, [r7, #10]
 8006200:	831a      	strh	r2, [r3, #24]
 8006202:	683b      	ldr	r3, [r7, #0]
 8006204:	689a      	ldr	r2, [r3, #8]
 8006206:	687b      	ldr	r3, [r7, #4]
 8006208:	639a      	str	r2, [r3, #56]	@ 0x38
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	89fa      	ldrh	r2, [r7, #14]
 800620e:	841a      	strh	r2, [r3, #32]
 8006210:	bf00      	nop
 8006212:	3714      	adds	r7, #20
 8006214:	46bd      	mov	sp, r7
 8006216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800621a:	4770      	bx	lr
 800621c:	40010000 	.word	0x40010000
 8006220:	40010400 	.word	0x40010400

08006224 <TIM_OC3Init>:
 8006224:	b480      	push	{r7}
 8006226:	b085      	sub	sp, #20
 8006228:	af00      	add	r7, sp, #0
 800622a:	6078      	str	r0, [r7, #4]
 800622c:	6039      	str	r1, [r7, #0]
 800622e:	2300      	movs	r3, #0
 8006230:	817b      	strh	r3, [r7, #10]
 8006232:	2300      	movs	r3, #0
 8006234:	81fb      	strh	r3, [r7, #14]
 8006236:	2300      	movs	r3, #0
 8006238:	81bb      	strh	r3, [r7, #12]
 800623a:	687b      	ldr	r3, [r7, #4]
 800623c:	8c1b      	ldrh	r3, [r3, #32]
 800623e:	b29b      	uxth	r3, r3
 8006240:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006244:	b29a      	uxth	r2, r3
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	841a      	strh	r2, [r3, #32]
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	8c1b      	ldrh	r3, [r3, #32]
 800624e:	81fb      	strh	r3, [r7, #14]
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	889b      	ldrh	r3, [r3, #4]
 8006254:	81bb      	strh	r3, [r7, #12]
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	8b9b      	ldrh	r3, [r3, #28]
 800625a:	817b      	strh	r3, [r7, #10]
 800625c:	897b      	ldrh	r3, [r7, #10]
 800625e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006262:	817b      	strh	r3, [r7, #10]
 8006264:	897b      	ldrh	r3, [r7, #10]
 8006266:	f023 0303 	bic.w	r3, r3, #3
 800626a:	817b      	strh	r3, [r7, #10]
 800626c:	683b      	ldr	r3, [r7, #0]
 800626e:	881a      	ldrh	r2, [r3, #0]
 8006270:	897b      	ldrh	r3, [r7, #10]
 8006272:	4313      	orrs	r3, r2
 8006274:	817b      	strh	r3, [r7, #10]
 8006276:	89fb      	ldrh	r3, [r7, #14]
 8006278:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800627c:	81fb      	strh	r3, [r7, #14]
 800627e:	683b      	ldr	r3, [r7, #0]
 8006280:	899b      	ldrh	r3, [r3, #12]
 8006282:	021b      	lsls	r3, r3, #8
 8006284:	b29a      	uxth	r2, r3
 8006286:	89fb      	ldrh	r3, [r7, #14]
 8006288:	4313      	orrs	r3, r2
 800628a:	81fb      	strh	r3, [r7, #14]
 800628c:	683b      	ldr	r3, [r7, #0]
 800628e:	885b      	ldrh	r3, [r3, #2]
 8006290:	021b      	lsls	r3, r3, #8
 8006292:	b29a      	uxth	r2, r3
 8006294:	89fb      	ldrh	r3, [r7, #14]
 8006296:	4313      	orrs	r3, r2
 8006298:	81fb      	strh	r3, [r7, #14]
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	4a22      	ldr	r2, [pc, #136]	@ (8006328 <TIM_OC3Init+0x104>)
 800629e:	4293      	cmp	r3, r2
 80062a0:	d003      	beq.n	80062aa <TIM_OC3Init+0x86>
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	4a21      	ldr	r2, [pc, #132]	@ (800632c <TIM_OC3Init+0x108>)
 80062a6:	4293      	cmp	r3, r2
 80062a8:	d12b      	bne.n	8006302 <TIM_OC3Init+0xde>
 80062aa:	89fb      	ldrh	r3, [r7, #14]
 80062ac:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80062b0:	81fb      	strh	r3, [r7, #14]
 80062b2:	683b      	ldr	r3, [r7, #0]
 80062b4:	89db      	ldrh	r3, [r3, #14]
 80062b6:	021b      	lsls	r3, r3, #8
 80062b8:	b29a      	uxth	r2, r3
 80062ba:	89fb      	ldrh	r3, [r7, #14]
 80062bc:	4313      	orrs	r3, r2
 80062be:	81fb      	strh	r3, [r7, #14]
 80062c0:	89fb      	ldrh	r3, [r7, #14]
 80062c2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80062c6:	81fb      	strh	r3, [r7, #14]
 80062c8:	683b      	ldr	r3, [r7, #0]
 80062ca:	889b      	ldrh	r3, [r3, #4]
 80062cc:	021b      	lsls	r3, r3, #8
 80062ce:	b29a      	uxth	r2, r3
 80062d0:	89fb      	ldrh	r3, [r7, #14]
 80062d2:	4313      	orrs	r3, r2
 80062d4:	81fb      	strh	r3, [r7, #14]
 80062d6:	89bb      	ldrh	r3, [r7, #12]
 80062d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80062dc:	81bb      	strh	r3, [r7, #12]
 80062de:	89bb      	ldrh	r3, [r7, #12]
 80062e0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80062e4:	81bb      	strh	r3, [r7, #12]
 80062e6:	683b      	ldr	r3, [r7, #0]
 80062e8:	8a1b      	ldrh	r3, [r3, #16]
 80062ea:	011b      	lsls	r3, r3, #4
 80062ec:	b29a      	uxth	r2, r3
 80062ee:	89bb      	ldrh	r3, [r7, #12]
 80062f0:	4313      	orrs	r3, r2
 80062f2:	81bb      	strh	r3, [r7, #12]
 80062f4:	683b      	ldr	r3, [r7, #0]
 80062f6:	8a5b      	ldrh	r3, [r3, #18]
 80062f8:	011b      	lsls	r3, r3, #4
 80062fa:	b29a      	uxth	r2, r3
 80062fc:	89bb      	ldrh	r3, [r7, #12]
 80062fe:	4313      	orrs	r3, r2
 8006300:	81bb      	strh	r3, [r7, #12]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	89ba      	ldrh	r2, [r7, #12]
 8006306:	809a      	strh	r2, [r3, #4]
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	897a      	ldrh	r2, [r7, #10]
 800630c:	839a      	strh	r2, [r3, #28]
 800630e:	683b      	ldr	r3, [r7, #0]
 8006310:	689a      	ldr	r2, [r3, #8]
 8006312:	687b      	ldr	r3, [r7, #4]
 8006314:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	89fa      	ldrh	r2, [r7, #14]
 800631a:	841a      	strh	r2, [r3, #32]
 800631c:	bf00      	nop
 800631e:	3714      	adds	r7, #20
 8006320:	46bd      	mov	sp, r7
 8006322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006326:	4770      	bx	lr
 8006328:	40010000 	.word	0x40010000
 800632c:	40010400 	.word	0x40010400

08006330 <TIM_OC4Init>:
 8006330:	b480      	push	{r7}
 8006332:	b085      	sub	sp, #20
 8006334:	af00      	add	r7, sp, #0
 8006336:	6078      	str	r0, [r7, #4]
 8006338:	6039      	str	r1, [r7, #0]
 800633a:	2300      	movs	r3, #0
 800633c:	81bb      	strh	r3, [r7, #12]
 800633e:	2300      	movs	r3, #0
 8006340:	817b      	strh	r3, [r7, #10]
 8006342:	2300      	movs	r3, #0
 8006344:	81fb      	strh	r3, [r7, #14]
 8006346:	687b      	ldr	r3, [r7, #4]
 8006348:	8c1b      	ldrh	r3, [r3, #32]
 800634a:	b29b      	uxth	r3, r3
 800634c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006350:	b29a      	uxth	r2, r3
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	841a      	strh	r2, [r3, #32]
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	8c1b      	ldrh	r3, [r3, #32]
 800635a:	817b      	strh	r3, [r7, #10]
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	889b      	ldrh	r3, [r3, #4]
 8006360:	81fb      	strh	r3, [r7, #14]
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	8b9b      	ldrh	r3, [r3, #28]
 8006366:	81bb      	strh	r3, [r7, #12]
 8006368:	89bb      	ldrh	r3, [r7, #12]
 800636a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800636e:	81bb      	strh	r3, [r7, #12]
 8006370:	89bb      	ldrh	r3, [r7, #12]
 8006372:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006376:	81bb      	strh	r3, [r7, #12]
 8006378:	683b      	ldr	r3, [r7, #0]
 800637a:	881b      	ldrh	r3, [r3, #0]
 800637c:	021b      	lsls	r3, r3, #8
 800637e:	b29a      	uxth	r2, r3
 8006380:	89bb      	ldrh	r3, [r7, #12]
 8006382:	4313      	orrs	r3, r2
 8006384:	81bb      	strh	r3, [r7, #12]
 8006386:	897b      	ldrh	r3, [r7, #10]
 8006388:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800638c:	817b      	strh	r3, [r7, #10]
 800638e:	683b      	ldr	r3, [r7, #0]
 8006390:	899b      	ldrh	r3, [r3, #12]
 8006392:	031b      	lsls	r3, r3, #12
 8006394:	b29a      	uxth	r2, r3
 8006396:	897b      	ldrh	r3, [r7, #10]
 8006398:	4313      	orrs	r3, r2
 800639a:	817b      	strh	r3, [r7, #10]
 800639c:	683b      	ldr	r3, [r7, #0]
 800639e:	885b      	ldrh	r3, [r3, #2]
 80063a0:	031b      	lsls	r3, r3, #12
 80063a2:	b29a      	uxth	r2, r3
 80063a4:	897b      	ldrh	r3, [r7, #10]
 80063a6:	4313      	orrs	r3, r2
 80063a8:	817b      	strh	r3, [r7, #10]
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	4a12      	ldr	r2, [pc, #72]	@ (80063f8 <TIM_OC4Init+0xc8>)
 80063ae:	4293      	cmp	r3, r2
 80063b0:	d003      	beq.n	80063ba <TIM_OC4Init+0x8a>
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	4a11      	ldr	r2, [pc, #68]	@ (80063fc <TIM_OC4Init+0xcc>)
 80063b6:	4293      	cmp	r3, r2
 80063b8:	d10a      	bne.n	80063d0 <TIM_OC4Init+0xa0>
 80063ba:	89fb      	ldrh	r3, [r7, #14]
 80063bc:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80063c0:	81fb      	strh	r3, [r7, #14]
 80063c2:	683b      	ldr	r3, [r7, #0]
 80063c4:	8a1b      	ldrh	r3, [r3, #16]
 80063c6:	019b      	lsls	r3, r3, #6
 80063c8:	b29a      	uxth	r2, r3
 80063ca:	89fb      	ldrh	r3, [r7, #14]
 80063cc:	4313      	orrs	r3, r2
 80063ce:	81fb      	strh	r3, [r7, #14]
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	89fa      	ldrh	r2, [r7, #14]
 80063d4:	809a      	strh	r2, [r3, #4]
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	89ba      	ldrh	r2, [r7, #12]
 80063da:	839a      	strh	r2, [r3, #28]
 80063dc:	683b      	ldr	r3, [r7, #0]
 80063de:	689a      	ldr	r2, [r3, #8]
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	897a      	ldrh	r2, [r7, #10]
 80063e8:	841a      	strh	r2, [r3, #32]
 80063ea:	bf00      	nop
 80063ec:	3714      	adds	r7, #20
 80063ee:	46bd      	mov	sp, r7
 80063f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063f4:	4770      	bx	lr
 80063f6:	bf00      	nop
 80063f8:	40010000 	.word	0x40010000
 80063fc:	40010400 	.word	0x40010400

08006400 <TIM_SetCompare1>:
 8006400:	b480      	push	{r7}
 8006402:	b083      	sub	sp, #12
 8006404:	af00      	add	r7, sp, #0
 8006406:	6078      	str	r0, [r7, #4]
 8006408:	6039      	str	r1, [r7, #0]
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	683a      	ldr	r2, [r7, #0]
 800640e:	635a      	str	r2, [r3, #52]	@ 0x34
 8006410:	bf00      	nop
 8006412:	370c      	adds	r7, #12
 8006414:	46bd      	mov	sp, r7
 8006416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800641a:	4770      	bx	lr

0800641c <TIM_SetCompare2>:
 800641c:	b480      	push	{r7}
 800641e:	b083      	sub	sp, #12
 8006420:	af00      	add	r7, sp, #0
 8006422:	6078      	str	r0, [r7, #4]
 8006424:	6039      	str	r1, [r7, #0]
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	683a      	ldr	r2, [r7, #0]
 800642a:	639a      	str	r2, [r3, #56]	@ 0x38
 800642c:	bf00      	nop
 800642e:	370c      	adds	r7, #12
 8006430:	46bd      	mov	sp, r7
 8006432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006436:	4770      	bx	lr

08006438 <TIM_SetCompare3>:
 8006438:	b480      	push	{r7}
 800643a:	b083      	sub	sp, #12
 800643c:	af00      	add	r7, sp, #0
 800643e:	6078      	str	r0, [r7, #4]
 8006440:	6039      	str	r1, [r7, #0]
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	683a      	ldr	r2, [r7, #0]
 8006446:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006448:	bf00      	nop
 800644a:	370c      	adds	r7, #12
 800644c:	46bd      	mov	sp, r7
 800644e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006452:	4770      	bx	lr

08006454 <TIM_SetCompare4>:
 8006454:	b480      	push	{r7}
 8006456:	b083      	sub	sp, #12
 8006458:	af00      	add	r7, sp, #0
 800645a:	6078      	str	r0, [r7, #4]
 800645c:	6039      	str	r1, [r7, #0]
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	683a      	ldr	r2, [r7, #0]
 8006462:	641a      	str	r2, [r3, #64]	@ 0x40
 8006464:	bf00      	nop
 8006466:	370c      	adds	r7, #12
 8006468:	46bd      	mov	sp, r7
 800646a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800646e:	4770      	bx	lr

08006470 <TIM_CtrlPWMOutputs>:
 8006470:	b480      	push	{r7}
 8006472:	b083      	sub	sp, #12
 8006474:	af00      	add	r7, sp, #0
 8006476:	6078      	str	r0, [r7, #4]
 8006478:	460b      	mov	r3, r1
 800647a:	70fb      	strb	r3, [r7, #3]
 800647c:	78fb      	ldrb	r3, [r7, #3]
 800647e:	2b00      	cmp	r3, #0
 8006480:	d00c      	beq.n	800649c <TIM_CtrlPWMOutputs+0x2c>
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8006488:	b29b      	uxth	r3, r3
 800648a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800648e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8006492:	b29a      	uxth	r2, r3
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 800649a:	e009      	b.n	80064b0 <TIM_CtrlPWMOutputs+0x40>
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 80064a2:	b29b      	uxth	r3, r3
 80064a4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80064a8:	b29a      	uxth	r2, r3
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 80064b0:	bf00      	nop
 80064b2:	370c      	adds	r7, #12
 80064b4:	46bd      	mov	sp, r7
 80064b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ba:	4770      	bx	lr

080064bc <Button_Init>:
 80064bc:	b580      	push	{r7, lr}
 80064be:	b084      	sub	sp, #16
 80064c0:	af02      	add	r7, sp, #8
 80064c2:	f000 f9af 	bl	8006824 <BTNGPIO_Init>
 80064c6:	2300      	movs	r3, #0
 80064c8:	71fb      	strb	r3, [r7, #7]
 80064ca:	e035      	b.n	8006538 <Button_Init+0x7c>
 80064cc:	79fa      	ldrb	r2, [r7, #7]
 80064ce:	4924      	ldr	r1, [pc, #144]	@ (8006560 <Button_Init+0xa4>)
 80064d0:	4613      	mov	r3, r2
 80064d2:	009b      	lsls	r3, r3, #2
 80064d4:	4413      	add	r3, r2
 80064d6:	009b      	lsls	r3, r3, #2
 80064d8:	440b      	add	r3, r1
 80064da:	330a      	adds	r3, #10
 80064dc:	79fa      	ldrb	r2, [r7, #7]
 80064de:	701a      	strb	r2, [r3, #0]
 80064e0:	79fa      	ldrb	r2, [r7, #7]
 80064e2:	491f      	ldr	r1, [pc, #124]	@ (8006560 <Button_Init+0xa4>)
 80064e4:	4613      	mov	r3, r2
 80064e6:	009b      	lsls	r3, r3, #2
 80064e8:	4413      	add	r3, r2
 80064ea:	009b      	lsls	r3, r3, #2
 80064ec:	440b      	add	r3, r1
 80064ee:	3310      	adds	r3, #16
 80064f0:	4a1c      	ldr	r2, [pc, #112]	@ (8006564 <Button_Init+0xa8>)
 80064f2:	601a      	str	r2, [r3, #0]
 80064f4:	79fb      	ldrb	r3, [r7, #7]
 80064f6:	4a1c      	ldr	r2, [pc, #112]	@ (8006568 <Button_Init+0xac>)
 80064f8:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80064fc:	79fb      	ldrb	r3, [r7, #7]
 80064fe:	4a1a      	ldr	r2, [pc, #104]	@ (8006568 <Button_Init+0xac>)
 8006500:	00db      	lsls	r3, r3, #3
 8006502:	4413      	add	r3, r2
 8006504:	889b      	ldrh	r3, [r3, #4]
 8006506:	4619      	mov	r1, r3
 8006508:	f7fb fa56 	bl	80019b8 <GPIO_ReadInputDataBit>
 800650c:	4603      	mov	r3, r0
 800650e:	4619      	mov	r1, r3
 8006510:	79fb      	ldrb	r3, [r7, #7]
 8006512:	4a15      	ldr	r2, [pc, #84]	@ (8006568 <Button_Init+0xac>)
 8006514:	00db      	lsls	r3, r3, #3
 8006516:	4413      	add	r3, r2
 8006518:	799b      	ldrb	r3, [r3, #6]
 800651a:	4299      	cmp	r1, r3
 800651c:	d109      	bne.n	8006532 <Button_Init+0x76>
 800651e:	79fa      	ldrb	r2, [r7, #7]
 8006520:	490f      	ldr	r1, [pc, #60]	@ (8006560 <Button_Init+0xa4>)
 8006522:	4613      	mov	r3, r2
 8006524:	009b      	lsls	r3, r3, #2
 8006526:	4413      	add	r3, r2
 8006528:	009b      	lsls	r3, r3, #2
 800652a:	440b      	add	r3, r1
 800652c:	3309      	adds	r3, #9
 800652e:	2201      	movs	r2, #1
 8006530:	701a      	strb	r2, [r3, #0]
 8006532:	79fb      	ldrb	r3, [r7, #7]
 8006534:	3301      	adds	r3, #1
 8006536:	71fb      	strb	r3, [r7, #7]
 8006538:	79fb      	ldrb	r3, [r7, #7]
 800653a:	2b05      	cmp	r3, #5
 800653c:	d9c6      	bls.n	80064cc <Button_Init+0x10>
 800653e:	2300      	movs	r3, #0
 8006540:	9300      	str	r3, [sp, #0]
 8006542:	4b0a      	ldr	r3, [pc, #40]	@ (800656c <Button_Init+0xb0>)
 8006544:	22ff      	movs	r2, #255	@ 0xff
 8006546:	2105      	movs	r1, #5
 8006548:	4809      	ldr	r0, [pc, #36]	@ (8006570 <Button_Init+0xb4>)
 800654a:	f7fc fbf5 	bl	8002d38 <TimerStart>
 800654e:	4603      	mov	r3, r0
 8006550:	461a      	mov	r2, r3
 8006552:	4b08      	ldr	r3, [pc, #32]	@ (8006574 <Button_Init+0xb8>)
 8006554:	701a      	strb	r2, [r3, #0]
 8006556:	bf00      	nop
 8006558:	3708      	adds	r7, #8
 800655a:	46bd      	mov	sp, r7
 800655c:	bd80      	pop	{r7, pc}
 800655e:	bf00      	nop
 8006560:	200015fc 	.word	0x200015fc
 8006564:	080065dd 	.word	0x080065dd
 8006568:	20000038 	.word	0x20000038
 800656c:	080067d9 	.word	0x080067d9
 8006570:	08007da4 	.word	0x08007da4
 8006574:	20000068 	.word	0x20000068

08006578 <Button_SetMode>:
 8006578:	b480      	push	{r7}
 800657a:	b083      	sub	sp, #12
 800657c:	af00      	add	r7, sp, #0
 800657e:	4603      	mov	r3, r0
 8006580:	460a      	mov	r2, r1
 8006582:	71fb      	strb	r3, [r7, #7]
 8006584:	4613      	mov	r3, r2
 8006586:	71bb      	strb	r3, [r7, #6]
 8006588:	79fb      	ldrb	r3, [r7, #7]
 800658a:	2b05      	cmp	r3, #5
 800658c:	d80a      	bhi.n	80065a4 <Button_SetMode+0x2c>
 800658e:	79fa      	ldrb	r2, [r7, #7]
 8006590:	4907      	ldr	r1, [pc, #28]	@ (80065b0 <Button_SetMode+0x38>)
 8006592:	4613      	mov	r3, r2
 8006594:	009b      	lsls	r3, r3, #2
 8006596:	4413      	add	r3, r2
 8006598:	009b      	lsls	r3, r3, #2
 800659a:	440b      	add	r3, r1
 800659c:	330b      	adds	r3, #11
 800659e:	79ba      	ldrb	r2, [r7, #6]
 80065a0:	701a      	strb	r2, [r3, #0]
 80065a2:	e000      	b.n	80065a6 <Button_SetMode+0x2e>
 80065a4:	bf00      	nop
 80065a6:	370c      	adds	r7, #12
 80065a8:	46bd      	mov	sp, r7
 80065aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ae:	4770      	bx	lr
 80065b0:	200015fc 	.word	0x200015fc

080065b4 <Button_RegisterEventCallback>:
 80065b4:	b480      	push	{r7}
 80065b6:	b083      	sub	sp, #12
 80065b8:	af00      	add	r7, sp, #0
 80065ba:	4603      	mov	r3, r0
 80065bc:	6039      	str	r1, [r7, #0]
 80065be:	71fb      	strb	r3, [r7, #7]
 80065c0:	79fb      	ldrb	r3, [r7, #7]
 80065c2:	4905      	ldr	r1, [pc, #20]	@ (80065d8 <Button_RegisterEventCallback+0x24>)
 80065c4:	683a      	ldr	r2, [r7, #0]
 80065c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80065ca:	bf00      	nop
 80065cc:	370c      	adds	r7, #12
 80065ce:	46bd      	mov	sp, r7
 80065d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065d4:	4770      	bx	lr
 80065d6:	bf00      	nop
 80065d8:	20001674 	.word	0x20001674

080065dc <ButtonScanTypeEdge>:
 80065dc:	b580      	push	{r7, lr}
 80065de:	b084      	sub	sp, #16
 80065e0:	af00      	add	r7, sp, #0
 80065e2:	6078      	str	r0, [r7, #4]
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	60fb      	str	r3, [r7, #12]
 80065e8:	68fb      	ldr	r3, [r7, #12]
 80065ea:	7a9b      	ldrb	r3, [r3, #10]
 80065ec:	72fb      	strb	r3, [r7, #11]
 80065ee:	7afb      	ldrb	r3, [r7, #11]
 80065f0:	4a77      	ldr	r2, [pc, #476]	@ (80067d0 <ButtonScanTypeEdge+0x1f4>)
 80065f2:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 80065f6:	7afb      	ldrb	r3, [r7, #11]
 80065f8:	4a75      	ldr	r2, [pc, #468]	@ (80067d0 <ButtonScanTypeEdge+0x1f4>)
 80065fa:	00db      	lsls	r3, r3, #3
 80065fc:	4413      	add	r3, r2
 80065fe:	889b      	ldrh	r3, [r3, #4]
 8006600:	4619      	mov	r1, r3
 8006602:	f7fb f9d9 	bl	80019b8 <GPIO_ReadInputDataBit>
 8006606:	4603      	mov	r3, r0
 8006608:	4619      	mov	r1, r3
 800660a:	7afb      	ldrb	r3, [r7, #11]
 800660c:	4a70      	ldr	r2, [pc, #448]	@ (80067d0 <ButtonScanTypeEdge+0x1f4>)
 800660e:	00db      	lsls	r3, r3, #3
 8006610:	4413      	add	r3, r2
 8006612:	799b      	ldrb	r3, [r3, #6]
 8006614:	4299      	cmp	r1, r3
 8006616:	d10a      	bne.n	800662e <ButtonScanTypeEdge+0x52>
 8006618:	68fb      	ldr	r3, [r7, #12]
 800661a:	7b5b      	ldrb	r3, [r3, #13]
 800661c:	2bff      	cmp	r3, #255	@ 0xff
 800661e:	d013      	beq.n	8006648 <ButtonScanTypeEdge+0x6c>
 8006620:	68fb      	ldr	r3, [r7, #12]
 8006622:	7b5b      	ldrb	r3, [r3, #13]
 8006624:	3301      	adds	r3, #1
 8006626:	b2da      	uxtb	r2, r3
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	735a      	strb	r2, [r3, #13]
 800662c:	e00c      	b.n	8006648 <ButtonScanTypeEdge+0x6c>
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	7b1b      	ldrb	r3, [r3, #12]
 8006632:	2bff      	cmp	r3, #255	@ 0xff
 8006634:	d005      	beq.n	8006642 <ButtonScanTypeEdge+0x66>
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	7b1b      	ldrb	r3, [r3, #12]
 800663a:	3301      	adds	r3, #1
 800663c:	b2da      	uxtb	r2, r3
 800663e:	68fb      	ldr	r3, [r7, #12]
 8006640:	731a      	strb	r2, [r3, #12]
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	2200      	movs	r2, #0
 8006646:	735a      	strb	r2, [r3, #13]
 8006648:	68fb      	ldr	r3, [r7, #12]
 800664a:	7b1b      	ldrb	r3, [r3, #12]
 800664c:	2b09      	cmp	r3, #9
 800664e:	d958      	bls.n	8006702 <ButtonScanTypeEdge+0x126>
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	7a5b      	ldrb	r3, [r3, #9]
 8006654:	2b01      	cmp	r3, #1
 8006656:	d118      	bne.n	800668a <ButtonScanTypeEdge+0xae>
 8006658:	68fb      	ldr	r3, [r7, #12]
 800665a:	2200      	movs	r2, #0
 800665c:	725a      	strb	r2, [r3, #9]
 800665e:	4b5d      	ldr	r3, [pc, #372]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	2b00      	cmp	r3, #0
 8006664:	d00b      	beq.n	800667e <ButtonScanTypeEdge+0xa2>
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	7adb      	ldrb	r3, [r3, #11]
 800666a:	f003 0302 	and.w	r3, r3, #2
 800666e:	2b00      	cmp	r3, #0
 8006670:	d005      	beq.n	800667e <ButtonScanTypeEdge+0xa2>
 8006672:	4b58      	ldr	r3, [pc, #352]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	7afa      	ldrb	r2, [r7, #11]
 8006678:	2101      	movs	r1, #1
 800667a:	4610      	mov	r0, r2
 800667c:	4798      	blx	r3
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	7b1b      	ldrb	r3, [r3, #12]
 8006682:	461a      	mov	r2, r3
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	601a      	str	r2, [r3, #0]
 8006688:	e03b      	b.n	8006702 <ButtonScanTypeEdge+0x126>
 800668a:	68fb      	ldr	r3, [r7, #12]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	1c5a      	adds	r2, r3, #1
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	601a      	str	r2, [r3, #0]
 8006694:	68fb      	ldr	r3, [r7, #12]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	2b4f      	cmp	r3, #79	@ 0x4f
 800669a:	d932      	bls.n	8006702 <ButtonScanTypeEdge+0x126>
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	685b      	ldr	r3, [r3, #4]
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d012      	beq.n	80066ca <ButtonScanTypeEdge+0xee>
 80066a4:	4b4b      	ldr	r3, [pc, #300]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80066a6:	68db      	ldr	r3, [r3, #12]
 80066a8:	2b00      	cmp	r3, #0
 80066aa:	d024      	beq.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	7adb      	ldrb	r3, [r3, #11]
 80066b0:	f003 0301 	and.w	r3, r3, #1
 80066b4:	2b00      	cmp	r3, #0
 80066b6:	d01e      	beq.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066b8:	4b46      	ldr	r3, [pc, #280]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80066ba:	68db      	ldr	r3, [r3, #12]
 80066bc:	68fa      	ldr	r2, [r7, #12]
 80066be:	6852      	ldr	r2, [r2, #4]
 80066c0:	b291      	uxth	r1, r2
 80066c2:	7afa      	ldrb	r2, [r7, #11]
 80066c4:	4610      	mov	r0, r2
 80066c6:	4798      	blx	r3
 80066c8:	e015      	b.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066ca:	4b42      	ldr	r3, [pc, #264]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80066cc:	685b      	ldr	r3, [r3, #4]
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d011      	beq.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	7adb      	ldrb	r3, [r3, #11]
 80066d6:	f003 0301 	and.w	r3, r3, #1
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d00b      	beq.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	7a1b      	ldrb	r3, [r3, #8]
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d007      	beq.n	80066f6 <ButtonScanTypeEdge+0x11a>
 80066e6:	4b3b      	ldr	r3, [pc, #236]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80066e8:	685b      	ldr	r3, [r3, #4]
 80066ea:	68fa      	ldr	r2, [r7, #12]
 80066ec:	7a12      	ldrb	r2, [r2, #8]
 80066ee:	b291      	uxth	r1, r2
 80066f0:	7afa      	ldrb	r2, [r7, #11]
 80066f2:	4610      	mov	r0, r2
 80066f4:	4798      	blx	r3
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	2200      	movs	r2, #0
 80066fa:	605a      	str	r2, [r3, #4]
 80066fc:	68fb      	ldr	r3, [r7, #12]
 80066fe:	2200      	movs	r2, #0
 8006700:	721a      	strb	r2, [r3, #8]
 8006702:	68fb      	ldr	r3, [r7, #12]
 8006704:	7b5b      	ldrb	r3, [r3, #13]
 8006706:	2b09      	cmp	r3, #9
 8006708:	d95e      	bls.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	2200      	movs	r2, #0
 800670e:	731a      	strb	r2, [r3, #12]
 8006710:	68fb      	ldr	r3, [r7, #12]
 8006712:	7a5b      	ldrb	r3, [r3, #9]
 8006714:	2b00      	cmp	r3, #0
 8006716:	d11e      	bne.n	8006756 <ButtonScanTypeEdge+0x17a>
 8006718:	68fb      	ldr	r3, [r7, #12]
 800671a:	2201      	movs	r2, #1
 800671c:	725a      	strb	r2, [r3, #9]
 800671e:	4b2d      	ldr	r3, [pc, #180]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	2b00      	cmp	r3, #0
 8006724:	d00b      	beq.n	800673e <ButtonScanTypeEdge+0x162>
 8006726:	68fb      	ldr	r3, [r7, #12]
 8006728:	7adb      	ldrb	r3, [r3, #11]
 800672a:	f003 0302 	and.w	r3, r3, #2
 800672e:	2b00      	cmp	r3, #0
 8006730:	d005      	beq.n	800673e <ButtonScanTypeEdge+0x162>
 8006732:	4b28      	ldr	r3, [pc, #160]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	7afa      	ldrb	r2, [r7, #11]
 8006738:	2100      	movs	r1, #0
 800673a:	4610      	mov	r0, r2
 800673c:	4798      	blx	r3
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	7b5b      	ldrb	r3, [r3, #13]
 8006742:	461a      	mov	r2, r3
 8006744:	68fb      	ldr	r3, [r7, #12]
 8006746:	601a      	str	r2, [r3, #0]
 8006748:	68fb      	ldr	r3, [r7, #12]
 800674a:	7a1b      	ldrb	r3, [r3, #8]
 800674c:	3301      	adds	r3, #1
 800674e:	b2da      	uxtb	r2, r3
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	721a      	strb	r2, [r3, #8]
 8006754:	e038      	b.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	1c5a      	adds	r2, r3, #1
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	601a      	str	r2, [r3, #0]
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	2b77      	cmp	r3, #119	@ 0x77
 8006766:	d92f      	bls.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 8006768:	68fb      	ldr	r3, [r7, #12]
 800676a:	2200      	movs	r2, #0
 800676c:	721a      	strb	r2, [r3, #8]
 800676e:	68fb      	ldr	r3, [r7, #12]
 8006770:	681a      	ldr	r2, [r3, #0]
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	605a      	str	r2, [r3, #4]
 8006776:	68fb      	ldr	r3, [r7, #12]
 8006778:	685b      	ldr	r3, [r3, #4]
 800677a:	2b78      	cmp	r3, #120	@ 0x78
 800677c:	d012      	beq.n	80067a4 <ButtonScanTypeEdge+0x1c8>
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	685b      	ldr	r3, [r3, #4]
 8006782:	2bc8      	cmp	r3, #200	@ 0xc8
 8006784:	d00e      	beq.n	80067a4 <ButtonScanTypeEdge+0x1c8>
 8006786:	68fb      	ldr	r3, [r7, #12]
 8006788:	685b      	ldr	r3, [r3, #4]
 800678a:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 800678e:	d009      	beq.n	80067a4 <ButtonScanTypeEdge+0x1c8>
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	685b      	ldr	r3, [r3, #4]
 8006794:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8006798:	d004      	beq.n	80067a4 <ButtonScanTypeEdge+0x1c8>
 800679a:	68fb      	ldr	r3, [r7, #12]
 800679c:	685b      	ldr	r3, [r3, #4]
 800679e:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80067a2:	d111      	bne.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 80067a4:	4b0b      	ldr	r3, [pc, #44]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80067a6:	689b      	ldr	r3, [r3, #8]
 80067a8:	2b00      	cmp	r3, #0
 80067aa:	d00d      	beq.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 80067ac:	68fb      	ldr	r3, [r7, #12]
 80067ae:	7adb      	ldrb	r3, [r3, #11]
 80067b0:	f003 0301 	and.w	r3, r3, #1
 80067b4:	2b00      	cmp	r3, #0
 80067b6:	d007      	beq.n	80067c8 <ButtonScanTypeEdge+0x1ec>
 80067b8:	4b06      	ldr	r3, [pc, #24]	@ (80067d4 <ButtonScanTypeEdge+0x1f8>)
 80067ba:	689b      	ldr	r3, [r3, #8]
 80067bc:	68fa      	ldr	r2, [r7, #12]
 80067be:	6852      	ldr	r2, [r2, #4]
 80067c0:	b291      	uxth	r1, r2
 80067c2:	7afa      	ldrb	r2, [r7, #11]
 80067c4:	4610      	mov	r0, r2
 80067c6:	4798      	blx	r3
 80067c8:	bf00      	nop
 80067ca:	3710      	adds	r7, #16
 80067cc:	46bd      	mov	sp, r7
 80067ce:	bd80      	pop	{r7, pc}
 80067d0:	20000038 	.word	0x20000038
 80067d4:	20001674 	.word	0x20001674

080067d8 <ButtonScan>:
 80067d8:	b580      	push	{r7, lr}
 80067da:	b084      	sub	sp, #16
 80067dc:	af00      	add	r7, sp, #0
 80067de:	6078      	str	r0, [r7, #4]
 80067e0:	2300      	movs	r3, #0
 80067e2:	73fb      	strb	r3, [r7, #15]
 80067e4:	e014      	b.n	8006810 <ButtonScan+0x38>
 80067e6:	7bfa      	ldrb	r2, [r7, #15]
 80067e8:	490d      	ldr	r1, [pc, #52]	@ (8006820 <ButtonScan+0x48>)
 80067ea:	4613      	mov	r3, r2
 80067ec:	009b      	lsls	r3, r3, #2
 80067ee:	4413      	add	r3, r2
 80067f0:	009b      	lsls	r3, r3, #2
 80067f2:	440b      	add	r3, r1
 80067f4:	3310      	adds	r3, #16
 80067f6:	6819      	ldr	r1, [r3, #0]
 80067f8:	7bfa      	ldrb	r2, [r7, #15]
 80067fa:	4613      	mov	r3, r2
 80067fc:	009b      	lsls	r3, r3, #2
 80067fe:	4413      	add	r3, r2
 8006800:	009b      	lsls	r3, r3, #2
 8006802:	4a07      	ldr	r2, [pc, #28]	@ (8006820 <ButtonScan+0x48>)
 8006804:	4413      	add	r3, r2
 8006806:	4618      	mov	r0, r3
 8006808:	4788      	blx	r1
 800680a:	7bfb      	ldrb	r3, [r7, #15]
 800680c:	3301      	adds	r3, #1
 800680e:	73fb      	strb	r3, [r7, #15]
 8006810:	7bfb      	ldrb	r3, [r7, #15]
 8006812:	2b05      	cmp	r3, #5
 8006814:	d9e7      	bls.n	80067e6 <ButtonScan+0xe>
 8006816:	bf00      	nop
 8006818:	3710      	adds	r7, #16
 800681a:	46bd      	mov	sp, r7
 800681c:	bd80      	pop	{r7, pc}
 800681e:	bf00      	nop
 8006820:	200015fc 	.word	0x200015fc

08006824 <BTNGPIO_Init>:
 8006824:	b580      	push	{r7, lr}
 8006826:	b082      	sub	sp, #8
 8006828:	af00      	add	r7, sp, #0
 800682a:	2101      	movs	r1, #1
 800682c:	2001      	movs	r0, #1
 800682e:	f7fb fa05 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 8006832:	2101      	movs	r1, #1
 8006834:	2002      	movs	r0, #2
 8006836:	f7fb fa01 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 800683a:	2101      	movs	r1, #1
 800683c:	2004      	movs	r0, #4
 800683e:	f7fb f9fd 	bl	8001c3c <RCC_AHB1PeriphClockCmd>
 8006842:	2300      	movs	r3, #0
 8006844:	713b      	strb	r3, [r7, #4]
 8006846:	2303      	movs	r3, #3
 8006848:	717b      	strb	r3, [r7, #5]
 800684a:	2301      	movs	r3, #1
 800684c:	71fb      	strb	r3, [r7, #7]
 800684e:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8006852:	603b      	str	r3, [r7, #0]
 8006854:	463b      	mov	r3, r7
 8006856:	4619      	mov	r1, r3
 8006858:	480a      	ldr	r0, [pc, #40]	@ (8006884 <BTNGPIO_Init+0x60>)
 800685a:	f7fb f81f 	bl	800189c <GPIO_Init>
 800685e:	2339      	movs	r3, #57	@ 0x39
 8006860:	603b      	str	r3, [r7, #0]
 8006862:	463b      	mov	r3, r7
 8006864:	4619      	mov	r1, r3
 8006866:	4808      	ldr	r0, [pc, #32]	@ (8006888 <BTNGPIO_Init+0x64>)
 8006868:	f7fb f818 	bl	800189c <GPIO_Init>
 800686c:	2310      	movs	r3, #16
 800686e:	603b      	str	r3, [r7, #0]
 8006870:	463b      	mov	r3, r7
 8006872:	4619      	mov	r1, r3
 8006874:	4805      	ldr	r0, [pc, #20]	@ (800688c <BTNGPIO_Init+0x68>)
 8006876:	f7fb f811 	bl	800189c <GPIO_Init>
 800687a:	bf00      	nop
 800687c:	3708      	adds	r7, #8
 800687e:	46bd      	mov	sp, r7
 8006880:	bd80      	pop	{r7, pc}
 8006882:	bf00      	nop
 8006884:	40020800 	.word	0x40020800
 8006888:	40020400 	.word	0x40020400
 800688c:	40020000 	.word	0x40020000

08006890 <ucg_clip_is_x_visible>:
 8006890:	b480      	push	{r7}
 8006892:	b085      	sub	sp, #20
 8006894:	af00      	add	r7, sp, #0
 8006896:	6078      	str	r0, [r7, #4]
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800689c:	81fb      	strh	r3, [r7, #14]
 800689e:	89fa      	ldrh	r2, [r7, #14]
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 80068a6:	b29b      	uxth	r3, r3
 80068a8:	1ad3      	subs	r3, r2, r3
 80068aa:	b29b      	uxth	r3, r3
 80068ac:	81fb      	strh	r3, [r7, #14]
 80068ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	da01      	bge.n	80068ba <ucg_clip_is_x_visible+0x2a>
 80068b6:	2300      	movs	r3, #0
 80068b8:	e009      	b.n	80068ce <ucg_clip_is_x_visible+0x3e>
 80068ba:	687b      	ldr	r3, [r7, #4]
 80068bc:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 80068c0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80068c4:	429a      	cmp	r2, r3
 80068c6:	db01      	blt.n	80068cc <ucg_clip_is_x_visible+0x3c>
 80068c8:	2300      	movs	r3, #0
 80068ca:	e000      	b.n	80068ce <ucg_clip_is_x_visible+0x3e>
 80068cc:	2301      	movs	r3, #1
 80068ce:	4618      	mov	r0, r3
 80068d0:	3714      	adds	r7, #20
 80068d2:	46bd      	mov	sp, r7
 80068d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068d8:	4770      	bx	lr

080068da <ucg_clip_is_y_visible>:
 80068da:	b480      	push	{r7}
 80068dc:	b085      	sub	sp, #20
 80068de:	af00      	add	r7, sp, #0
 80068e0:	6078      	str	r0, [r7, #4]
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80068e6:	81fb      	strh	r3, [r7, #14]
 80068e8:	89fa      	ldrh	r2, [r7, #14]
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 80068f0:	b29b      	uxth	r3, r3
 80068f2:	1ad3      	subs	r3, r2, r3
 80068f4:	b29b      	uxth	r3, r3
 80068f6:	81fb      	strh	r3, [r7, #14]
 80068f8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80068fc:	2b00      	cmp	r3, #0
 80068fe:	da01      	bge.n	8006904 <ucg_clip_is_y_visible+0x2a>
 8006900:	2300      	movs	r3, #0
 8006902:	e009      	b.n	8006918 <ucg_clip_is_y_visible+0x3e>
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 800690a:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800690e:	429a      	cmp	r2, r3
 8006910:	db01      	blt.n	8006916 <ucg_clip_is_y_visible+0x3c>
 8006912:	2300      	movs	r3, #0
 8006914:	e000      	b.n	8006918 <ucg_clip_is_y_visible+0x3e>
 8006916:	2301      	movs	r3, #1
 8006918:	4618      	mov	r0, r3
 800691a:	3714      	adds	r7, #20
 800691c:	46bd      	mov	sp, r7
 800691e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006922:	4770      	bx	lr

08006924 <ucg_clip_intersection>:
 8006924:	b480      	push	{r7}
 8006926:	b087      	sub	sp, #28
 8006928:	af00      	add	r7, sp, #0
 800692a:	60f8      	str	r0, [r7, #12]
 800692c:	60b9      	str	r1, [r7, #8]
 800692e:	4611      	mov	r1, r2
 8006930:	461a      	mov	r2, r3
 8006932:	460b      	mov	r3, r1
 8006934:	80fb      	strh	r3, [r7, #6]
 8006936:	4613      	mov	r3, r2
 8006938:	80bb      	strh	r3, [r7, #4]
 800693a:	68fb      	ldr	r3, [r7, #12]
 800693c:	881b      	ldrh	r3, [r3, #0]
 800693e:	82fb      	strh	r3, [r7, #22]
 8006940:	68bb      	ldr	r3, [r7, #8]
 8006942:	881b      	ldrh	r3, [r3, #0]
 8006944:	82bb      	strh	r3, [r7, #20]
 8006946:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 800694a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800694e:	429a      	cmp	r2, r3
 8006950:	db01      	blt.n	8006956 <ucg_clip_intersection+0x32>
 8006952:	2300      	movs	r3, #0
 8006954:	e01a      	b.n	800698c <ucg_clip_intersection+0x68>
 8006956:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800695a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800695e:	429a      	cmp	r2, r3
 8006960:	dc01      	bgt.n	8006966 <ucg_clip_intersection+0x42>
 8006962:	2300      	movs	r3, #0
 8006964:	e012      	b.n	800698c <ucg_clip_intersection+0x68>
 8006966:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 800696a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800696e:	429a      	cmp	r2, r3
 8006970:	da02      	bge.n	8006978 <ucg_clip_intersection+0x54>
 8006972:	68fb      	ldr	r3, [r7, #12]
 8006974:	88fa      	ldrh	r2, [r7, #6]
 8006976:	801a      	strh	r2, [r3, #0]
 8006978:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800697c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8006980:	429a      	cmp	r2, r3
 8006982:	dd02      	ble.n	800698a <ucg_clip_intersection+0x66>
 8006984:	68bb      	ldr	r3, [r7, #8]
 8006986:	88ba      	ldrh	r2, [r7, #4]
 8006988:	801a      	strh	r2, [r3, #0]
 800698a:	2301      	movs	r3, #1
 800698c:	4618      	mov	r0, r3
 800698e:	371c      	adds	r7, #28
 8006990:	46bd      	mov	sp, r7
 8006992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006996:	4770      	bx	lr

08006998 <ucg_clip_is_pixel_visible>:
 8006998:	b580      	push	{r7, lr}
 800699a:	b082      	sub	sp, #8
 800699c:	af00      	add	r7, sp, #0
 800699e:	6078      	str	r0, [r7, #4]
 80069a0:	6878      	ldr	r0, [r7, #4]
 80069a2:	f7ff ff75 	bl	8006890 <ucg_clip_is_x_visible>
 80069a6:	4603      	mov	r3, r0
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d101      	bne.n	80069b0 <ucg_clip_is_pixel_visible+0x18>
 80069ac:	2300      	movs	r3, #0
 80069ae:	e008      	b.n	80069c2 <ucg_clip_is_pixel_visible+0x2a>
 80069b0:	6878      	ldr	r0, [r7, #4]
 80069b2:	f7ff ff92 	bl	80068da <ucg_clip_is_y_visible>
 80069b6:	4603      	mov	r3, r0
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d101      	bne.n	80069c0 <ucg_clip_is_pixel_visible+0x28>
 80069bc:	2300      	movs	r3, #0
 80069be:	e000      	b.n	80069c2 <ucg_clip_is_pixel_visible+0x2a>
 80069c0:	2301      	movs	r3, #1
 80069c2:	4618      	mov	r0, r3
 80069c4:	3708      	adds	r7, #8
 80069c6:	46bd      	mov	sp, r7
 80069c8:	bd80      	pop	{r7, pc}
	...

080069cc <ucg_clip_l90fx>:
 80069cc:	b590      	push	{r4, r7, lr}
 80069ce:	b085      	sub	sp, #20
 80069d0:	af00      	add	r7, sp, #0
 80069d2:	6078      	str	r0, [r7, #4]
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	2200      	movs	r2, #0
 80069d8:	861a      	strh	r2, [r3, #48]	@ 0x30
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80069e0:	2b03      	cmp	r3, #3
 80069e2:	f200 816d 	bhi.w	8006cc0 <ucg_clip_l90fx+0x2f4>
 80069e6:	a201      	add	r2, pc, #4	@ (adr r2, 80069ec <ucg_clip_l90fx+0x20>)
 80069e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80069ec:	080069fd 	.word	0x080069fd
 80069f0:	08006aa3 	.word	0x08006aa3
 80069f4:	08006b49 	.word	0x08006b49
 80069f8:	08006c05 	.word	0x08006c05
 80069fc:	6878      	ldr	r0, [r7, #4]
 80069fe:	f7ff ff6c 	bl	80068da <ucg_clip_is_y_visible>
 8006a02:	4603      	mov	r3, r0
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	d101      	bne.n	8006a0c <ucg_clip_l90fx+0x40>
 8006a08:	2300      	movs	r3, #0
 8006a0a:	e15a      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8006a12:	81fb      	strh	r3, [r7, #14]
 8006a14:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006a18:	81bb      	strh	r3, [r7, #12]
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8006a20:	b29a      	uxth	r2, r3
 8006a22:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006a26:	b29b      	uxth	r3, r3
 8006a28:	4413      	add	r3, r2
 8006a2a:	b29b      	uxth	r3, r3
 8006a2c:	b21b      	sxth	r3, r3
 8006a2e:	81bb      	strh	r3, [r7, #12]
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 8006a3c:	b29a      	uxth	r2, r3
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8006a44:	b29b      	uxth	r3, r3
 8006a46:	4413      	add	r3, r2
 8006a48:	b29b      	uxth	r3, r3
 8006a4a:	b21b      	sxth	r3, r3
 8006a4c:	f107 010c 	add.w	r1, r7, #12
 8006a50:	f107 000e 	add.w	r0, r7, #14
 8006a54:	4622      	mov	r2, r4
 8006a56:	f7ff ff65 	bl	8006924 <ucg_clip_intersection>
 8006a5a:	4603      	mov	r3, r0
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	d101      	bne.n	8006a64 <ucg_clip_l90fx+0x98>
 8006a60:	2300      	movs	r3, #0
 8006a62:	e12e      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006a64:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006a68:	b29a      	uxth	r2, r3
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8006a70:	b29b      	uxth	r3, r3
 8006a72:	1ad3      	subs	r3, r2, r3
 8006a74:	b29b      	uxth	r3, r3
 8006a76:	b21a      	sxth	r2, r3
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	861a      	strh	r2, [r3, #48]	@ 0x30
 8006a7c:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8006a80:	687b      	ldr	r3, [r7, #4]
 8006a82:	849a      	strh	r2, [r3, #36]	@ 0x24
 8006a84:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006a88:	b29a      	uxth	r2, r3
 8006a8a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006a8e:	b29b      	uxth	r3, r3
 8006a90:	1ad3      	subs	r3, r2, r3
 8006a92:	b29b      	uxth	r3, r3
 8006a94:	b21b      	sxth	r3, r3
 8006a96:	81bb      	strh	r3, [r7, #12]
 8006a98:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006aa0:	e10e      	b.n	8006cc0 <ucg_clip_l90fx+0x2f4>
 8006aa2:	6878      	ldr	r0, [r7, #4]
 8006aa4:	f7ff fef4 	bl	8006890 <ucg_clip_is_x_visible>
 8006aa8:	4603      	mov	r3, r0
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	d101      	bne.n	8006ab2 <ucg_clip_l90fx+0xe6>
 8006aae:	2300      	movs	r3, #0
 8006ab0:	e107      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8006ab8:	81fb      	strh	r3, [r7, #14]
 8006aba:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006abe:	81bb      	strh	r3, [r7, #12]
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8006ac6:	b29a      	uxth	r2, r3
 8006ac8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006acc:	b29b      	uxth	r3, r3
 8006ace:	4413      	add	r3, r2
 8006ad0:	b29b      	uxth	r3, r3
 8006ad2:	b21b      	sxth	r3, r3
 8006ad4:	81bb      	strh	r3, [r7, #12]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8006ae2:	b29a      	uxth	r2, r3
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8006aea:	b29b      	uxth	r3, r3
 8006aec:	4413      	add	r3, r2
 8006aee:	b29b      	uxth	r3, r3
 8006af0:	b21b      	sxth	r3, r3
 8006af2:	f107 010c 	add.w	r1, r7, #12
 8006af6:	f107 000e 	add.w	r0, r7, #14
 8006afa:	4622      	mov	r2, r4
 8006afc:	f7ff ff12 	bl	8006924 <ucg_clip_intersection>
 8006b00:	4603      	mov	r3, r0
 8006b02:	2b00      	cmp	r3, #0
 8006b04:	d101      	bne.n	8006b0a <ucg_clip_l90fx+0x13e>
 8006b06:	2300      	movs	r3, #0
 8006b08:	e0db      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006b0a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006b0e:	b29a      	uxth	r2, r3
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8006b16:	b29b      	uxth	r3, r3
 8006b18:	1ad3      	subs	r3, r2, r3
 8006b1a:	b29b      	uxth	r3, r3
 8006b1c:	b21a      	sxth	r2, r3
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	861a      	strh	r2, [r3, #48]	@ 0x30
 8006b22:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006b2a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006b2e:	b29a      	uxth	r2, r3
 8006b30:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006b34:	b29b      	uxth	r3, r3
 8006b36:	1ad3      	subs	r3, r2, r3
 8006b38:	b29b      	uxth	r3, r3
 8006b3a:	b21b      	sxth	r3, r3
 8006b3c:	81bb      	strh	r3, [r7, #12]
 8006b3e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006b46:	e0bb      	b.n	8006cc0 <ucg_clip_l90fx+0x2f4>
 8006b48:	6878      	ldr	r0, [r7, #4]
 8006b4a:	f7ff fec6 	bl	80068da <ucg_clip_is_y_visible>
 8006b4e:	4603      	mov	r3, r0
 8006b50:	2b00      	cmp	r3, #0
 8006b52:	d101      	bne.n	8006b58 <ucg_clip_l90fx+0x18c>
 8006b54:	2300      	movs	r3, #0
 8006b56:	e0b4      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8006b5e:	81bb      	strh	r3, [r7, #12]
 8006b60:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006b64:	b29b      	uxth	r3, r3
 8006b66:	3301      	adds	r3, #1
 8006b68:	b29b      	uxth	r3, r3
 8006b6a:	b21b      	sxth	r3, r3
 8006b6c:	81bb      	strh	r3, [r7, #12]
 8006b6e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006b72:	81fb      	strh	r3, [r7, #14]
 8006b74:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006b78:	b29a      	uxth	r2, r3
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8006b80:	b29b      	uxth	r3, r3
 8006b82:	1ad3      	subs	r3, r2, r3
 8006b84:	b29b      	uxth	r3, r3
 8006b86:	b21b      	sxth	r3, r3
 8006b88:	81fb      	strh	r3, [r7, #14]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 8006b96:	b29a      	uxth	r2, r3
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8006b9e:	b29b      	uxth	r3, r3
 8006ba0:	4413      	add	r3, r2
 8006ba2:	b29b      	uxth	r3, r3
 8006ba4:	b21b      	sxth	r3, r3
 8006ba6:	f107 010c 	add.w	r1, r7, #12
 8006baa:	f107 000e 	add.w	r0, r7, #14
 8006bae:	4622      	mov	r2, r4
 8006bb0:	f7ff feb8 	bl	8006924 <ucg_clip_intersection>
 8006bb4:	4603      	mov	r3, r0
 8006bb6:	2b00      	cmp	r3, #0
 8006bb8:	d101      	bne.n	8006bbe <ucg_clip_l90fx+0x1f2>
 8006bba:	2300      	movs	r3, #0
 8006bbc:	e081      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006bbe:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006bc2:	b29a      	uxth	r2, r3
 8006bc4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006bc8:	b29b      	uxth	r3, r3
 8006bca:	1ad3      	subs	r3, r2, r3
 8006bcc:	b29b      	uxth	r3, r3
 8006bce:	b21a      	sxth	r2, r3
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006bd4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006bd8:	b29b      	uxth	r3, r3
 8006bda:	3b01      	subs	r3, #1
 8006bdc:	b29b      	uxth	r3, r3
 8006bde:	b21b      	sxth	r3, r3
 8006be0:	81bb      	strh	r3, [r7, #12]
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8006be8:	b29a      	uxth	r2, r3
 8006bea:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006bee:	b29b      	uxth	r3, r3
 8006bf0:	1ad3      	subs	r3, r2, r3
 8006bf2:	b29b      	uxth	r3, r3
 8006bf4:	b21a      	sxth	r2, r3
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	861a      	strh	r2, [r3, #48]	@ 0x30
 8006bfa:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	849a      	strh	r2, [r3, #36]	@ 0x24
 8006c02:	e05d      	b.n	8006cc0 <ucg_clip_l90fx+0x2f4>
 8006c04:	6878      	ldr	r0, [r7, #4]
 8006c06:	f7ff fe43 	bl	8006890 <ucg_clip_is_x_visible>
 8006c0a:	4603      	mov	r3, r0
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	d101      	bne.n	8006c14 <ucg_clip_l90fx+0x248>
 8006c10:	2300      	movs	r3, #0
 8006c12:	e056      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8006c1a:	81bb      	strh	r3, [r7, #12]
 8006c1c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006c20:	b29b      	uxth	r3, r3
 8006c22:	3301      	adds	r3, #1
 8006c24:	b29b      	uxth	r3, r3
 8006c26:	b21b      	sxth	r3, r3
 8006c28:	81bb      	strh	r3, [r7, #12]
 8006c2a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006c2e:	81fb      	strh	r3, [r7, #14]
 8006c30:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006c34:	b29a      	uxth	r2, r3
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8006c3c:	b29b      	uxth	r3, r3
 8006c3e:	1ad3      	subs	r3, r2, r3
 8006c40:	b29b      	uxth	r3, r3
 8006c42:	b21b      	sxth	r3, r3
 8006c44:	81fb      	strh	r3, [r7, #14]
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8006c52:	b29a      	uxth	r2, r3
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8006c5a:	b29b      	uxth	r3, r3
 8006c5c:	4413      	add	r3, r2
 8006c5e:	b29b      	uxth	r3, r3
 8006c60:	b21b      	sxth	r3, r3
 8006c62:	f107 010c 	add.w	r1, r7, #12
 8006c66:	f107 000e 	add.w	r0, r7, #14
 8006c6a:	4622      	mov	r2, r4
 8006c6c:	f7ff fe5a 	bl	8006924 <ucg_clip_intersection>
 8006c70:	4603      	mov	r3, r0
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	d101      	bne.n	8006c7a <ucg_clip_l90fx+0x2ae>
 8006c76:	2300      	movs	r3, #0
 8006c78:	e023      	b.n	8006cc2 <ucg_clip_l90fx+0x2f6>
 8006c7a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006c7e:	b29a      	uxth	r2, r3
 8006c80:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006c84:	b29b      	uxth	r3, r3
 8006c86:	1ad3      	subs	r3, r2, r3
 8006c88:	b29b      	uxth	r3, r3
 8006c8a:	b21a      	sxth	r2, r3
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8006c90:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006c94:	b29b      	uxth	r3, r3
 8006c96:	3b01      	subs	r3, #1
 8006c98:	b29b      	uxth	r3, r3
 8006c9a:	b21b      	sxth	r3, r3
 8006c9c:	81bb      	strh	r3, [r7, #12]
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8006ca4:	b29a      	uxth	r2, r3
 8006ca6:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8006caa:	b29b      	uxth	r3, r3
 8006cac:	1ad3      	subs	r3, r2, r3
 8006cae:	b29b      	uxth	r3, r3
 8006cb0:	b21a      	sxth	r2, r3
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	861a      	strh	r2, [r3, #48]	@ 0x30
 8006cb6:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	84da      	strh	r2, [r3, #38]	@ 0x26
 8006cbe:	bf00      	nop
 8006cc0:	2301      	movs	r3, #1
 8006cc2:	4618      	mov	r0, r3
 8006cc4:	3714      	adds	r7, #20
 8006cc6:	46bd      	mov	sp, r7
 8006cc8:	bd90      	pop	{r4, r7, pc}
 8006cca:	bf00      	nop

08006ccc <ucg_clip_l90se>:
 8006ccc:	b580      	push	{r7, lr}
 8006cce:	b084      	sub	sp, #16
 8006cd0:	af00      	add	r7, sp, #0
 8006cd2:	6078      	str	r0, [r7, #4]
 8006cd4:	6878      	ldr	r0, [r7, #4]
 8006cd6:	f7ff fe79 	bl	80069cc <ucg_clip_l90fx>
 8006cda:	4603      	mov	r3, r0
 8006cdc:	2b00      	cmp	r3, #0
 8006cde:	d101      	bne.n	8006ce4 <ucg_clip_l90se+0x18>
 8006ce0:	2300      	movs	r3, #0
 8006ce2:	e019      	b.n	8006d18 <ucg_clip_l90se+0x4c>
 8006ce4:	2300      	movs	r3, #0
 8006ce6:	73fb      	strb	r3, [r7, #15]
 8006ce8:	e012      	b.n	8006d10 <ucg_clip_l90se+0x44>
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8006cf0:	7bfa      	ldrb	r2, [r7, #15]
 8006cf2:	4613      	mov	r3, r2
 8006cf4:	00db      	lsls	r3, r3, #3
 8006cf6:	1a9b      	subs	r3, r3, r2
 8006cf8:	005b      	lsls	r3, r3, #1
 8006cfa:	18ca      	adds	r2, r1, r3
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	@ 0x30
 8006d02:	4619      	mov	r1, r3
 8006d04:	4610      	mov	r0, r2
 8006d06:	f7fd f850 	bl	8003daa <ucg_ccs_seek>
 8006d0a:	7bfb      	ldrb	r3, [r7, #15]
 8006d0c:	3301      	adds	r3, #1
 8006d0e:	73fb      	strb	r3, [r7, #15]
 8006d10:	7bfb      	ldrb	r3, [r7, #15]
 8006d12:	2b02      	cmp	r3, #2
 8006d14:	d9e9      	bls.n	8006cea <ucg_clip_l90se+0x1e>
 8006d16:	2301      	movs	r3, #1
 8006d18:	4618      	mov	r0, r3
 8006d1a:	3710      	adds	r7, #16
 8006d1c:	46bd      	mov	sp, r7
 8006d1e:	bd80      	pop	{r7, pc}

08006d20 <ucg_com_PowerDown>:
 8006d20:	b590      	push	{r4, r7, lr}
 8006d22:	b083      	sub	sp, #12
 8006d24:	af00      	add	r7, sp, #0
 8006d26:	6078      	str	r0, [r7, #4]
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8006d2e:	f003 0308 	and.w	r3, r3, #8
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d006      	beq.n	8006d44 <ucg_com_PowerDown+0x24>
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	69dc      	ldr	r4, [r3, #28]
 8006d3a:	2300      	movs	r3, #0
 8006d3c:	2200      	movs	r2, #0
 8006d3e:	210b      	movs	r1, #11
 8006d40:	6878      	ldr	r0, [r7, #4]
 8006d42:	47a0      	blx	r4
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8006d4a:	f023 0308 	bic.w	r3, r3, #8
 8006d4e:	b2da      	uxtb	r2, r3
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8006d56:	bf00      	nop
 8006d58:	370c      	adds	r7, #12
 8006d5a:	46bd      	mov	sp, r7
 8006d5c:	bd90      	pop	{r4, r7, pc}

08006d5e <ucg_com_PowerUp>:
 8006d5e:	b590      	push	{r4, r7, lr}
 8006d60:	b085      	sub	sp, #20
 8006d62:	af00      	add	r7, sp, #0
 8006d64:	6078      	str	r0, [r7, #4]
 8006d66:	460b      	mov	r3, r1
 8006d68:	807b      	strh	r3, [r7, #2]
 8006d6a:	4613      	mov	r3, r2
 8006d6c:	803b      	strh	r3, [r7, #0]
 8006d6e:	887b      	ldrh	r3, [r7, #2]
 8006d70:	813b      	strh	r3, [r7, #8]
 8006d72:	883b      	ldrh	r3, [r7, #0]
 8006d74:	817b      	strh	r3, [r7, #10]
 8006d76:	6878      	ldr	r0, [r7, #4]
 8006d78:	f7ff ffd2 	bl	8006d20 <ucg_com_PowerDown>
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	2200      	movs	r2, #0
 8006d80:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	69dc      	ldr	r4, [r3, #28]
 8006d88:	f107 0308 	add.w	r3, r7, #8
 8006d8c:	2200      	movs	r2, #0
 8006d8e:	210a      	movs	r1, #10
 8006d90:	6878      	ldr	r0, [r7, #4]
 8006d92:	47a0      	blx	r4
 8006d94:	4603      	mov	r3, r0
 8006d96:	81fb      	strh	r3, [r7, #14]
 8006d98:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d008      	beq.n	8006db2 <ucg_com_PowerUp+0x54>
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8006da6:	f043 0308 	orr.w	r3, r3, #8
 8006daa:	b2da      	uxtb	r2, r3
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8006db2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8006db6:	4618      	mov	r0, r3
 8006db8:	3714      	adds	r7, #20
 8006dba:	46bd      	mov	sp, r7
 8006dbc:	bd90      	pop	{r4, r7, pc}

08006dbe <ucg_com_SetLineStatus>:
 8006dbe:	b590      	push	{r4, r7, lr}
 8006dc0:	b083      	sub	sp, #12
 8006dc2:	af00      	add	r7, sp, #0
 8006dc4:	6078      	str	r0, [r7, #4]
 8006dc6:	4608      	mov	r0, r1
 8006dc8:	4611      	mov	r1, r2
 8006dca:	461a      	mov	r2, r3
 8006dcc:	4603      	mov	r3, r0
 8006dce:	70fb      	strb	r3, [r7, #3]
 8006dd0:	460b      	mov	r3, r1
 8006dd2:	70bb      	strb	r3, [r7, #2]
 8006dd4:	4613      	mov	r3, r2
 8006dd6:	707b      	strb	r3, [r7, #1]
 8006dd8:	78fb      	ldrb	r3, [r7, #3]
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	d131      	bne.n	8006e42 <ucg_com_SetLineStatus+0x84>
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8006de4:	78bb      	ldrb	r3, [r7, #2]
 8006de6:	4013      	ands	r3, r2
 8006de8:	b2db      	uxtb	r3, r3
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d008      	beq.n	8006e00 <ucg_com_SetLineStatus+0x42>
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8006df4:	78bb      	ldrb	r3, [r7, #2]
 8006df6:	4013      	ands	r3, r2
 8006df8:	b2db      	uxtb	r3, r3
 8006dfa:	78ba      	ldrb	r2, [r7, #2]
 8006dfc:	429a      	cmp	r2, r3
 8006dfe:	d14b      	bne.n	8006e98 <ucg_com_SetLineStatus+0xda>
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	69dc      	ldr	r4, [r3, #28]
 8006e04:	787b      	ldrb	r3, [r7, #1]
 8006e06:	b219      	sxth	r1, r3
 8006e08:	78fb      	ldrb	r3, [r7, #3]
 8006e0a:	b29a      	uxth	r2, r3
 8006e0c:	2300      	movs	r3, #0
 8006e0e:	6878      	ldr	r0, [r7, #4]
 8006e10:	47a0      	blx	r4
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8006e18:	b25a      	sxtb	r2, r3
 8006e1a:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8006e1e:	43db      	mvns	r3, r3
 8006e20:	b25b      	sxtb	r3, r3
 8006e22:	4013      	ands	r3, r2
 8006e24:	b25b      	sxtb	r3, r3
 8006e26:	b2da      	uxtb	r2, r3
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8006e34:	78bb      	ldrb	r3, [r7, #2]
 8006e36:	4313      	orrs	r3, r2
 8006e38:	b2da      	uxtb	r2, r3
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8006e40:	e02a      	b.n	8006e98 <ucg_com_SetLineStatus+0xda>
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8006e48:	78bb      	ldrb	r3, [r7, #2]
 8006e4a:	4013      	ands	r3, r2
 8006e4c:	b2db      	uxtb	r3, r3
 8006e4e:	2b00      	cmp	r3, #0
 8006e50:	d007      	beq.n	8006e62 <ucg_com_SetLineStatus+0xa4>
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8006e58:	78bb      	ldrb	r3, [r7, #2]
 8006e5a:	4013      	ands	r3, r2
 8006e5c:	b2db      	uxtb	r3, r3
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d11a      	bne.n	8006e98 <ucg_com_SetLineStatus+0xda>
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	69dc      	ldr	r4, [r3, #28]
 8006e66:	787b      	ldrb	r3, [r7, #1]
 8006e68:	b219      	sxth	r1, r3
 8006e6a:	78fb      	ldrb	r3, [r7, #3]
 8006e6c:	b29a      	uxth	r2, r3
 8006e6e:	2300      	movs	r3, #0
 8006e70:	6878      	ldr	r0, [r7, #4]
 8006e72:	47a0      	blx	r4
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8006e7a:	78bb      	ldrb	r3, [r7, #2]
 8006e7c:	4313      	orrs	r3, r2
 8006e7e:	b2da      	uxtb	r2, r3
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8006e86:	687b      	ldr	r3, [r7, #4]
 8006e88:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8006e8c:	78bb      	ldrb	r3, [r7, #2]
 8006e8e:	4313      	orrs	r3, r2
 8006e90:	b2da      	uxtb	r2, r3
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8006e98:	bf00      	nop
 8006e9a:	370c      	adds	r7, #12
 8006e9c:	46bd      	mov	sp, r7
 8006e9e:	bd90      	pop	{r4, r7, pc}

08006ea0 <ucg_com_SetResetLineStatus>:
 8006ea0:	b580      	push	{r7, lr}
 8006ea2:	b082      	sub	sp, #8
 8006ea4:	af00      	add	r7, sp, #0
 8006ea6:	6078      	str	r0, [r7, #4]
 8006ea8:	460b      	mov	r3, r1
 8006eaa:	70fb      	strb	r3, [r7, #3]
 8006eac:	78f9      	ldrb	r1, [r7, #3]
 8006eae:	230d      	movs	r3, #13
 8006eb0:	2204      	movs	r2, #4
 8006eb2:	6878      	ldr	r0, [r7, #4]
 8006eb4:	f7ff ff83 	bl	8006dbe <ucg_com_SetLineStatus>
 8006eb8:	bf00      	nop
 8006eba:	3708      	adds	r7, #8
 8006ebc:	46bd      	mov	sp, r7
 8006ebe:	bd80      	pop	{r7, pc}

08006ec0 <ucg_com_SetCSLineStatus>:
 8006ec0:	b580      	push	{r7, lr}
 8006ec2:	b082      	sub	sp, #8
 8006ec4:	af00      	add	r7, sp, #0
 8006ec6:	6078      	str	r0, [r7, #4]
 8006ec8:	460b      	mov	r3, r1
 8006eca:	70fb      	strb	r3, [r7, #3]
 8006ecc:	78f9      	ldrb	r1, [r7, #3]
 8006ece:	230e      	movs	r3, #14
 8006ed0:	2202      	movs	r2, #2
 8006ed2:	6878      	ldr	r0, [r7, #4]
 8006ed4:	f7ff ff73 	bl	8006dbe <ucg_com_SetLineStatus>
 8006ed8:	bf00      	nop
 8006eda:	3708      	adds	r7, #8
 8006edc:	46bd      	mov	sp, r7
 8006ede:	bd80      	pop	{r7, pc}

08006ee0 <ucg_com_SetCDLineStatus>:
 8006ee0:	b580      	push	{r7, lr}
 8006ee2:	b082      	sub	sp, #8
 8006ee4:	af00      	add	r7, sp, #0
 8006ee6:	6078      	str	r0, [r7, #4]
 8006ee8:	460b      	mov	r3, r1
 8006eea:	70fb      	strb	r3, [r7, #3]
 8006eec:	78f9      	ldrb	r1, [r7, #3]
 8006eee:	230f      	movs	r3, #15
 8006ef0:	2201      	movs	r2, #1
 8006ef2:	6878      	ldr	r0, [r7, #4]
 8006ef4:	f7ff ff63 	bl	8006dbe <ucg_com_SetLineStatus>
 8006ef8:	bf00      	nop
 8006efa:	3708      	adds	r7, #8
 8006efc:	46bd      	mov	sp, r7
 8006efe:	bd80      	pop	{r7, pc}

08006f00 <ucg_com_DelayMicroseconds>:
 8006f00:	b590      	push	{r4, r7, lr}
 8006f02:	b083      	sub	sp, #12
 8006f04:	af00      	add	r7, sp, #0
 8006f06:	6078      	str	r0, [r7, #4]
 8006f08:	460b      	mov	r3, r1
 8006f0a:	807b      	strh	r3, [r7, #2]
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	69dc      	ldr	r4, [r3, #28]
 8006f10:	887a      	ldrh	r2, [r7, #2]
 8006f12:	2300      	movs	r3, #0
 8006f14:	210c      	movs	r1, #12
 8006f16:	6878      	ldr	r0, [r7, #4]
 8006f18:	47a0      	blx	r4
 8006f1a:	bf00      	nop
 8006f1c:	370c      	adds	r7, #12
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	bd90      	pop	{r4, r7, pc}

08006f22 <ucg_com_DelayMilliseconds>:
 8006f22:	b580      	push	{r7, lr}
 8006f24:	b082      	sub	sp, #8
 8006f26:	af00      	add	r7, sp, #0
 8006f28:	6078      	str	r0, [r7, #4]
 8006f2a:	460b      	mov	r3, r1
 8006f2c:	807b      	strh	r3, [r7, #2]
 8006f2e:	e007      	b.n	8006f40 <ucg_com_DelayMilliseconds+0x1e>
 8006f30:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8006f34:	6878      	ldr	r0, [r7, #4]
 8006f36:	f7ff ffe3 	bl	8006f00 <ucg_com_DelayMicroseconds>
 8006f3a:	887b      	ldrh	r3, [r7, #2]
 8006f3c:	3b01      	subs	r3, #1
 8006f3e:	807b      	strh	r3, [r7, #2]
 8006f40:	887b      	ldrh	r3, [r7, #2]
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d1f4      	bne.n	8006f30 <ucg_com_DelayMilliseconds+0xe>
 8006f46:	bf00      	nop
 8006f48:	3708      	adds	r7, #8
 8006f4a:	46bd      	mov	sp, r7
 8006f4c:	bd80      	pop	{r7, pc}

08006f4e <ucg_com_SendByte>:
 8006f4e:	b590      	push	{r4, r7, lr}
 8006f50:	b083      	sub	sp, #12
 8006f52:	af00      	add	r7, sp, #0
 8006f54:	6078      	str	r0, [r7, #4]
 8006f56:	460b      	mov	r3, r1
 8006f58:	70fb      	strb	r3, [r7, #3]
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	69dc      	ldr	r4, [r3, #28]
 8006f5e:	78fb      	ldrb	r3, [r7, #3]
 8006f60:	b29a      	uxth	r2, r3
 8006f62:	2300      	movs	r3, #0
 8006f64:	2110      	movs	r1, #16
 8006f66:	6878      	ldr	r0, [r7, #4]
 8006f68:	47a0      	blx	r4
 8006f6a:	bf00      	nop
 8006f6c:	370c      	adds	r7, #12
 8006f6e:	46bd      	mov	sp, r7
 8006f70:	bd90      	pop	{r4, r7, pc}

08006f72 <ucg_com_SendStringP>:
 8006f72:	b590      	push	{r4, r7, lr}
 8006f74:	b087      	sub	sp, #28
 8006f76:	af00      	add	r7, sp, #0
 8006f78:	60f8      	str	r0, [r7, #12]
 8006f7a:	460b      	mov	r3, r1
 8006f7c:	607a      	str	r2, [r7, #4]
 8006f7e:	817b      	strh	r3, [r7, #10]
 8006f80:	e010      	b.n	8006fa4 <ucg_com_SendStringP+0x32>
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	781b      	ldrb	r3, [r3, #0]
 8006f86:	75fb      	strb	r3, [r7, #23]
 8006f88:	68fb      	ldr	r3, [r7, #12]
 8006f8a:	69dc      	ldr	r4, [r3, #28]
 8006f8c:	7dfb      	ldrb	r3, [r7, #23]
 8006f8e:	b29a      	uxth	r2, r3
 8006f90:	2300      	movs	r3, #0
 8006f92:	2110      	movs	r1, #16
 8006f94:	68f8      	ldr	r0, [r7, #12]
 8006f96:	47a0      	blx	r4
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	3301      	adds	r3, #1
 8006f9c:	607b      	str	r3, [r7, #4]
 8006f9e:	897b      	ldrh	r3, [r7, #10]
 8006fa0:	3b01      	subs	r3, #1
 8006fa2:	817b      	strh	r3, [r7, #10]
 8006fa4:	897b      	ldrh	r3, [r7, #10]
 8006fa6:	2b00      	cmp	r3, #0
 8006fa8:	d1eb      	bne.n	8006f82 <ucg_com_SendStringP+0x10>
 8006faa:	bf00      	nop
 8006fac:	371c      	adds	r7, #28
 8006fae:	46bd      	mov	sp, r7
 8006fb0:	bd90      	pop	{r4, r7, pc}

08006fb2 <ucg_com_SendCmdArg>:
 8006fb2:	b580      	push	{r7, lr}
 8006fb4:	b084      	sub	sp, #16
 8006fb6:	af00      	add	r7, sp, #0
 8006fb8:	60f8      	str	r0, [r7, #12]
 8006fba:	60b9      	str	r1, [r7, #8]
 8006fbc:	4611      	mov	r1, r2
 8006fbe:	461a      	mov	r2, r3
 8006fc0:	460b      	mov	r3, r1
 8006fc2:	71fb      	strb	r3, [r7, #7]
 8006fc4:	4613      	mov	r3, r2
 8006fc6:	71bb      	strb	r3, [r7, #6]
 8006fc8:	68fb      	ldr	r3, [r7, #12]
 8006fca:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8006fce:	085b      	lsrs	r3, r3, #1
 8006fd0:	b2db      	uxtb	r3, r3
 8006fd2:	f003 0301 	and.w	r3, r3, #1
 8006fd6:	b2db      	uxtb	r3, r3
 8006fd8:	4619      	mov	r1, r3
 8006fda:	68f8      	ldr	r0, [r7, #12]
 8006fdc:	f7ff ff80 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 8006fe0:	79fb      	ldrb	r3, [r7, #7]
 8006fe2:	b29b      	uxth	r3, r3
 8006fe4:	68ba      	ldr	r2, [r7, #8]
 8006fe6:	4619      	mov	r1, r3
 8006fe8:	68f8      	ldr	r0, [r7, #12]
 8006fea:	f7ff ffc2 	bl	8006f72 <ucg_com_SendStringP>
 8006fee:	79bb      	ldrb	r3, [r7, #6]
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	d014      	beq.n	800701e <ucg_com_SendCmdArg+0x6c>
 8006ff4:	79fb      	ldrb	r3, [r7, #7]
 8006ff6:	68ba      	ldr	r2, [r7, #8]
 8006ff8:	4413      	add	r3, r2
 8006ffa:	60bb      	str	r3, [r7, #8]
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8007002:	f003 0301 	and.w	r3, r3, #1
 8007006:	b2db      	uxtb	r3, r3
 8007008:	4619      	mov	r1, r3
 800700a:	68f8      	ldr	r0, [r7, #12]
 800700c:	f7ff ff68 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 8007010:	79bb      	ldrb	r3, [r7, #6]
 8007012:	b29b      	uxth	r3, r3
 8007014:	68ba      	ldr	r2, [r7, #8]
 8007016:	4619      	mov	r1, r3
 8007018:	68f8      	ldr	r0, [r7, #12]
 800701a:	f7ff ffaa 	bl	8006f72 <ucg_com_SendStringP>
 800701e:	bf00      	nop
 8007020:	3710      	adds	r7, #16
 8007022:	46bd      	mov	sp, r7
 8007024:	bd80      	pop	{r7, pc}
	...

08007028 <ucg_com_SendCmdSeq>:
 8007028:	b580      	push	{r7, lr}
 800702a:	b084      	sub	sp, #16
 800702c:	af00      	add	r7, sp, #0
 800702e:	6078      	str	r0, [r7, #4]
 8007030:	6039      	str	r1, [r7, #0]
 8007032:	683b      	ldr	r3, [r7, #0]
 8007034:	781b      	ldrb	r3, [r3, #0]
 8007036:	73fb      	strb	r3, [r7, #15]
 8007038:	7bfb      	ldrb	r3, [r7, #15]
 800703a:	091b      	lsrs	r3, r3, #4
 800703c:	73bb      	strb	r3, [r7, #14]
 800703e:	7bfb      	ldrb	r3, [r7, #15]
 8007040:	f003 030f 	and.w	r3, r3, #15
 8007044:	737b      	strb	r3, [r7, #13]
 8007046:	7bbb      	ldrb	r3, [r7, #14]
 8007048:	2b0f      	cmp	r3, #15
 800704a:	f200 8124 	bhi.w	8007296 <ucg_com_SendCmdSeq+0x26e>
 800704e:	a201      	add	r2, pc, #4	@ (adr r2, 8007054 <ucg_com_SendCmdSeq+0x2c>)
 8007050:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007054:	08007297 	.word	0x08007297
 8007058:	08007095 	.word	0x08007095
 800705c:	08007095 	.word	0x08007095
 8007060:	08007095 	.word	0x08007095
 8007064:	08007297 	.word	0x08007297
 8007068:	08007297 	.word	0x08007297
 800706c:	080070b5 	.word	0x080070b5
 8007070:	080070e7 	.word	0x080070e7
 8007074:	0800712b 	.word	0x0800712b
 8007078:	08007157 	.word	0x08007157
 800707c:	08007183 	.word	0x08007183
 8007080:	080071e3 	.word	0x080071e3
 8007084:	08007297 	.word	0x08007297
 8007088:	08007297 	.word	0x08007297
 800708c:	08007297 	.word	0x08007297
 8007090:	08007243 	.word	0x08007243
 8007094:	683b      	ldr	r3, [r7, #0]
 8007096:	1c59      	adds	r1, r3, #1
 8007098:	7b7b      	ldrb	r3, [r7, #13]
 800709a:	7bba      	ldrb	r2, [r7, #14]
 800709c:	6878      	ldr	r0, [r7, #4]
 800709e:	f7ff ff88 	bl	8006fb2 <ucg_com_SendCmdArg>
 80070a2:	7bbb      	ldrb	r3, [r7, #14]
 80070a4:	1c5a      	adds	r2, r3, #1
 80070a6:	7b7b      	ldrb	r3, [r7, #13]
 80070a8:	4413      	add	r3, r2
 80070aa:	461a      	mov	r2, r3
 80070ac:	683b      	ldr	r3, [r7, #0]
 80070ae:	4413      	add	r3, r2
 80070b0:	603b      	str	r3, [r7, #0]
 80070b2:	e0ef      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 80070ba:	f003 0301 	and.w	r3, r3, #1
 80070be:	b2db      	uxtb	r3, r3
 80070c0:	4619      	mov	r1, r3
 80070c2:	6878      	ldr	r0, [r7, #4]
 80070c4:	f7ff ff0c 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 80070c8:	7b7b      	ldrb	r3, [r7, #13]
 80070ca:	b299      	uxth	r1, r3
 80070cc:	683b      	ldr	r3, [r7, #0]
 80070ce:	3301      	adds	r3, #1
 80070d0:	461a      	mov	r2, r3
 80070d2:	6878      	ldr	r0, [r7, #4]
 80070d4:	f7ff ff4d 	bl	8006f72 <ucg_com_SendStringP>
 80070d8:	7b7b      	ldrb	r3, [r7, #13]
 80070da:	3301      	adds	r3, #1
 80070dc:	461a      	mov	r2, r3
 80070de:	683b      	ldr	r3, [r7, #0]
 80070e0:	4413      	add	r3, r2
 80070e2:	603b      	str	r3, [r7, #0]
 80070e4:	e0d6      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 80070ec:	085b      	lsrs	r3, r3, #1
 80070ee:	b2db      	uxtb	r3, r3
 80070f0:	f003 0301 	and.w	r3, r3, #1
 80070f4:	2b00      	cmp	r3, #0
 80070f6:	bf0c      	ite	eq
 80070f8:	2301      	moveq	r3, #1
 80070fa:	2300      	movne	r3, #0
 80070fc:	b2db      	uxtb	r3, r3
 80070fe:	4619      	mov	r1, r3
 8007100:	6878      	ldr	r0, [r7, #4]
 8007102:	f7ff feed 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 8007106:	7b7b      	ldrb	r3, [r7, #13]
 8007108:	2b00      	cmp	r3, #0
 800710a:	d007      	beq.n	800711c <ucg_com_SendCmdSeq+0xf4>
 800710c:	7b7b      	ldrb	r3, [r7, #13]
 800710e:	b299      	uxth	r1, r3
 8007110:	683b      	ldr	r3, [r7, #0]
 8007112:	3301      	adds	r3, #1
 8007114:	461a      	mov	r2, r3
 8007116:	6878      	ldr	r0, [r7, #4]
 8007118:	f7ff ff2b 	bl	8006f72 <ucg_com_SendStringP>
 800711c:	7b7b      	ldrb	r3, [r7, #13]
 800711e:	3301      	adds	r3, #1
 8007120:	461a      	mov	r2, r3
 8007122:	683b      	ldr	r3, [r7, #0]
 8007124:	4413      	add	r3, r2
 8007126:	603b      	str	r3, [r7, #0]
 8007128:	e0b4      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 800712a:	683b      	ldr	r3, [r7, #0]
 800712c:	3301      	adds	r3, #1
 800712e:	603b      	str	r3, [r7, #0]
 8007130:	683b      	ldr	r3, [r7, #0]
 8007132:	781b      	ldrb	r3, [r3, #0]
 8007134:	73fb      	strb	r3, [r7, #15]
 8007136:	7b7b      	ldrb	r3, [r7, #13]
 8007138:	b29b      	uxth	r3, r3
 800713a:	021b      	lsls	r3, r3, #8
 800713c:	b29a      	uxth	r2, r3
 800713e:	7bfb      	ldrb	r3, [r7, #15]
 8007140:	b29b      	uxth	r3, r3
 8007142:	4413      	add	r3, r2
 8007144:	b29b      	uxth	r3, r3
 8007146:	4619      	mov	r1, r3
 8007148:	6878      	ldr	r0, [r7, #4]
 800714a:	f7ff feea 	bl	8006f22 <ucg_com_DelayMilliseconds>
 800714e:	683b      	ldr	r3, [r7, #0]
 8007150:	3301      	adds	r3, #1
 8007152:	603b      	str	r3, [r7, #0]
 8007154:	e09e      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 8007156:	683b      	ldr	r3, [r7, #0]
 8007158:	3301      	adds	r3, #1
 800715a:	603b      	str	r3, [r7, #0]
 800715c:	683b      	ldr	r3, [r7, #0]
 800715e:	781b      	ldrb	r3, [r3, #0]
 8007160:	73fb      	strb	r3, [r7, #15]
 8007162:	7b7b      	ldrb	r3, [r7, #13]
 8007164:	b29b      	uxth	r3, r3
 8007166:	021b      	lsls	r3, r3, #8
 8007168:	b29a      	uxth	r2, r3
 800716a:	7bfb      	ldrb	r3, [r7, #15]
 800716c:	b29b      	uxth	r3, r3
 800716e:	4413      	add	r3, r2
 8007170:	b29b      	uxth	r3, r3
 8007172:	4619      	mov	r1, r3
 8007174:	6878      	ldr	r0, [r7, #4]
 8007176:	f7ff fec3 	bl	8006f00 <ucg_com_DelayMicroseconds>
 800717a:	683b      	ldr	r3, [r7, #0]
 800717c:	3301      	adds	r3, #1
 800717e:	603b      	str	r3, [r7, #0]
 8007180:	e088      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 8007182:	683b      	ldr	r3, [r7, #0]
 8007184:	3301      	adds	r3, #1
 8007186:	603b      	str	r3, [r7, #0]
 8007188:	683b      	ldr	r3, [r7, #0]
 800718a:	781b      	ldrb	r3, [r3, #0]
 800718c:	73fb      	strb	r3, [r7, #15]
 800718e:	683b      	ldr	r3, [r7, #0]
 8007190:	3301      	adds	r3, #1
 8007192:	603b      	str	r3, [r7, #0]
 8007194:	683b      	ldr	r3, [r7, #0]
 8007196:	781b      	ldrb	r3, [r3, #0]
 8007198:	733b      	strb	r3, [r7, #12]
 800719a:	683b      	ldr	r3, [r7, #0]
 800719c:	3301      	adds	r3, #1
 800719e:	603b      	str	r3, [r7, #0]
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 80071a6:	f003 0301 	and.w	r3, r3, #1
 80071aa:	b2db      	uxtb	r3, r3
 80071ac:	4619      	mov	r1, r3
 80071ae:	6878      	ldr	r0, [r7, #4]
 80071b0:	f7ff fe96 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 80071ba:	461a      	mov	r2, r3
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 80071c2:	441a      	add	r2, r3
 80071c4:	7b7b      	ldrb	r3, [r7, #13]
 80071c6:	fa42 f303 	asr.w	r3, r2, r3
 80071ca:	b2da      	uxtb	r2, r3
 80071cc:	7bfb      	ldrb	r3, [r7, #15]
 80071ce:	4013      	ands	r3, r2
 80071d0:	b2da      	uxtb	r2, r3
 80071d2:	7b3b      	ldrb	r3, [r7, #12]
 80071d4:	4313      	orrs	r3, r2
 80071d6:	b2db      	uxtb	r3, r3
 80071d8:	4619      	mov	r1, r3
 80071da:	6878      	ldr	r0, [r7, #4]
 80071dc:	f7ff feb7 	bl	8006f4e <ucg_com_SendByte>
 80071e0:	e058      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 80071e2:	683b      	ldr	r3, [r7, #0]
 80071e4:	3301      	adds	r3, #1
 80071e6:	603b      	str	r3, [r7, #0]
 80071e8:	683b      	ldr	r3, [r7, #0]
 80071ea:	781b      	ldrb	r3, [r3, #0]
 80071ec:	73fb      	strb	r3, [r7, #15]
 80071ee:	683b      	ldr	r3, [r7, #0]
 80071f0:	3301      	adds	r3, #1
 80071f2:	603b      	str	r3, [r7, #0]
 80071f4:	683b      	ldr	r3, [r7, #0]
 80071f6:	781b      	ldrb	r3, [r3, #0]
 80071f8:	733b      	strb	r3, [r7, #12]
 80071fa:	683b      	ldr	r3, [r7, #0]
 80071fc:	3301      	adds	r3, #1
 80071fe:	603b      	str	r3, [r7, #0]
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8007206:	f003 0301 	and.w	r3, r3, #1
 800720a:	b2db      	uxtb	r3, r3
 800720c:	4619      	mov	r1, r3
 800720e:	6878      	ldr	r0, [r7, #4]
 8007210:	f7ff fe66 	bl	8006ee0 <ucg_com_SetCDLineStatus>
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 800721a:	461a      	mov	r2, r3
 800721c:	687b      	ldr	r3, [r7, #4]
 800721e:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	@ 0x22
 8007222:	441a      	add	r2, r3
 8007224:	7b7b      	ldrb	r3, [r7, #13]
 8007226:	fa42 f303 	asr.w	r3, r2, r3
 800722a:	b2da      	uxtb	r2, r3
 800722c:	7bfb      	ldrb	r3, [r7, #15]
 800722e:	4013      	ands	r3, r2
 8007230:	b2da      	uxtb	r2, r3
 8007232:	7b3b      	ldrb	r3, [r7, #12]
 8007234:	4313      	orrs	r3, r2
 8007236:	b2db      	uxtb	r3, r3
 8007238:	4619      	mov	r1, r3
 800723a:	6878      	ldr	r0, [r7, #4]
 800723c:	f7ff fe87 	bl	8006f4e <ucg_com_SendByte>
 8007240:	e028      	b.n	8007294 <ucg_com_SendCmdSeq+0x26c>
 8007242:	7b7b      	ldrb	r3, [r7, #13]
 8007244:	089b      	lsrs	r3, r3, #2
 8007246:	73bb      	strb	r3, [r7, #14]
 8007248:	7b7b      	ldrb	r3, [r7, #13]
 800724a:	f003 0303 	and.w	r3, r3, #3
 800724e:	737b      	strb	r3, [r7, #13]
 8007250:	7bbb      	ldrb	r3, [r7, #14]
 8007252:	2b01      	cmp	r3, #1
 8007254:	d00c      	beq.n	8007270 <ucg_com_SendCmdSeq+0x248>
 8007256:	2b03      	cmp	r3, #3
 8007258:	d013      	beq.n	8007282 <ucg_com_SendCmdSeq+0x25a>
 800725a:	2b00      	cmp	r3, #0
 800725c:	d116      	bne.n	800728c <ucg_com_SendCmdSeq+0x264>
 800725e:	7b7b      	ldrb	r3, [r7, #13]
 8007260:	f003 0301 	and.w	r3, r3, #1
 8007264:	b2db      	uxtb	r3, r3
 8007266:	4619      	mov	r1, r3
 8007268:	6878      	ldr	r0, [r7, #4]
 800726a:	f7ff fe19 	bl	8006ea0 <ucg_com_SetResetLineStatus>
 800726e:	e00d      	b.n	800728c <ucg_com_SendCmdSeq+0x264>
 8007270:	7b7b      	ldrb	r3, [r7, #13]
 8007272:	f003 0301 	and.w	r3, r3, #1
 8007276:	b2db      	uxtb	r3, r3
 8007278:	4619      	mov	r1, r3
 800727a:	6878      	ldr	r0, [r7, #4]
 800727c:	f7ff fe20 	bl	8006ec0 <ucg_com_SetCSLineStatus>
 8007280:	e004      	b.n	800728c <ucg_com_SendCmdSeq+0x264>
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	7b7a      	ldrb	r2, [r7, #13]
 8007286:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 800728a:	bf00      	nop
 800728c:	683b      	ldr	r3, [r7, #0]
 800728e:	3301      	adds	r3, #1
 8007290:	603b      	str	r3, [r7, #0]
 8007292:	bf00      	nop
 8007294:	e6cd      	b.n	8007032 <ucg_com_SendCmdSeq+0xa>
 8007296:	bf00      	nop
 8007298:	3710      	adds	r7, #16
 800729a:	46bd      	mov	sp, r7
 800729c:	bd80      	pop	{r7, pc}
 800729e:	bf00      	nop

080072a0 <siprintf>:
 80072a0:	b40e      	push	{r1, r2, r3}
 80072a2:	b500      	push	{lr}
 80072a4:	b09c      	sub	sp, #112	@ 0x70
 80072a6:	ab1d      	add	r3, sp, #116	@ 0x74
 80072a8:	9002      	str	r0, [sp, #8]
 80072aa:	9006      	str	r0, [sp, #24]
 80072ac:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80072b0:	4809      	ldr	r0, [pc, #36]	@ (80072d8 <siprintf+0x38>)
 80072b2:	9107      	str	r1, [sp, #28]
 80072b4:	9104      	str	r1, [sp, #16]
 80072b6:	4909      	ldr	r1, [pc, #36]	@ (80072dc <siprintf+0x3c>)
 80072b8:	f853 2b04 	ldr.w	r2, [r3], #4
 80072bc:	9105      	str	r1, [sp, #20]
 80072be:	6800      	ldr	r0, [r0, #0]
 80072c0:	9301      	str	r3, [sp, #4]
 80072c2:	a902      	add	r1, sp, #8
 80072c4:	f000 f994 	bl	80075f0 <_svfiprintf_r>
 80072c8:	9b02      	ldr	r3, [sp, #8]
 80072ca:	2200      	movs	r2, #0
 80072cc:	701a      	strb	r2, [r3, #0]
 80072ce:	b01c      	add	sp, #112	@ 0x70
 80072d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80072d4:	b003      	add	sp, #12
 80072d6:	4770      	bx	lr
 80072d8:	2000006c 	.word	0x2000006c
 80072dc:	ffff0208 	.word	0xffff0208

080072e0 <memset>:
 80072e0:	4402      	add	r2, r0
 80072e2:	4603      	mov	r3, r0
 80072e4:	4293      	cmp	r3, r2
 80072e6:	d100      	bne.n	80072ea <memset+0xa>
 80072e8:	4770      	bx	lr
 80072ea:	f803 1b01 	strb.w	r1, [r3], #1
 80072ee:	e7f9      	b.n	80072e4 <memset+0x4>

080072f0 <__errno>:
 80072f0:	4b01      	ldr	r3, [pc, #4]	@ (80072f8 <__errno+0x8>)
 80072f2:	6818      	ldr	r0, [r3, #0]
 80072f4:	4770      	bx	lr
 80072f6:	bf00      	nop
 80072f8:	2000006c 	.word	0x2000006c

080072fc <__libc_init_array>:
 80072fc:	b570      	push	{r4, r5, r6, lr}
 80072fe:	4d0d      	ldr	r5, [pc, #52]	@ (8007334 <__libc_init_array+0x38>)
 8007300:	4c0d      	ldr	r4, [pc, #52]	@ (8007338 <__libc_init_array+0x3c>)
 8007302:	1b64      	subs	r4, r4, r5
 8007304:	10a4      	asrs	r4, r4, #2
 8007306:	2600      	movs	r6, #0
 8007308:	42a6      	cmp	r6, r4
 800730a:	d109      	bne.n	8007320 <__libc_init_array+0x24>
 800730c:	4d0b      	ldr	r5, [pc, #44]	@ (800733c <__libc_init_array+0x40>)
 800730e:	4c0c      	ldr	r4, [pc, #48]	@ (8007340 <__libc_init_array+0x44>)
 8007310:	f000 fc66 	bl	8007be0 <_init>
 8007314:	1b64      	subs	r4, r4, r5
 8007316:	10a4      	asrs	r4, r4, #2
 8007318:	2600      	movs	r6, #0
 800731a:	42a6      	cmp	r6, r4
 800731c:	d105      	bne.n	800732a <__libc_init_array+0x2e>
 800731e:	bd70      	pop	{r4, r5, r6, pc}
 8007320:	f855 3b04 	ldr.w	r3, [r5], #4
 8007324:	4798      	blx	r3
 8007326:	3601      	adds	r6, #1
 8007328:	e7ee      	b.n	8007308 <__libc_init_array+0xc>
 800732a:	f855 3b04 	ldr.w	r3, [r5], #4
 800732e:	4798      	blx	r3
 8007330:	3601      	adds	r6, #1
 8007332:	e7f2      	b.n	800731a <__libc_init_array+0x1e>
 8007334:	080098f4 	.word	0x080098f4
 8007338:	080098f4 	.word	0x080098f4
 800733c:	080098f4 	.word	0x080098f4
 8007340:	080098f8 	.word	0x080098f8

08007344 <__retarget_lock_acquire_recursive>:
 8007344:	4770      	bx	lr

08007346 <__retarget_lock_release_recursive>:
 8007346:	4770      	bx	lr

08007348 <_free_r>:
 8007348:	b538      	push	{r3, r4, r5, lr}
 800734a:	4605      	mov	r5, r0
 800734c:	2900      	cmp	r1, #0
 800734e:	d041      	beq.n	80073d4 <_free_r+0x8c>
 8007350:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007354:	1f0c      	subs	r4, r1, #4
 8007356:	2b00      	cmp	r3, #0
 8007358:	bfb8      	it	lt
 800735a:	18e4      	addlt	r4, r4, r3
 800735c:	f000 f8e0 	bl	8007520 <__malloc_lock>
 8007360:	4a1d      	ldr	r2, [pc, #116]	@ (80073d8 <_free_r+0x90>)
 8007362:	6813      	ldr	r3, [r2, #0]
 8007364:	b933      	cbnz	r3, 8007374 <_free_r+0x2c>
 8007366:	6063      	str	r3, [r4, #4]
 8007368:	6014      	str	r4, [r2, #0]
 800736a:	4628      	mov	r0, r5
 800736c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007370:	f000 b8dc 	b.w	800752c <__malloc_unlock>
 8007374:	42a3      	cmp	r3, r4
 8007376:	d908      	bls.n	800738a <_free_r+0x42>
 8007378:	6820      	ldr	r0, [r4, #0]
 800737a:	1821      	adds	r1, r4, r0
 800737c:	428b      	cmp	r3, r1
 800737e:	bf01      	itttt	eq
 8007380:	6819      	ldreq	r1, [r3, #0]
 8007382:	685b      	ldreq	r3, [r3, #4]
 8007384:	1809      	addeq	r1, r1, r0
 8007386:	6021      	streq	r1, [r4, #0]
 8007388:	e7ed      	b.n	8007366 <_free_r+0x1e>
 800738a:	461a      	mov	r2, r3
 800738c:	685b      	ldr	r3, [r3, #4]
 800738e:	b10b      	cbz	r3, 8007394 <_free_r+0x4c>
 8007390:	42a3      	cmp	r3, r4
 8007392:	d9fa      	bls.n	800738a <_free_r+0x42>
 8007394:	6811      	ldr	r1, [r2, #0]
 8007396:	1850      	adds	r0, r2, r1
 8007398:	42a0      	cmp	r0, r4
 800739a:	d10b      	bne.n	80073b4 <_free_r+0x6c>
 800739c:	6820      	ldr	r0, [r4, #0]
 800739e:	4401      	add	r1, r0
 80073a0:	1850      	adds	r0, r2, r1
 80073a2:	4283      	cmp	r3, r0
 80073a4:	6011      	str	r1, [r2, #0]
 80073a6:	d1e0      	bne.n	800736a <_free_r+0x22>
 80073a8:	6818      	ldr	r0, [r3, #0]
 80073aa:	685b      	ldr	r3, [r3, #4]
 80073ac:	6053      	str	r3, [r2, #4]
 80073ae:	4408      	add	r0, r1
 80073b0:	6010      	str	r0, [r2, #0]
 80073b2:	e7da      	b.n	800736a <_free_r+0x22>
 80073b4:	d902      	bls.n	80073bc <_free_r+0x74>
 80073b6:	230c      	movs	r3, #12
 80073b8:	602b      	str	r3, [r5, #0]
 80073ba:	e7d6      	b.n	800736a <_free_r+0x22>
 80073bc:	6820      	ldr	r0, [r4, #0]
 80073be:	1821      	adds	r1, r4, r0
 80073c0:	428b      	cmp	r3, r1
 80073c2:	bf04      	itt	eq
 80073c4:	6819      	ldreq	r1, [r3, #0]
 80073c6:	685b      	ldreq	r3, [r3, #4]
 80073c8:	6063      	str	r3, [r4, #4]
 80073ca:	bf04      	itt	eq
 80073cc:	1809      	addeq	r1, r1, r0
 80073ce:	6021      	streq	r1, [r4, #0]
 80073d0:	6054      	str	r4, [r2, #4]
 80073d2:	e7ca      	b.n	800736a <_free_r+0x22>
 80073d4:	bd38      	pop	{r3, r4, r5, pc}
 80073d6:	bf00      	nop
 80073d8:	200017c8 	.word	0x200017c8

080073dc <sbrk_aligned>:
 80073dc:	b570      	push	{r4, r5, r6, lr}
 80073de:	4e0f      	ldr	r6, [pc, #60]	@ (800741c <sbrk_aligned+0x40>)
 80073e0:	460c      	mov	r4, r1
 80073e2:	6831      	ldr	r1, [r6, #0]
 80073e4:	4605      	mov	r5, r0
 80073e6:	b911      	cbnz	r1, 80073ee <sbrk_aligned+0x12>
 80073e8:	f000 fba6 	bl	8007b38 <_sbrk_r>
 80073ec:	6030      	str	r0, [r6, #0]
 80073ee:	4621      	mov	r1, r4
 80073f0:	4628      	mov	r0, r5
 80073f2:	f000 fba1 	bl	8007b38 <_sbrk_r>
 80073f6:	1c43      	adds	r3, r0, #1
 80073f8:	d103      	bne.n	8007402 <sbrk_aligned+0x26>
 80073fa:	f04f 34ff 	mov.w	r4, #4294967295
 80073fe:	4620      	mov	r0, r4
 8007400:	bd70      	pop	{r4, r5, r6, pc}
 8007402:	1cc4      	adds	r4, r0, #3
 8007404:	f024 0403 	bic.w	r4, r4, #3
 8007408:	42a0      	cmp	r0, r4
 800740a:	d0f8      	beq.n	80073fe <sbrk_aligned+0x22>
 800740c:	1a21      	subs	r1, r4, r0
 800740e:	4628      	mov	r0, r5
 8007410:	f000 fb92 	bl	8007b38 <_sbrk_r>
 8007414:	3001      	adds	r0, #1
 8007416:	d1f2      	bne.n	80073fe <sbrk_aligned+0x22>
 8007418:	e7ef      	b.n	80073fa <sbrk_aligned+0x1e>
 800741a:	bf00      	nop
 800741c:	200017c4 	.word	0x200017c4

08007420 <_malloc_r>:
 8007420:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007424:	1ccd      	adds	r5, r1, #3
 8007426:	f025 0503 	bic.w	r5, r5, #3
 800742a:	3508      	adds	r5, #8
 800742c:	2d0c      	cmp	r5, #12
 800742e:	bf38      	it	cc
 8007430:	250c      	movcc	r5, #12
 8007432:	2d00      	cmp	r5, #0
 8007434:	4606      	mov	r6, r0
 8007436:	db01      	blt.n	800743c <_malloc_r+0x1c>
 8007438:	42a9      	cmp	r1, r5
 800743a:	d904      	bls.n	8007446 <_malloc_r+0x26>
 800743c:	230c      	movs	r3, #12
 800743e:	6033      	str	r3, [r6, #0]
 8007440:	2000      	movs	r0, #0
 8007442:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007446:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800751c <_malloc_r+0xfc>
 800744a:	f000 f869 	bl	8007520 <__malloc_lock>
 800744e:	f8d8 3000 	ldr.w	r3, [r8]
 8007452:	461c      	mov	r4, r3
 8007454:	bb44      	cbnz	r4, 80074a8 <_malloc_r+0x88>
 8007456:	4629      	mov	r1, r5
 8007458:	4630      	mov	r0, r6
 800745a:	f7ff ffbf 	bl	80073dc <sbrk_aligned>
 800745e:	1c43      	adds	r3, r0, #1
 8007460:	4604      	mov	r4, r0
 8007462:	d158      	bne.n	8007516 <_malloc_r+0xf6>
 8007464:	f8d8 4000 	ldr.w	r4, [r8]
 8007468:	4627      	mov	r7, r4
 800746a:	2f00      	cmp	r7, #0
 800746c:	d143      	bne.n	80074f6 <_malloc_r+0xd6>
 800746e:	2c00      	cmp	r4, #0
 8007470:	d04b      	beq.n	800750a <_malloc_r+0xea>
 8007472:	6823      	ldr	r3, [r4, #0]
 8007474:	4639      	mov	r1, r7
 8007476:	4630      	mov	r0, r6
 8007478:	eb04 0903 	add.w	r9, r4, r3
 800747c:	f000 fb5c 	bl	8007b38 <_sbrk_r>
 8007480:	4581      	cmp	r9, r0
 8007482:	d142      	bne.n	800750a <_malloc_r+0xea>
 8007484:	6821      	ldr	r1, [r4, #0]
 8007486:	1a6d      	subs	r5, r5, r1
 8007488:	4629      	mov	r1, r5
 800748a:	4630      	mov	r0, r6
 800748c:	f7ff ffa6 	bl	80073dc <sbrk_aligned>
 8007490:	3001      	adds	r0, #1
 8007492:	d03a      	beq.n	800750a <_malloc_r+0xea>
 8007494:	6823      	ldr	r3, [r4, #0]
 8007496:	442b      	add	r3, r5
 8007498:	6023      	str	r3, [r4, #0]
 800749a:	f8d8 3000 	ldr.w	r3, [r8]
 800749e:	685a      	ldr	r2, [r3, #4]
 80074a0:	bb62      	cbnz	r2, 80074fc <_malloc_r+0xdc>
 80074a2:	f8c8 7000 	str.w	r7, [r8]
 80074a6:	e00f      	b.n	80074c8 <_malloc_r+0xa8>
 80074a8:	6822      	ldr	r2, [r4, #0]
 80074aa:	1b52      	subs	r2, r2, r5
 80074ac:	d420      	bmi.n	80074f0 <_malloc_r+0xd0>
 80074ae:	2a0b      	cmp	r2, #11
 80074b0:	d917      	bls.n	80074e2 <_malloc_r+0xc2>
 80074b2:	1961      	adds	r1, r4, r5
 80074b4:	42a3      	cmp	r3, r4
 80074b6:	6025      	str	r5, [r4, #0]
 80074b8:	bf18      	it	ne
 80074ba:	6059      	strne	r1, [r3, #4]
 80074bc:	6863      	ldr	r3, [r4, #4]
 80074be:	bf08      	it	eq
 80074c0:	f8c8 1000 	streq.w	r1, [r8]
 80074c4:	5162      	str	r2, [r4, r5]
 80074c6:	604b      	str	r3, [r1, #4]
 80074c8:	4630      	mov	r0, r6
 80074ca:	f000 f82f 	bl	800752c <__malloc_unlock>
 80074ce:	f104 000b 	add.w	r0, r4, #11
 80074d2:	1d23      	adds	r3, r4, #4
 80074d4:	f020 0007 	bic.w	r0, r0, #7
 80074d8:	1ac2      	subs	r2, r0, r3
 80074da:	bf1c      	itt	ne
 80074dc:	1a1b      	subne	r3, r3, r0
 80074de:	50a3      	strne	r3, [r4, r2]
 80074e0:	e7af      	b.n	8007442 <_malloc_r+0x22>
 80074e2:	6862      	ldr	r2, [r4, #4]
 80074e4:	42a3      	cmp	r3, r4
 80074e6:	bf0c      	ite	eq
 80074e8:	f8c8 2000 	streq.w	r2, [r8]
 80074ec:	605a      	strne	r2, [r3, #4]
 80074ee:	e7eb      	b.n	80074c8 <_malloc_r+0xa8>
 80074f0:	4623      	mov	r3, r4
 80074f2:	6864      	ldr	r4, [r4, #4]
 80074f4:	e7ae      	b.n	8007454 <_malloc_r+0x34>
 80074f6:	463c      	mov	r4, r7
 80074f8:	687f      	ldr	r7, [r7, #4]
 80074fa:	e7b6      	b.n	800746a <_malloc_r+0x4a>
 80074fc:	461a      	mov	r2, r3
 80074fe:	685b      	ldr	r3, [r3, #4]
 8007500:	42a3      	cmp	r3, r4
 8007502:	d1fb      	bne.n	80074fc <_malloc_r+0xdc>
 8007504:	2300      	movs	r3, #0
 8007506:	6053      	str	r3, [r2, #4]
 8007508:	e7de      	b.n	80074c8 <_malloc_r+0xa8>
 800750a:	230c      	movs	r3, #12
 800750c:	6033      	str	r3, [r6, #0]
 800750e:	4630      	mov	r0, r6
 8007510:	f000 f80c 	bl	800752c <__malloc_unlock>
 8007514:	e794      	b.n	8007440 <_malloc_r+0x20>
 8007516:	6005      	str	r5, [r0, #0]
 8007518:	e7d6      	b.n	80074c8 <_malloc_r+0xa8>
 800751a:	bf00      	nop
 800751c:	200017c8 	.word	0x200017c8

08007520 <__malloc_lock>:
 8007520:	4801      	ldr	r0, [pc, #4]	@ (8007528 <__malloc_lock+0x8>)
 8007522:	f7ff bf0f 	b.w	8007344 <__retarget_lock_acquire_recursive>
 8007526:	bf00      	nop
 8007528:	200017c0 	.word	0x200017c0

0800752c <__malloc_unlock>:
 800752c:	4801      	ldr	r0, [pc, #4]	@ (8007534 <__malloc_unlock+0x8>)
 800752e:	f7ff bf0a 	b.w	8007346 <__retarget_lock_release_recursive>
 8007532:	bf00      	nop
 8007534:	200017c0 	.word	0x200017c0

08007538 <__ssputs_r>:
 8007538:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800753c:	688e      	ldr	r6, [r1, #8]
 800753e:	461f      	mov	r7, r3
 8007540:	42be      	cmp	r6, r7
 8007542:	680b      	ldr	r3, [r1, #0]
 8007544:	4682      	mov	sl, r0
 8007546:	460c      	mov	r4, r1
 8007548:	4690      	mov	r8, r2
 800754a:	d82d      	bhi.n	80075a8 <__ssputs_r+0x70>
 800754c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007550:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8007554:	d026      	beq.n	80075a4 <__ssputs_r+0x6c>
 8007556:	6965      	ldr	r5, [r4, #20]
 8007558:	6909      	ldr	r1, [r1, #16]
 800755a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800755e:	eba3 0901 	sub.w	r9, r3, r1
 8007562:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007566:	1c7b      	adds	r3, r7, #1
 8007568:	444b      	add	r3, r9
 800756a:	106d      	asrs	r5, r5, #1
 800756c:	429d      	cmp	r5, r3
 800756e:	bf38      	it	cc
 8007570:	461d      	movcc	r5, r3
 8007572:	0553      	lsls	r3, r2, #21
 8007574:	d527      	bpl.n	80075c6 <__ssputs_r+0x8e>
 8007576:	4629      	mov	r1, r5
 8007578:	f7ff ff52 	bl	8007420 <_malloc_r>
 800757c:	4606      	mov	r6, r0
 800757e:	b360      	cbz	r0, 80075da <__ssputs_r+0xa2>
 8007580:	6921      	ldr	r1, [r4, #16]
 8007582:	464a      	mov	r2, r9
 8007584:	f000 fae8 	bl	8007b58 <memcpy>
 8007588:	89a3      	ldrh	r3, [r4, #12]
 800758a:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800758e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007592:	81a3      	strh	r3, [r4, #12]
 8007594:	6126      	str	r6, [r4, #16]
 8007596:	6165      	str	r5, [r4, #20]
 8007598:	444e      	add	r6, r9
 800759a:	eba5 0509 	sub.w	r5, r5, r9
 800759e:	6026      	str	r6, [r4, #0]
 80075a0:	60a5      	str	r5, [r4, #8]
 80075a2:	463e      	mov	r6, r7
 80075a4:	42be      	cmp	r6, r7
 80075a6:	d900      	bls.n	80075aa <__ssputs_r+0x72>
 80075a8:	463e      	mov	r6, r7
 80075aa:	6820      	ldr	r0, [r4, #0]
 80075ac:	4632      	mov	r2, r6
 80075ae:	4641      	mov	r1, r8
 80075b0:	f000 faa8 	bl	8007b04 <memmove>
 80075b4:	68a3      	ldr	r3, [r4, #8]
 80075b6:	1b9b      	subs	r3, r3, r6
 80075b8:	60a3      	str	r3, [r4, #8]
 80075ba:	6823      	ldr	r3, [r4, #0]
 80075bc:	4433      	add	r3, r6
 80075be:	6023      	str	r3, [r4, #0]
 80075c0:	2000      	movs	r0, #0
 80075c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075c6:	462a      	mov	r2, r5
 80075c8:	f000 fad4 	bl	8007b74 <_realloc_r>
 80075cc:	4606      	mov	r6, r0
 80075ce:	2800      	cmp	r0, #0
 80075d0:	d1e0      	bne.n	8007594 <__ssputs_r+0x5c>
 80075d2:	6921      	ldr	r1, [r4, #16]
 80075d4:	4650      	mov	r0, sl
 80075d6:	f7ff feb7 	bl	8007348 <_free_r>
 80075da:	230c      	movs	r3, #12
 80075dc:	f8ca 3000 	str.w	r3, [sl]
 80075e0:	89a3      	ldrh	r3, [r4, #12]
 80075e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80075e6:	81a3      	strh	r3, [r4, #12]
 80075e8:	f04f 30ff 	mov.w	r0, #4294967295
 80075ec:	e7e9      	b.n	80075c2 <__ssputs_r+0x8a>
	...

080075f0 <_svfiprintf_r>:
 80075f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075f4:	4698      	mov	r8, r3
 80075f6:	898b      	ldrh	r3, [r1, #12]
 80075f8:	061b      	lsls	r3, r3, #24
 80075fa:	b09d      	sub	sp, #116	@ 0x74
 80075fc:	4607      	mov	r7, r0
 80075fe:	460d      	mov	r5, r1
 8007600:	4614      	mov	r4, r2
 8007602:	d510      	bpl.n	8007626 <_svfiprintf_r+0x36>
 8007604:	690b      	ldr	r3, [r1, #16]
 8007606:	b973      	cbnz	r3, 8007626 <_svfiprintf_r+0x36>
 8007608:	2140      	movs	r1, #64	@ 0x40
 800760a:	f7ff ff09 	bl	8007420 <_malloc_r>
 800760e:	6028      	str	r0, [r5, #0]
 8007610:	6128      	str	r0, [r5, #16]
 8007612:	b930      	cbnz	r0, 8007622 <_svfiprintf_r+0x32>
 8007614:	230c      	movs	r3, #12
 8007616:	603b      	str	r3, [r7, #0]
 8007618:	f04f 30ff 	mov.w	r0, #4294967295
 800761c:	b01d      	add	sp, #116	@ 0x74
 800761e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007622:	2340      	movs	r3, #64	@ 0x40
 8007624:	616b      	str	r3, [r5, #20]
 8007626:	2300      	movs	r3, #0
 8007628:	9309      	str	r3, [sp, #36]	@ 0x24
 800762a:	2320      	movs	r3, #32
 800762c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8007630:	f8cd 800c 	str.w	r8, [sp, #12]
 8007634:	2330      	movs	r3, #48	@ 0x30
 8007636:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80077d4 <_svfiprintf_r+0x1e4>
 800763a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800763e:	f04f 0901 	mov.w	r9, #1
 8007642:	4623      	mov	r3, r4
 8007644:	469a      	mov	sl, r3
 8007646:	f813 2b01 	ldrb.w	r2, [r3], #1
 800764a:	b10a      	cbz	r2, 8007650 <_svfiprintf_r+0x60>
 800764c:	2a25      	cmp	r2, #37	@ 0x25
 800764e:	d1f9      	bne.n	8007644 <_svfiprintf_r+0x54>
 8007650:	ebba 0b04 	subs.w	fp, sl, r4
 8007654:	d00b      	beq.n	800766e <_svfiprintf_r+0x7e>
 8007656:	465b      	mov	r3, fp
 8007658:	4622      	mov	r2, r4
 800765a:	4629      	mov	r1, r5
 800765c:	4638      	mov	r0, r7
 800765e:	f7ff ff6b 	bl	8007538 <__ssputs_r>
 8007662:	3001      	adds	r0, #1
 8007664:	f000 80a7 	beq.w	80077b6 <_svfiprintf_r+0x1c6>
 8007668:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800766a:	445a      	add	r2, fp
 800766c:	9209      	str	r2, [sp, #36]	@ 0x24
 800766e:	f89a 3000 	ldrb.w	r3, [sl]
 8007672:	2b00      	cmp	r3, #0
 8007674:	f000 809f 	beq.w	80077b6 <_svfiprintf_r+0x1c6>
 8007678:	2300      	movs	r3, #0
 800767a:	f04f 32ff 	mov.w	r2, #4294967295
 800767e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007682:	f10a 0a01 	add.w	sl, sl, #1
 8007686:	9304      	str	r3, [sp, #16]
 8007688:	9307      	str	r3, [sp, #28]
 800768a:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800768e:	931a      	str	r3, [sp, #104]	@ 0x68
 8007690:	4654      	mov	r4, sl
 8007692:	2205      	movs	r2, #5
 8007694:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007698:	484e      	ldr	r0, [pc, #312]	@ (80077d4 <_svfiprintf_r+0x1e4>)
 800769a:	f7f8 fda1 	bl	80001e0 <memchr>
 800769e:	9a04      	ldr	r2, [sp, #16]
 80076a0:	b9d8      	cbnz	r0, 80076da <_svfiprintf_r+0xea>
 80076a2:	06d0      	lsls	r0, r2, #27
 80076a4:	bf44      	itt	mi
 80076a6:	2320      	movmi	r3, #32
 80076a8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80076ac:	0711      	lsls	r1, r2, #28
 80076ae:	bf44      	itt	mi
 80076b0:	232b      	movmi	r3, #43	@ 0x2b
 80076b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80076b6:	f89a 3000 	ldrb.w	r3, [sl]
 80076ba:	2b2a      	cmp	r3, #42	@ 0x2a
 80076bc:	d015      	beq.n	80076ea <_svfiprintf_r+0xfa>
 80076be:	9a07      	ldr	r2, [sp, #28]
 80076c0:	4654      	mov	r4, sl
 80076c2:	2000      	movs	r0, #0
 80076c4:	f04f 0c0a 	mov.w	ip, #10
 80076c8:	4621      	mov	r1, r4
 80076ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 80076ce:	3b30      	subs	r3, #48	@ 0x30
 80076d0:	2b09      	cmp	r3, #9
 80076d2:	d94b      	bls.n	800776c <_svfiprintf_r+0x17c>
 80076d4:	b1b0      	cbz	r0, 8007704 <_svfiprintf_r+0x114>
 80076d6:	9207      	str	r2, [sp, #28]
 80076d8:	e014      	b.n	8007704 <_svfiprintf_r+0x114>
 80076da:	eba0 0308 	sub.w	r3, r0, r8
 80076de:	fa09 f303 	lsl.w	r3, r9, r3
 80076e2:	4313      	orrs	r3, r2
 80076e4:	9304      	str	r3, [sp, #16]
 80076e6:	46a2      	mov	sl, r4
 80076e8:	e7d2      	b.n	8007690 <_svfiprintf_r+0xa0>
 80076ea:	9b03      	ldr	r3, [sp, #12]
 80076ec:	1d19      	adds	r1, r3, #4
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	9103      	str	r1, [sp, #12]
 80076f2:	2b00      	cmp	r3, #0
 80076f4:	bfbb      	ittet	lt
 80076f6:	425b      	neglt	r3, r3
 80076f8:	f042 0202 	orrlt.w	r2, r2, #2
 80076fc:	9307      	strge	r3, [sp, #28]
 80076fe:	9307      	strlt	r3, [sp, #28]
 8007700:	bfb8      	it	lt
 8007702:	9204      	strlt	r2, [sp, #16]
 8007704:	7823      	ldrb	r3, [r4, #0]
 8007706:	2b2e      	cmp	r3, #46	@ 0x2e
 8007708:	d10a      	bne.n	8007720 <_svfiprintf_r+0x130>
 800770a:	7863      	ldrb	r3, [r4, #1]
 800770c:	2b2a      	cmp	r3, #42	@ 0x2a
 800770e:	d132      	bne.n	8007776 <_svfiprintf_r+0x186>
 8007710:	9b03      	ldr	r3, [sp, #12]
 8007712:	1d1a      	adds	r2, r3, #4
 8007714:	681b      	ldr	r3, [r3, #0]
 8007716:	9203      	str	r2, [sp, #12]
 8007718:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800771c:	3402      	adds	r4, #2
 800771e:	9305      	str	r3, [sp, #20]
 8007720:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80077e4 <_svfiprintf_r+0x1f4>
 8007724:	7821      	ldrb	r1, [r4, #0]
 8007726:	2203      	movs	r2, #3
 8007728:	4650      	mov	r0, sl
 800772a:	f7f8 fd59 	bl	80001e0 <memchr>
 800772e:	b138      	cbz	r0, 8007740 <_svfiprintf_r+0x150>
 8007730:	9b04      	ldr	r3, [sp, #16]
 8007732:	eba0 000a 	sub.w	r0, r0, sl
 8007736:	2240      	movs	r2, #64	@ 0x40
 8007738:	4082      	lsls	r2, r0
 800773a:	4313      	orrs	r3, r2
 800773c:	3401      	adds	r4, #1
 800773e:	9304      	str	r3, [sp, #16]
 8007740:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007744:	4824      	ldr	r0, [pc, #144]	@ (80077d8 <_svfiprintf_r+0x1e8>)
 8007746:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800774a:	2206      	movs	r2, #6
 800774c:	f7f8 fd48 	bl	80001e0 <memchr>
 8007750:	2800      	cmp	r0, #0
 8007752:	d036      	beq.n	80077c2 <_svfiprintf_r+0x1d2>
 8007754:	4b21      	ldr	r3, [pc, #132]	@ (80077dc <_svfiprintf_r+0x1ec>)
 8007756:	bb1b      	cbnz	r3, 80077a0 <_svfiprintf_r+0x1b0>
 8007758:	9b03      	ldr	r3, [sp, #12]
 800775a:	3307      	adds	r3, #7
 800775c:	f023 0307 	bic.w	r3, r3, #7
 8007760:	3308      	adds	r3, #8
 8007762:	9303      	str	r3, [sp, #12]
 8007764:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007766:	4433      	add	r3, r6
 8007768:	9309      	str	r3, [sp, #36]	@ 0x24
 800776a:	e76a      	b.n	8007642 <_svfiprintf_r+0x52>
 800776c:	fb0c 3202 	mla	r2, ip, r2, r3
 8007770:	460c      	mov	r4, r1
 8007772:	2001      	movs	r0, #1
 8007774:	e7a8      	b.n	80076c8 <_svfiprintf_r+0xd8>
 8007776:	2300      	movs	r3, #0
 8007778:	3401      	adds	r4, #1
 800777a:	9305      	str	r3, [sp, #20]
 800777c:	4619      	mov	r1, r3
 800777e:	f04f 0c0a 	mov.w	ip, #10
 8007782:	4620      	mov	r0, r4
 8007784:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007788:	3a30      	subs	r2, #48	@ 0x30
 800778a:	2a09      	cmp	r2, #9
 800778c:	d903      	bls.n	8007796 <_svfiprintf_r+0x1a6>
 800778e:	2b00      	cmp	r3, #0
 8007790:	d0c6      	beq.n	8007720 <_svfiprintf_r+0x130>
 8007792:	9105      	str	r1, [sp, #20]
 8007794:	e7c4      	b.n	8007720 <_svfiprintf_r+0x130>
 8007796:	fb0c 2101 	mla	r1, ip, r1, r2
 800779a:	4604      	mov	r4, r0
 800779c:	2301      	movs	r3, #1
 800779e:	e7f0      	b.n	8007782 <_svfiprintf_r+0x192>
 80077a0:	ab03      	add	r3, sp, #12
 80077a2:	9300      	str	r3, [sp, #0]
 80077a4:	462a      	mov	r2, r5
 80077a6:	4b0e      	ldr	r3, [pc, #56]	@ (80077e0 <_svfiprintf_r+0x1f0>)
 80077a8:	a904      	add	r1, sp, #16
 80077aa:	4638      	mov	r0, r7
 80077ac:	f3af 8000 	nop.w
 80077b0:	1c42      	adds	r2, r0, #1
 80077b2:	4606      	mov	r6, r0
 80077b4:	d1d6      	bne.n	8007764 <_svfiprintf_r+0x174>
 80077b6:	89ab      	ldrh	r3, [r5, #12]
 80077b8:	065b      	lsls	r3, r3, #25
 80077ba:	f53f af2d 	bmi.w	8007618 <_svfiprintf_r+0x28>
 80077be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80077c0:	e72c      	b.n	800761c <_svfiprintf_r+0x2c>
 80077c2:	ab03      	add	r3, sp, #12
 80077c4:	9300      	str	r3, [sp, #0]
 80077c6:	462a      	mov	r2, r5
 80077c8:	4b05      	ldr	r3, [pc, #20]	@ (80077e0 <_svfiprintf_r+0x1f0>)
 80077ca:	a904      	add	r1, sp, #16
 80077cc:	4638      	mov	r0, r7
 80077ce:	f000 f879 	bl	80078c4 <_printf_i>
 80077d2:	e7ed      	b.n	80077b0 <_svfiprintf_r+0x1c0>
 80077d4:	080098b9 	.word	0x080098b9
 80077d8:	080098c3 	.word	0x080098c3
 80077dc:	00000000 	.word	0x00000000
 80077e0:	08007539 	.word	0x08007539
 80077e4:	080098bf 	.word	0x080098bf

080077e8 <_printf_common>:
 80077e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80077ec:	4616      	mov	r6, r2
 80077ee:	4698      	mov	r8, r3
 80077f0:	688a      	ldr	r2, [r1, #8]
 80077f2:	690b      	ldr	r3, [r1, #16]
 80077f4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80077f8:	4293      	cmp	r3, r2
 80077fa:	bfb8      	it	lt
 80077fc:	4613      	movlt	r3, r2
 80077fe:	6033      	str	r3, [r6, #0]
 8007800:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8007804:	4607      	mov	r7, r0
 8007806:	460c      	mov	r4, r1
 8007808:	b10a      	cbz	r2, 800780e <_printf_common+0x26>
 800780a:	3301      	adds	r3, #1
 800780c:	6033      	str	r3, [r6, #0]
 800780e:	6823      	ldr	r3, [r4, #0]
 8007810:	0699      	lsls	r1, r3, #26
 8007812:	bf42      	ittt	mi
 8007814:	6833      	ldrmi	r3, [r6, #0]
 8007816:	3302      	addmi	r3, #2
 8007818:	6033      	strmi	r3, [r6, #0]
 800781a:	6825      	ldr	r5, [r4, #0]
 800781c:	f015 0506 	ands.w	r5, r5, #6
 8007820:	d106      	bne.n	8007830 <_printf_common+0x48>
 8007822:	f104 0a19 	add.w	sl, r4, #25
 8007826:	68e3      	ldr	r3, [r4, #12]
 8007828:	6832      	ldr	r2, [r6, #0]
 800782a:	1a9b      	subs	r3, r3, r2
 800782c:	42ab      	cmp	r3, r5
 800782e:	dc26      	bgt.n	800787e <_printf_common+0x96>
 8007830:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8007834:	6822      	ldr	r2, [r4, #0]
 8007836:	3b00      	subs	r3, #0
 8007838:	bf18      	it	ne
 800783a:	2301      	movne	r3, #1
 800783c:	0692      	lsls	r2, r2, #26
 800783e:	d42b      	bmi.n	8007898 <_printf_common+0xb0>
 8007840:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8007844:	4641      	mov	r1, r8
 8007846:	4638      	mov	r0, r7
 8007848:	47c8      	blx	r9
 800784a:	3001      	adds	r0, #1
 800784c:	d01e      	beq.n	800788c <_printf_common+0xa4>
 800784e:	6823      	ldr	r3, [r4, #0]
 8007850:	6922      	ldr	r2, [r4, #16]
 8007852:	f003 0306 	and.w	r3, r3, #6
 8007856:	2b04      	cmp	r3, #4
 8007858:	bf02      	ittt	eq
 800785a:	68e5      	ldreq	r5, [r4, #12]
 800785c:	6833      	ldreq	r3, [r6, #0]
 800785e:	1aed      	subeq	r5, r5, r3
 8007860:	68a3      	ldr	r3, [r4, #8]
 8007862:	bf0c      	ite	eq
 8007864:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8007868:	2500      	movne	r5, #0
 800786a:	4293      	cmp	r3, r2
 800786c:	bfc4      	itt	gt
 800786e:	1a9b      	subgt	r3, r3, r2
 8007870:	18ed      	addgt	r5, r5, r3
 8007872:	2600      	movs	r6, #0
 8007874:	341a      	adds	r4, #26
 8007876:	42b5      	cmp	r5, r6
 8007878:	d11a      	bne.n	80078b0 <_printf_common+0xc8>
 800787a:	2000      	movs	r0, #0
 800787c:	e008      	b.n	8007890 <_printf_common+0xa8>
 800787e:	2301      	movs	r3, #1
 8007880:	4652      	mov	r2, sl
 8007882:	4641      	mov	r1, r8
 8007884:	4638      	mov	r0, r7
 8007886:	47c8      	blx	r9
 8007888:	3001      	adds	r0, #1
 800788a:	d103      	bne.n	8007894 <_printf_common+0xac>
 800788c:	f04f 30ff 	mov.w	r0, #4294967295
 8007890:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007894:	3501      	adds	r5, #1
 8007896:	e7c6      	b.n	8007826 <_printf_common+0x3e>
 8007898:	18e1      	adds	r1, r4, r3
 800789a:	1c5a      	adds	r2, r3, #1
 800789c:	2030      	movs	r0, #48	@ 0x30
 800789e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80078a2:	4422      	add	r2, r4
 80078a4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80078a8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80078ac:	3302      	adds	r3, #2
 80078ae:	e7c7      	b.n	8007840 <_printf_common+0x58>
 80078b0:	2301      	movs	r3, #1
 80078b2:	4622      	mov	r2, r4
 80078b4:	4641      	mov	r1, r8
 80078b6:	4638      	mov	r0, r7
 80078b8:	47c8      	blx	r9
 80078ba:	3001      	adds	r0, #1
 80078bc:	d0e6      	beq.n	800788c <_printf_common+0xa4>
 80078be:	3601      	adds	r6, #1
 80078c0:	e7d9      	b.n	8007876 <_printf_common+0x8e>
	...

080078c4 <_printf_i>:
 80078c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80078c8:	7e0f      	ldrb	r7, [r1, #24]
 80078ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80078cc:	2f78      	cmp	r7, #120	@ 0x78
 80078ce:	4691      	mov	r9, r2
 80078d0:	4680      	mov	r8, r0
 80078d2:	460c      	mov	r4, r1
 80078d4:	469a      	mov	sl, r3
 80078d6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80078da:	d807      	bhi.n	80078ec <_printf_i+0x28>
 80078dc:	2f62      	cmp	r7, #98	@ 0x62
 80078de:	d80a      	bhi.n	80078f6 <_printf_i+0x32>
 80078e0:	2f00      	cmp	r7, #0
 80078e2:	f000 80d2 	beq.w	8007a8a <_printf_i+0x1c6>
 80078e6:	2f58      	cmp	r7, #88	@ 0x58
 80078e8:	f000 80b9 	beq.w	8007a5e <_printf_i+0x19a>
 80078ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80078f0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80078f4:	e03a      	b.n	800796c <_printf_i+0xa8>
 80078f6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80078fa:	2b15      	cmp	r3, #21
 80078fc:	d8f6      	bhi.n	80078ec <_printf_i+0x28>
 80078fe:	a101      	add	r1, pc, #4	@ (adr r1, 8007904 <_printf_i+0x40>)
 8007900:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007904:	0800795d 	.word	0x0800795d
 8007908:	08007971 	.word	0x08007971
 800790c:	080078ed 	.word	0x080078ed
 8007910:	080078ed 	.word	0x080078ed
 8007914:	080078ed 	.word	0x080078ed
 8007918:	080078ed 	.word	0x080078ed
 800791c:	08007971 	.word	0x08007971
 8007920:	080078ed 	.word	0x080078ed
 8007924:	080078ed 	.word	0x080078ed
 8007928:	080078ed 	.word	0x080078ed
 800792c:	080078ed 	.word	0x080078ed
 8007930:	08007a71 	.word	0x08007a71
 8007934:	0800799b 	.word	0x0800799b
 8007938:	08007a2b 	.word	0x08007a2b
 800793c:	080078ed 	.word	0x080078ed
 8007940:	080078ed 	.word	0x080078ed
 8007944:	08007a93 	.word	0x08007a93
 8007948:	080078ed 	.word	0x080078ed
 800794c:	0800799b 	.word	0x0800799b
 8007950:	080078ed 	.word	0x080078ed
 8007954:	080078ed 	.word	0x080078ed
 8007958:	08007a33 	.word	0x08007a33
 800795c:	6833      	ldr	r3, [r6, #0]
 800795e:	1d1a      	adds	r2, r3, #4
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	6032      	str	r2, [r6, #0]
 8007964:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8007968:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800796c:	2301      	movs	r3, #1
 800796e:	e09d      	b.n	8007aac <_printf_i+0x1e8>
 8007970:	6833      	ldr	r3, [r6, #0]
 8007972:	6820      	ldr	r0, [r4, #0]
 8007974:	1d19      	adds	r1, r3, #4
 8007976:	6031      	str	r1, [r6, #0]
 8007978:	0606      	lsls	r6, r0, #24
 800797a:	d501      	bpl.n	8007980 <_printf_i+0xbc>
 800797c:	681d      	ldr	r5, [r3, #0]
 800797e:	e003      	b.n	8007988 <_printf_i+0xc4>
 8007980:	0645      	lsls	r5, r0, #25
 8007982:	d5fb      	bpl.n	800797c <_printf_i+0xb8>
 8007984:	f9b3 5000 	ldrsh.w	r5, [r3]
 8007988:	2d00      	cmp	r5, #0
 800798a:	da03      	bge.n	8007994 <_printf_i+0xd0>
 800798c:	232d      	movs	r3, #45	@ 0x2d
 800798e:	426d      	negs	r5, r5
 8007990:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007994:	4859      	ldr	r0, [pc, #356]	@ (8007afc <_printf_i+0x238>)
 8007996:	230a      	movs	r3, #10
 8007998:	e011      	b.n	80079be <_printf_i+0xfa>
 800799a:	6821      	ldr	r1, [r4, #0]
 800799c:	6833      	ldr	r3, [r6, #0]
 800799e:	0608      	lsls	r0, r1, #24
 80079a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80079a4:	d402      	bmi.n	80079ac <_printf_i+0xe8>
 80079a6:	0649      	lsls	r1, r1, #25
 80079a8:	bf48      	it	mi
 80079aa:	b2ad      	uxthmi	r5, r5
 80079ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80079ae:	4853      	ldr	r0, [pc, #332]	@ (8007afc <_printf_i+0x238>)
 80079b0:	6033      	str	r3, [r6, #0]
 80079b2:	bf14      	ite	ne
 80079b4:	230a      	movne	r3, #10
 80079b6:	2308      	moveq	r3, #8
 80079b8:	2100      	movs	r1, #0
 80079ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80079be:	6866      	ldr	r6, [r4, #4]
 80079c0:	60a6      	str	r6, [r4, #8]
 80079c2:	2e00      	cmp	r6, #0
 80079c4:	bfa2      	ittt	ge
 80079c6:	6821      	ldrge	r1, [r4, #0]
 80079c8:	f021 0104 	bicge.w	r1, r1, #4
 80079cc:	6021      	strge	r1, [r4, #0]
 80079ce:	b90d      	cbnz	r5, 80079d4 <_printf_i+0x110>
 80079d0:	2e00      	cmp	r6, #0
 80079d2:	d04b      	beq.n	8007a6c <_printf_i+0x1a8>
 80079d4:	4616      	mov	r6, r2
 80079d6:	fbb5 f1f3 	udiv	r1, r5, r3
 80079da:	fb03 5711 	mls	r7, r3, r1, r5
 80079de:	5dc7      	ldrb	r7, [r0, r7]
 80079e0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80079e4:	462f      	mov	r7, r5
 80079e6:	42bb      	cmp	r3, r7
 80079e8:	460d      	mov	r5, r1
 80079ea:	d9f4      	bls.n	80079d6 <_printf_i+0x112>
 80079ec:	2b08      	cmp	r3, #8
 80079ee:	d10b      	bne.n	8007a08 <_printf_i+0x144>
 80079f0:	6823      	ldr	r3, [r4, #0]
 80079f2:	07df      	lsls	r7, r3, #31
 80079f4:	d508      	bpl.n	8007a08 <_printf_i+0x144>
 80079f6:	6923      	ldr	r3, [r4, #16]
 80079f8:	6861      	ldr	r1, [r4, #4]
 80079fa:	4299      	cmp	r1, r3
 80079fc:	bfde      	ittt	le
 80079fe:	2330      	movle	r3, #48	@ 0x30
 8007a00:	f806 3c01 	strble.w	r3, [r6, #-1]
 8007a04:	f106 36ff 	addle.w	r6, r6, #4294967295
 8007a08:	1b92      	subs	r2, r2, r6
 8007a0a:	6122      	str	r2, [r4, #16]
 8007a0c:	f8cd a000 	str.w	sl, [sp]
 8007a10:	464b      	mov	r3, r9
 8007a12:	aa03      	add	r2, sp, #12
 8007a14:	4621      	mov	r1, r4
 8007a16:	4640      	mov	r0, r8
 8007a18:	f7ff fee6 	bl	80077e8 <_printf_common>
 8007a1c:	3001      	adds	r0, #1
 8007a1e:	d14a      	bne.n	8007ab6 <_printf_i+0x1f2>
 8007a20:	f04f 30ff 	mov.w	r0, #4294967295
 8007a24:	b004      	add	sp, #16
 8007a26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007a2a:	6823      	ldr	r3, [r4, #0]
 8007a2c:	f043 0320 	orr.w	r3, r3, #32
 8007a30:	6023      	str	r3, [r4, #0]
 8007a32:	4833      	ldr	r0, [pc, #204]	@ (8007b00 <_printf_i+0x23c>)
 8007a34:	2778      	movs	r7, #120	@ 0x78
 8007a36:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8007a3a:	6823      	ldr	r3, [r4, #0]
 8007a3c:	6831      	ldr	r1, [r6, #0]
 8007a3e:	061f      	lsls	r7, r3, #24
 8007a40:	f851 5b04 	ldr.w	r5, [r1], #4
 8007a44:	d402      	bmi.n	8007a4c <_printf_i+0x188>
 8007a46:	065f      	lsls	r7, r3, #25
 8007a48:	bf48      	it	mi
 8007a4a:	b2ad      	uxthmi	r5, r5
 8007a4c:	6031      	str	r1, [r6, #0]
 8007a4e:	07d9      	lsls	r1, r3, #31
 8007a50:	bf44      	itt	mi
 8007a52:	f043 0320 	orrmi.w	r3, r3, #32
 8007a56:	6023      	strmi	r3, [r4, #0]
 8007a58:	b11d      	cbz	r5, 8007a62 <_printf_i+0x19e>
 8007a5a:	2310      	movs	r3, #16
 8007a5c:	e7ac      	b.n	80079b8 <_printf_i+0xf4>
 8007a5e:	4827      	ldr	r0, [pc, #156]	@ (8007afc <_printf_i+0x238>)
 8007a60:	e7e9      	b.n	8007a36 <_printf_i+0x172>
 8007a62:	6823      	ldr	r3, [r4, #0]
 8007a64:	f023 0320 	bic.w	r3, r3, #32
 8007a68:	6023      	str	r3, [r4, #0]
 8007a6a:	e7f6      	b.n	8007a5a <_printf_i+0x196>
 8007a6c:	4616      	mov	r6, r2
 8007a6e:	e7bd      	b.n	80079ec <_printf_i+0x128>
 8007a70:	6833      	ldr	r3, [r6, #0]
 8007a72:	6825      	ldr	r5, [r4, #0]
 8007a74:	6961      	ldr	r1, [r4, #20]
 8007a76:	1d18      	adds	r0, r3, #4
 8007a78:	6030      	str	r0, [r6, #0]
 8007a7a:	062e      	lsls	r6, r5, #24
 8007a7c:	681b      	ldr	r3, [r3, #0]
 8007a7e:	d501      	bpl.n	8007a84 <_printf_i+0x1c0>
 8007a80:	6019      	str	r1, [r3, #0]
 8007a82:	e002      	b.n	8007a8a <_printf_i+0x1c6>
 8007a84:	0668      	lsls	r0, r5, #25
 8007a86:	d5fb      	bpl.n	8007a80 <_printf_i+0x1bc>
 8007a88:	8019      	strh	r1, [r3, #0]
 8007a8a:	2300      	movs	r3, #0
 8007a8c:	6123      	str	r3, [r4, #16]
 8007a8e:	4616      	mov	r6, r2
 8007a90:	e7bc      	b.n	8007a0c <_printf_i+0x148>
 8007a92:	6833      	ldr	r3, [r6, #0]
 8007a94:	1d1a      	adds	r2, r3, #4
 8007a96:	6032      	str	r2, [r6, #0]
 8007a98:	681e      	ldr	r6, [r3, #0]
 8007a9a:	6862      	ldr	r2, [r4, #4]
 8007a9c:	2100      	movs	r1, #0
 8007a9e:	4630      	mov	r0, r6
 8007aa0:	f7f8 fb9e 	bl	80001e0 <memchr>
 8007aa4:	b108      	cbz	r0, 8007aaa <_printf_i+0x1e6>
 8007aa6:	1b80      	subs	r0, r0, r6
 8007aa8:	6060      	str	r0, [r4, #4]
 8007aaa:	6863      	ldr	r3, [r4, #4]
 8007aac:	6123      	str	r3, [r4, #16]
 8007aae:	2300      	movs	r3, #0
 8007ab0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8007ab4:	e7aa      	b.n	8007a0c <_printf_i+0x148>
 8007ab6:	6923      	ldr	r3, [r4, #16]
 8007ab8:	4632      	mov	r2, r6
 8007aba:	4649      	mov	r1, r9
 8007abc:	4640      	mov	r0, r8
 8007abe:	47d0      	blx	sl
 8007ac0:	3001      	adds	r0, #1
 8007ac2:	d0ad      	beq.n	8007a20 <_printf_i+0x15c>
 8007ac4:	6823      	ldr	r3, [r4, #0]
 8007ac6:	079b      	lsls	r3, r3, #30
 8007ac8:	d413      	bmi.n	8007af2 <_printf_i+0x22e>
 8007aca:	68e0      	ldr	r0, [r4, #12]
 8007acc:	9b03      	ldr	r3, [sp, #12]
 8007ace:	4298      	cmp	r0, r3
 8007ad0:	bfb8      	it	lt
 8007ad2:	4618      	movlt	r0, r3
 8007ad4:	e7a6      	b.n	8007a24 <_printf_i+0x160>
 8007ad6:	2301      	movs	r3, #1
 8007ad8:	4632      	mov	r2, r6
 8007ada:	4649      	mov	r1, r9
 8007adc:	4640      	mov	r0, r8
 8007ade:	47d0      	blx	sl
 8007ae0:	3001      	adds	r0, #1
 8007ae2:	d09d      	beq.n	8007a20 <_printf_i+0x15c>
 8007ae4:	3501      	adds	r5, #1
 8007ae6:	68e3      	ldr	r3, [r4, #12]
 8007ae8:	9903      	ldr	r1, [sp, #12]
 8007aea:	1a5b      	subs	r3, r3, r1
 8007aec:	42ab      	cmp	r3, r5
 8007aee:	dcf2      	bgt.n	8007ad6 <_printf_i+0x212>
 8007af0:	e7eb      	b.n	8007aca <_printf_i+0x206>
 8007af2:	2500      	movs	r5, #0
 8007af4:	f104 0619 	add.w	r6, r4, #25
 8007af8:	e7f5      	b.n	8007ae6 <_printf_i+0x222>
 8007afa:	bf00      	nop
 8007afc:	080098ca 	.word	0x080098ca
 8007b00:	080098db 	.word	0x080098db

08007b04 <memmove>:
 8007b04:	4288      	cmp	r0, r1
 8007b06:	b510      	push	{r4, lr}
 8007b08:	eb01 0402 	add.w	r4, r1, r2
 8007b0c:	d902      	bls.n	8007b14 <memmove+0x10>
 8007b0e:	4284      	cmp	r4, r0
 8007b10:	4623      	mov	r3, r4
 8007b12:	d807      	bhi.n	8007b24 <memmove+0x20>
 8007b14:	1e43      	subs	r3, r0, #1
 8007b16:	42a1      	cmp	r1, r4
 8007b18:	d008      	beq.n	8007b2c <memmove+0x28>
 8007b1a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007b1e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007b22:	e7f8      	b.n	8007b16 <memmove+0x12>
 8007b24:	4402      	add	r2, r0
 8007b26:	4601      	mov	r1, r0
 8007b28:	428a      	cmp	r2, r1
 8007b2a:	d100      	bne.n	8007b2e <memmove+0x2a>
 8007b2c:	bd10      	pop	{r4, pc}
 8007b2e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007b32:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007b36:	e7f7      	b.n	8007b28 <memmove+0x24>

08007b38 <_sbrk_r>:
 8007b38:	b538      	push	{r3, r4, r5, lr}
 8007b3a:	4d06      	ldr	r5, [pc, #24]	@ (8007b54 <_sbrk_r+0x1c>)
 8007b3c:	2300      	movs	r3, #0
 8007b3e:	4604      	mov	r4, r0
 8007b40:	4608      	mov	r0, r1
 8007b42:	602b      	str	r3, [r5, #0]
 8007b44:	f7f9 fcd2 	bl	80014ec <_sbrk>
 8007b48:	1c43      	adds	r3, r0, #1
 8007b4a:	d102      	bne.n	8007b52 <_sbrk_r+0x1a>
 8007b4c:	682b      	ldr	r3, [r5, #0]
 8007b4e:	b103      	cbz	r3, 8007b52 <_sbrk_r+0x1a>
 8007b50:	6023      	str	r3, [r4, #0]
 8007b52:	bd38      	pop	{r3, r4, r5, pc}
 8007b54:	200017bc 	.word	0x200017bc

08007b58 <memcpy>:
 8007b58:	440a      	add	r2, r1
 8007b5a:	4291      	cmp	r1, r2
 8007b5c:	f100 33ff 	add.w	r3, r0, #4294967295
 8007b60:	d100      	bne.n	8007b64 <memcpy+0xc>
 8007b62:	4770      	bx	lr
 8007b64:	b510      	push	{r4, lr}
 8007b66:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007b6a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007b6e:	4291      	cmp	r1, r2
 8007b70:	d1f9      	bne.n	8007b66 <memcpy+0xe>
 8007b72:	bd10      	pop	{r4, pc}

08007b74 <_realloc_r>:
 8007b74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007b78:	4680      	mov	r8, r0
 8007b7a:	4615      	mov	r5, r2
 8007b7c:	460c      	mov	r4, r1
 8007b7e:	b921      	cbnz	r1, 8007b8a <_realloc_r+0x16>
 8007b80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007b84:	4611      	mov	r1, r2
 8007b86:	f7ff bc4b 	b.w	8007420 <_malloc_r>
 8007b8a:	b92a      	cbnz	r2, 8007b98 <_realloc_r+0x24>
 8007b8c:	f7ff fbdc 	bl	8007348 <_free_r>
 8007b90:	2400      	movs	r4, #0
 8007b92:	4620      	mov	r0, r4
 8007b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b98:	f000 f81a 	bl	8007bd0 <_malloc_usable_size_r>
 8007b9c:	4285      	cmp	r5, r0
 8007b9e:	4606      	mov	r6, r0
 8007ba0:	d802      	bhi.n	8007ba8 <_realloc_r+0x34>
 8007ba2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8007ba6:	d8f4      	bhi.n	8007b92 <_realloc_r+0x1e>
 8007ba8:	4629      	mov	r1, r5
 8007baa:	4640      	mov	r0, r8
 8007bac:	f7ff fc38 	bl	8007420 <_malloc_r>
 8007bb0:	4607      	mov	r7, r0
 8007bb2:	2800      	cmp	r0, #0
 8007bb4:	d0ec      	beq.n	8007b90 <_realloc_r+0x1c>
 8007bb6:	42b5      	cmp	r5, r6
 8007bb8:	462a      	mov	r2, r5
 8007bba:	4621      	mov	r1, r4
 8007bbc:	bf28      	it	cs
 8007bbe:	4632      	movcs	r2, r6
 8007bc0:	f7ff ffca 	bl	8007b58 <memcpy>
 8007bc4:	4621      	mov	r1, r4
 8007bc6:	4640      	mov	r0, r8
 8007bc8:	f7ff fbbe 	bl	8007348 <_free_r>
 8007bcc:	463c      	mov	r4, r7
 8007bce:	e7e0      	b.n	8007b92 <_realloc_r+0x1e>

08007bd0 <_malloc_usable_size_r>:
 8007bd0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007bd4:	1f18      	subs	r0, r3, #4
 8007bd6:	2b00      	cmp	r3, #0
 8007bd8:	bfbc      	itt	lt
 8007bda:	580b      	ldrlt	r3, [r1, r0]
 8007bdc:	18c0      	addlt	r0, r0, r3
 8007bde:	4770      	bx	lr

08007be0 <_init>:
 8007be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007be2:	bf00      	nop
 8007be4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007be6:	bc08      	pop	{r3}
 8007be8:	469e      	mov	lr, r3
 8007bea:	4770      	bx	lr

08007bec <_fini>:
 8007bec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bee:	bf00      	nop
 8007bf0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007bf2:	bc08      	pop	{r3}
 8007bf4:	469e      	mov	lr, r3
 8007bf6:	4770      	bx	lr
